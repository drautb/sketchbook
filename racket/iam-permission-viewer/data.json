{
  "PolicyEditorConfig": {
    "conditionOperators": [
      "ArnEquals",
      "ArnNotEquals",
      "ArnLike",
      "ArnNotLike",
      "BinaryEquals",
      "BinaryNotEquals",
      "StringEquals",
      "StringNotEquals",
      "StringEqualsIgnoreCase",
      "StringNotEqualsIgnoreCase",
      "StringLike",
      "StringNotLike",
      "Null",
      "NumericEquals",
      "NumericNotEquals",
      "NumericLessThan",
      "NumericLessThanEquals",
      "NumericGreaterThan",
      "NumericGreaterThanEquals",
      "DateEquals",
      "DateNotEquals",
      "DateLessThan",
      "DateLessThanEquals",
      "DateGreaterThan",
      "DateGreaterThanEquals",
      "Bool",
      "IpAddress",
      "NotIpAddress"
    ],
    "conditionKeys": [
      "aws:CurrentTime",
      "aws:EpochTime",
      "aws:MultiFactorAuthAge",
      "aws:MultiFactorAuthPresent",
      "aws:Referer",
      "aws:SecureTransport",
      "aws:SourceArn",
      "aws:SourceIp",
      "aws:TokenIssueTime",
      "aws:UserAgent",
      "aws:PrincipalType",
      "aws:SourceVpc",
      "aws:SourceVpce",
      "aws:userid",
      "aws:username"
    ],
    "serviceMap": {
      "AWS Database Migration Service": {
        "StringPrefix": "dms",
        "Actions": [
          "AddTagsToResource",
          "CreateEndpoint",
          "CreateReplicationInstance",
          "CreateReplicationSubnetGroup",
          "CreateReplicationTask",
          "DeleteEndpoint",
          "DeleteReplicationInstance",
          "DeleteReplicationSubnetGroup",
          "DeleteReplicationTask",
          "DescribeAccountAttributes",
          "DescribeConnections",
          "DescribeEndpointTypes",
          "DescribeEndpoints",
          "DescribeOrderableReplicationInstances",
          "DescribeRefreshSchemasStatus",
          "DescribeReplicationInstances",
          "DescribeReplicationSubnetGroups",
          "DescribeReplicationTasks",
          "DescribeSchemas",
          "DescribeTableStatistics",
          "ListTagsForResource",
          "ModifyEndpoint",
          "ModifyReplicationInstance",
          "ModifyReplicationSubnetGroup",
          "RefreshSchemas",
          "RemoveTagsFromResource",
          "StartReplicationTask",
          "StopReplicationTask",
          "TestConnection"
        ],
        "ARNFormat": "arn:aws:dms:<region>:<account>:<resource>",
        "ARNRegex": "arn:aws:dms:.+",
        "HasResource": false
      },
      "Amazon Mobile Targeting": {
        "StringPrefix": "mobiletargeting",
        "Actions": [
          "CreateImportJob",
          "CreateCampaign",
          "CreateSegment",
          "DeleteAdmChannel",
          "DeleteApnsChannel",
          "DeleteApnsSandboxChannel",
          "DeleteCampaign",
          "DeleteGcmChannel",
          "DeleteSegment",
          "GetAdmChannel",
          "GetApnsChannel",
          "GetApnsSandboxChannel",
          "GetApplicationSettings",
          "GetCampaign",
          "GetCampaignActivities",
          "GetCampaigns",
          "GetCampaignVersion",
          "GetCampaignVersions",
          "GetEndpoint",
          "GetGcmChannel",
          "GetImportJob",
          "GetImportJobs",
          "GetReports",
          "GetSegment",
          "GetSegmentImportJobs",
          "GetSegments",
          "GetSegmentVersion",
          "GetSegmentVersions",
          "UpdateAdmChannel",
          "UpdateApnsChannel",
          "UpdateApnsSandboxChannel",
          "UpdateApplicationSettings",
          "UpdateCampaign",
          "UpdateEndpoint",
          "UpdateEndpointsBatch",
          "UpdateGcmChannel",
          "UpdateSegment"
        ],
        "ARNFormat": "arn:aws:mobiletargeting:<region>:<account>:<resource>",
        "ARNRegex": "arn:aws:mobiletargeting:.+",
        "HasResource": true
      },
      "AWS Certificate Manager": {
        "StringPrefix": "acm",
        "Actions": [
          "AddTagsToCertificate",
          "DeleteCertificate",
          "DescribeCertificate",
          "GetCertificate",
          "ListCertificates",
          "ListTagsForCertificate",
          "RemoveTagsFromCertificate",
          "RequestCertificate",
          "ResendValidationEmail"
        ],
        "ARNFormat": "arn:aws:acm:<region>:<account_ID>:<arn_type>/<resource_id>",
        "ARNRegex": "arn:aws:[w+=/,.@-]+:[w+=/,.@-]*:[0-9]+:[w+=,.@-]+(/[w+=/,.@-]+)*",
        "HasResource": true
      },
      "Amazon EC2 Container Registry": {
        "StringPrefix": "ecr",
        "Actions": [
          "BatchCheckLayerAvailability",
          "BatchDeleteImage",
          "BatchGetImage",
          "CompleteLayerUpload",
          "CreateRepository",
          "DeleteRepository",
          "DeleteRepositoryPolicy",
          "DescribeRepositories",
          "GetAuthorizationToken",
          "GetDownloadUrlForLayer",
          "GetRepositoryPolicy",
          "InitiateLayerUpload",
          "ListImages",
          "PutImage",
          "SetRepositoryPolicy",
          "UploadLayerPart"
        ],
        "ARNFormat": "arn:aws:ecr:<region>:<account_ID>:repository/<repository_name>",
        "ARNRegex": "arn:aws:ecr+:[^:]+:[0-9]{12}:repository/.*",
        "HasResource": true
      },
      "Amazon API Gateway": {
        "StringPrefix": "execute-api",
        "Actions": [
          "Invoke",
          "InvalidateCache"
        ],
        "ARNFormat": "arn:aws:execute-api:<region>:<account_id>:<api_id>/<stage>/<method>/<api_specific_resource_path>",
        "ARNRegex": "^arn:aws:execute-api:.+",
        "HasResource": true
      },
      "Manage - Amazon API Gateway": {
        "StringPrefix": "apigateway",
        "Actions": [
          "DELETE",
          "GET",
          "HEAD",
          "OPTIONS",
          "PATCH",
          "POST",
          "PUT"
        ],
        "ARNFormat": "arn:aws:apigateway:<region>::<api_gateway_resource_path>",
        "ARNRegex": "^arn:aws:apigateway:.+",
        "HasResource": true
      },
      "AWS Application Discovery Service": {
        "StringPrefix": "discovery",
        "Actions": [
          "CreateTags",
          "DeleteTags",
          "DescribeAgents",
          "DescribeConfigurations",
          "DescribeExportConfigurations",
          "DescribeTags",
          "ExportConfigurations",
          "ListConfigurations",
          "StartDataCollectionByAgentIds",
          "StopDataCollectionByAgentIds"
        ]
      },
      "Amazon AppStream 2.0": {
        "StringPrefix": "appstream",
        "ARNRegex": "^arn:aws:appstream:.+",
        "ARNFormat": "arn:aws:appstream:<region>:<account_ID>:<resourceType>/<resourceid>",
        "HasResource": true,
        "Actions": [
          "AssociateFleet",
          "CreateFleet",
          "CreateStack",
          "CreateStreamingURL",
          "DeleteFleet",
          "DeleteStack",
          "DescribeFleets",
          "DescribeImages",
          "DescribeSessions",
          "DescribeStacks",
          "DisassociateFleet",
          "ExpireSession",
          "ListAssociatedFleets",
          "ListAssociatedStacks",
          "StartFleet",
          "StopFleet",
          "UpdateFleet",
          "UpdateStack"
        ]
      },
      "AWS Batch": {
        "StringPrefix": "batch",
        "Actions": [
          "CancelJob",
          "CreateComputeEnvironment",
          "CreateJobQueue",
          "DeleteComputeEnvironment",
          "DeleteJobQueue",
          "DeregisterJobDefinition",
          "DescribeComputeEnvironments",
          "DescribeJobDefinitions",
          "DescribeJobQueues",
          "DescribeJobs",
          "ListJobs",
          "RegisterJobDefinition",
          "SubmitJob",
          "TerminateJob",
          "UpdateComputeEnvironment",
          "UpdateJobQueue"
        ]
      },
      "Amazon Polly": {
        "StringPrefix": "polly",
        "ARNRegex": "^arn:aws:polly:.+",
        "ARNFormat": "arn:aws:polly:<region>:<account_ID>:lexicon/<lexicon name>",
        "HasResource": true,
        "Actions": [
          "DeleteLexicon",
          "DescribeVoices",
          "GetLexicon",
          "ListLexicon",
          "PutLexicon",
          "SynthesizeSpeech"
        ]
      },
      "Application Auto Scaling": {
        "StringPrefix": "application-autoscaling",
        "Actions": [
          "DeleteScalingPolicy",
          "DeregisterScalableTarget",
          "DescribeScalableTargets",
          "DescribeScalingActivities",
          "DescribeScalingPolicies",
          "PutScalingPolicy",
          "RegisterScalableTarget"
        ]
      },
      "Auto Scaling": {
        "StringPrefix": "autoscaling",
        "Actions": [
          "AttachInstances",
          "AttachLoadBalancers",
          "CompleteLifecycleAction",
          "CreateAutoScalingGroup",
          "CreateLaunchConfiguration",
          "CreateOrUpdateTags",
          "DeleteAutoScalingGroup",
          "DeleteLaunchConfiguration",
          "DeleteLifecycleHook",
          "DeleteNotificationConfiguration",
          "DeletePolicy",
          "DeleteScheduledAction",
          "DeleteTags",
          "DescribeAccountLimits",
          "DescribeAdjustmentTypes",
          "DescribeAutoScalingGroups",
          "DescribeAutoScalingInstances",
          "DescribeAutoScalingNotificationTypes",
          "DescribeLaunchConfigurations",
          "DescribeLifecycleHookTypes",
          "DescribeLifecycleHooks",
          "DescribeLoadBalancers",
          "DescribeMetricCollectionTypes",
          "DescribeNotificationConfigurations",
          "DescribePolicies",
          "DescribeScalingActivities",
          "DescribeScalingProcessTypes",
          "DescribeScheduledActions",
          "DescribeTags",
          "DescribeTerminationPolicyTypes",
          "DetachInstances",
          "DetachLoadBalancers",
          "DisableMetricsCollection",
          "EnableMetricsCollection",
          "EnterStandby",
          "ExecutePolicy",
          "ExitStandby",
          "PutLifecycleHook",
          "PutNotificationConfiguration",
          "PutScalingPolicy",
          "PutScheduledUpdateGroupAction",
          "RecordLifecycleActionHeartbeat",
          "ResumeProcesses",
          "SetDesiredCapacity",
          "SetInstanceHealth",
          "SetInstanceProtection",
          "SuspendProcesses",
          "TerminateInstanceInAutoScalingGroup",
          "UpdateAutoScalingGroup"
        ]
      },
      "AWS Budgets": {
        "StringPrefix": "budgets",
        "ARNRegex": "^arn:aws:budgets::.+:.+",
        "ARNFormat": "arn:aws:budgets::<account_ID>:budget/<budgetname>",
        "HasResource": true,
        "Actions": [
          "ViewBudget",
          "ModifyBudget"
        ]
      },
      "AWS Device Farm": {
        "HasResource": true,
        "StringPrefix": "devicefarm",
        "Actions": [
          "CreateDevicePool",
          "CreateNetworkProfile",
          "CreateProject",
          "CreateRemoteAccessSession",
          "CreateUpload",
          "DeleteDevicePool",
          "DeleteNetworkProfile",
          "DeleteProject",
          "DeleteRemoteAccessSession",
          "DeleteRun",
          "DeleteUpload",
          "GetAccountSettings",
          "GetDevice",
          "GetDevicePool",
          "GetDevicePoolCompatibility",
          "GetJob",
          "GetNetworkProfile",
          "GetOfferingStatus",
          "GetProject",
          "GetRemoteAccessSession",
          "GetRun",
          "GetSuite",
          "GetTest",
          "GetUpload",
          "InstallToRemoteAccessSession",
          "ListArtifacts",
          "ListDevicePools",
          "ListDevices",
          "ListJobs",
          "ListNetworkProfiles",
          "ListOfferingTransactions",
          "ListOfferings",
          "ListProjects",
          "ListRemoteAccessSessions",
          "ListRuns",
          "ListSamples",
          "ListSuites",
          "ListTests",
          "ListUniqueProblems",
          "ListUploads",
          "PurchaseOffering",
          "RenewOffering",
          "ScheduleRun",
          "StopRemoteAccessSession",
          "StopRun",
          "UpdateDevicePool",
          "UpdateNetworkProfile",
          "UpdateProject"
        ]
      },
      "Elastic Load Balancing": {
        "ARNRegex": "^arn:aws:elasticloadbalancing:.+",
        "ARNFormat": "arn:aws:elasticloadbalancing:<region>:<account>:<resourceType>/<resourceid>",
        "HasResource": true,
        "StringPrefix": "elasticloadbalancing",
        "Actions": [
          "AddTags",
          "ApplySecurityGroupsToLoadBalancer",
          "AttachLoadBalancerToSubnets",
          "ConfigureHealthCheck",
          "CreateAppCookieStickinessPolicy",
          "CreateListener",
          "CreateLBCookieStickinessPolicy",
          "CreateLoadBalancer",
          "CreateLoadBalancerListeners",
          "CreateLoadBalancerPolicy",
          "CreateRule",
          "CreateTargetGroup",
          "DeleteListener",
          "DeleteLoadBalancer",
          "DeleteLoadBalancerListeners",
          "DeleteLoadBalancerPolicy",
          "DeleteRule",
          "DeleteTargetGroup",
          "DeregisterInstancesFromLoadBalancer",
          "DeregisterTargets",
          "DescribeInstanceHealth",
          "DescribeListeners",
          "DescribeLoadBalancerAttributes",
          "DescribeLoadBalancerPolicyTypes",
          "DescribeLoadBalancerPolicies",
          "DescribeLoadBalancers",
          "DescribeRules",
          "DescribeSSLPolicies",
          "DescribeTags",
          "DescribeTargetGroupAttributes",
          "DescribeTargetGroups",
          "DescribeTargetHealth",
          "DetachLoadBalancerFromSubnets",
          "DisableAvailabilityZonesForLoadBalancer",
          "EnableAvailabilityZonesForLoadBalancer",
          "ModifyListener",
          "ModifyLoadBalancerAttributes",
          "ModifyRule",
          "ModifyTargetGroup",
          "ModifyTargetGroupAttributes",
          "RegisterTargets",
          "RegisterInstancesWithLoadBalancer",
          "RemoveTags",
          "SetLoadBalancerListenerSSLCertificate",
          "SetLoadBalancerPoliciesForBackendServer",
          "SetLoadBalancerPoliciesOfListener",
          "SetRulePriorities",
          "SetSecurityGroups",
          "SetSubnets"
        ]
      },
      "AWS CloudHSM": {
        "StringPrefix": "cloudhsm",
        "ARNFormat": "arn:aws:cloudhsm:<region>:<account>:resourceName",
        "ARNRegex": "^arn:aws:cloudhsm:.+:.+:.+",
        "Actions": [
          "AddTagsToResource",
          "CreateLunaClient",
          "CreateHapg",
          "CreateHsm",
          "DeleteLunaClient",
          "DeleteHapg",
          "DeleteHsm",
          "DescribeLunaClient",
          "DescribeHapg",
          "DescribeHsm",
          "GetConfig",
          "ListAvailableZones",
          "ListLunaClients",
          "ListHapgs",
          "ListHsms",
          "ListTagsForResource",
          "ModifyLunaClient",
          "ModifyHapg",
          "ModifyHsm",
          "RemoveTagsFromResource"
        ]
      },
      "AWS Elastic Beanstalk": {
        "StringPrefix": "elasticbeanstalk",
        "Actions": [
          "ApplyEnvironmentManagedAction",
          "CheckDNSAvailability",
          "CreateApplication",
          "CreateApplicationVersion",
          "CreateConfigurationTemplate",
          "CreateEnvironment",
          "CreateStorageLocation",
          "DeleteApplication",
          "DeleteApplicationVersion",
          "DeleteConfigurationTemplate",
          "DeleteEnvironmentConfiguration",
          "DescribeApplicationVersions",
          "DescribeApplications",
          "DescribeConfigurationOptions",
          "DescribeConfigurationSettings",
          "DescribeEnvironmentHealth",
          "DescribeEnvironmentManagedActions",
          "DescribeEnvironmentManagedActionHistory",
          "DescribeEnvironmentResources",
          "DescribeEnvironments",
          "DescribeEvents",
          "DescribeInstancesHealth",
          "ListAvailableSolutionStacks",
          "RebuildEnvironment",
          "RequestEnvironmentInfo",
          "RestartAppServer",
          "RetrieveEnvironmentInfo",
          "SwapEnvironmentCNAMEs",
          "TerminateEnvironment",
          "UpdateApplication",
          "UpdateApplicationResourceLifecycle",
          "UpdateApplicationVersion",
          "UpdateConfigurationTemplate",
          "UpdateEnvironment",
          "ValidateConfigurationSettings"
        ],
        "ARNFormat": "arn:aws:elasticbeanstalk:<region>:<account_ID>:<resource_type>/<path_to_resource>",
        "ARNRegex": "^arn:aws:elasticbeanstalk:.+:.*:.+/.+",
        "HasResource": true,
        "conditionKeys": [
          "elasticbeanstalk:InApplication",
          "elasticbeanstalk:FromApplication",
          "elasticbeanstalk:FromSolutionStack",
          "elasticbeanstalk:FromApplicationVersion",
          "elasticbeanstalk:FromConfigurationTemplate",
          "elasticbeanstalk:FromEnvironment"
        ]
      },
      "Amazon Route 53": {
        "ARNFormat": "arn:aws:route53:::<resource>/<id>",
        "ARNRegex": "^arn:aws:route53:::.+",
        "HasResource": true,
        "StringPrefix": "route53",
        "Actions": [
          "AssociateVPCWithHostedZone",
          "ChangeResourceRecordSets",
          "ChangeTagsForResource",
          "CreateHealthCheck",
          "CreateHostedZone",
          "CreateReusableDelegationSet",
          "CreateTrafficPolicy",
          "CreateTrafficPolicyInstance",
          "CreateTrafficPolicyVersion",
          "CreateVPCAssociationAuthorization",
          "DeleteHealthCheck",
          "DeleteHostedZone",
          "DeleteReusableDelegationSet",
          "DeleteTrafficPolicy",
          "DeleteTrafficPolicyInstance",
          "DeleteVPCAssociationAuthorization",
          "DisableDomainAutoRenew",
          "DisassociateVPCFromHostedZone",
          "EnableDomainAutoRenew",
          "GetChange",
          "GetCheckerIpRanges",
          "GetGeoLocation",
          "GetHealthCheck",
          "GetHealthCheckCount",
          "GetHealthCheckLastFailureReason",
          "GetHealthCheckStatus",
          "GetHostedZone",
          "GetHostedZoneCount",
          "GetReusableDelegationSet",
          "GetTrafficPolicy",
          "GetTrafficPolicyInstance",
          "GetTrafficPolicyInstanceCount",
          "ListGeoLocations",
          "ListHealthChecks",
          "ListHostedZones",
          "ListHostedZonesByName",
          "ListResourceRecordSets",
          "ListReusableDelegationSets",
          "ListTagsForResource",
          "ListTagsForResources",
          "ListTrafficPolicies",
          "ListTrafficPolicyInstances",
          "ListTrafficPolicyInstancesByHostedZone",
          "ListTrafficPolicyInstancesByPolicy",
          "ListTrafficPolicyVersions",
          "ListVPCAssociationAuthorizations",
          "TestDNSAnswer",
          "UpdateHealthCheck",
          "UpdateHostedZoneComment",
          "UpdateTrafficPolicyComment",
          "UpdateTrafficPolicyInstance"
        ]
      },
      "AWS CloudFormation": {
        "ARNRegex": "^arn:aws:cloudformation:.+:[0-9]+:.+",
        "ARNFormat": "arn:aws:cloudformation:<region>:<account>:<resourceType>/<name>/<id>",
        "HasResource": true,
        "conditionKeys": [
          "cloudformation:TemplateUrl",
          "cloudformation:StackPolicyUrl",
          "cloudformation:ResourceTypes",
          "cloudformation:ChangeSetName",
          "cloudformation:RoleArn"
        ],
        "StringPrefix": "cloudformation",
        "Actions": [
          "CancelUpdateStack",
          "ContinueUpdateRollback",
          "CreateChangeSet",
          "CreateStack",
          "CreateUploadBucket",
          "DeleteStack",
          "DescribeAccountLimits",
          "DescribeChangeSet",
          "DescribeStackEvents",
          "DescribeStackResource",
          "DescribeStackResources",
          "DescribeStacks",
          "EstimateTemplateCost",
          "ExecuteChangeSet",
          "GetStackPolicy",
          "GetTemplate",
          "GetTemplateSummary",
          "ListChangeSets",
          "ListStackResources",
          "ListStacks",
          "PreviewStackUpdate",
          "SetStackPolicy",
          "SignalResource",
          "UpdateStack",
          "ValidateTemplate"
        ]
      },
      "AWS CodePipeline": {
        "ARNRegex": "arn:aws:codepipeline:.+",
        "ARNFormat": "arn:aws:codepipeline:<region>:<account_ID>:<path_to_pipeline_resource>",
        "StringPrefix": "codepipeline",
        "HasResource": true,
        "Actions": [
          "AcknowledgeJob",
          "AcknowledgeThirdPartyJob",
          "CreateCustomActionType",
          "CreatePipeline",
          "DeleteCustomActionType",
          "DeletePipeline",
          "DisableStageTransition",
          "EnableStageTransition",
          "GetJobDetails",
          "GetPipeline",
          "GetPipelineState",
          "GetThirdPartyJobDetails",
          "ListActionTypes",
          "ListPipelines",
          "PollForJobs",
          "PollForThirdPartyJobs",
          "PutActionRevision",
          "PutApprovalResult",
          "PutJobFailureResult",
          "PutJobSuccessResult",
          "PutThirdPartyJobFailureResult",
          "PutThirdPartyJobSuccessResult",
          "RetryStageExecution",
          "StartPipelineExecution",
          "UpdatePipeline"
        ]
      },
      "Amazon Cloud Directory": {
        "StringPrefix": "clouddirectory",
        "ARNFormat": "arn:aws:clouddirectory:<region>:<accountId>:<relative-id>",
        "ARNRegex": "^arn:aws:clouddirectory:.+:[0-9]+:(directory|schema)/.+",
        "Actions": [
          "AddFacetToObject",
          "ApplySchema",
          "AttachObject",
          "AttachPolicy",
          "AttachToIndex",
          "BatchRead",
          "BatchWrite",
          "CreateDirectory",
          "CreateFacet",
          "CreateIndex",
          "CreateObject",
          "CreateSchema",
          "DeleteDirectory",
          "DeleteFacet",
          "DeleteObject",
          "DeleteSchema",
          "DetachFromIndex",
          "DetachObject",
          "DetachPolicy",
          "DisableDirectory",
          "EnableDirectory",
          "GetDirectory",
          "GetFacet",
          "GetObjectInformation",
          "GetSchemaAsJson",
          "ListAppliedSchemaArns",
          "ListAttachedIndices",
          "ListDevelopmentSchemaArns",
          "ListDirectories",
          "ListFacetAttributes",
          "ListFacetNames",
          "ListIndex",
          "ListObjectAttributes",
          "ListObjectChildren",
          "ListObjectParents",
          "ListObjectPolicies",
          "ListPolicyAttachments",
          "ListPublishedSchemaArns",
          "ListTagsForResource",
          "LookupPolicy",
          "PublishSchema",
          "PutSchemaFromJson",
          "RemoveFacetFromObject",
          "TagResource",
          "UntagResource",
          "UpdateFacet",
          "UpdateObjectAttributes",
          "UpdateSchema"
        ]
      },
      "Amazon CloudSearch": {
        "StringPrefix": "cloudsearch",
        "ARNFormat": "arn:aws:cloudsearch:<region>:<account>:<resourceType>/<resourceName>",
        "ARNRegex": "^arn:aws:cloudsearch:.+:.+:.+",
        "Actions": [
          "BuildSuggesters",
          "CreateDomain",
          "DefineAnalysisScheme",
          "DefineExpression",
          "DefineIndexField",
          "DefineIndexFields",
          "DefineSuggester",
          "DeleteAnalysisScheme",
          "DeleteDomain",
          "DeleteExpression",
          "DeleteIndexField",
          "DeleteSuggester",
          "DescribeAnalysisSchemes",
          "DescribeAvailabilityOptions",
          "DescribeDomains",
          "DescribeExpressions",
          "DescribeIndexFields",
          "DescribeScalingParameters",
          "DescribeServiceAccessPolicies",
          "DescribeSuggesters",
          "document",
          "IndexDocuments",
          "ListDomainNames",
          "search",
          "suggest",
          "UpdateAvailabilityOptions",
          "UpdateScalingParameters",
          "UpdateServiceAccessPolicies"
        ]
      },
      "AWS CloudTrail": {
        "StringPrefix": "cloudtrail",
        "ARNFormat": "arn:aws:cloudtrail:<region>:<account>:<resource>",
        "ARNRegex": "^arn:aws:cloudtrail:.+:[0-9]+:.+",
        "Actions": [
          "AddTags",
          "CreateTrail",
          "DeleteTrail",
          "DescribeTrails",
          "GetEventSelectors",
          "GetTrailStatus",
          "ListPublicKeys",
          "ListTags",
          "LookupEvents",
          "PutEventSelectors",
          "RemoveTags",
          "StartLogging",
          "StopLogging",
          "UpdateTrail"
        ]
      },
      "AWS Config": {
        "StringPrefix": "config",
        "Actions": [
          "DeleteConfigRule",
          "DeleteConfigurationRecorder",
          "DeleteDeliveryChannel",
          "DeleteEvaluationResults",
          "DeliverConfigSnapshot",
          "DescribeComplianceByConfigRule",
          "DescribeComplianceByResource",
          "DescribeConfigRuleEvaluationStatus",
          "DescribeConfigRules",
          "DescribeConfigurationRecorderStatus",
          "DescribeConfigurationRecorders",
          "DescribeDeliveryChannelStatus",
          "DescribeDeliveryChannels",
          "GetComplianceDetailsByConfigRule",
          "GetComplianceDetailsByResource",
          "GetComplianceSummaryByConfigRule",
          "GetComplianceSummaryByResourceType",
          "GetResourceConfigHistory",
          "GetResources",
          "GetTagKeys",
          "ListDiscoveredResources",
          "PutConfigRule",
          "PutConfigurationRecorder",
          "PutDeliveryChannel",
          "PutEvaluations",
          "StartConfigRulesEvaluation",
          "StartConfigurationRecorder",
          "StopConfigurationRecorder"
        ]
      },
      "AWS CodeCommit": {
        "ARNFormat": "arn:aws:codecommit:<region>:<account_ID>:<repository_name>",
        "ARNRegex": "^arn:aws:codecommit:.+",
        "StringPrefix": "codecommit",
        "Actions": [
          "BatchGetRepositories",
          "CreateBranch",
          "CreateRepository",
          "DeleteRepository",
          "GetBlob",
          "GetBranch",
          "GetObjectIdentifier",
          "GetRepository",
          "GetTree",
          "GitPull",
          "GitPush",
          "ListBranches",
          "ListRepositories",
          "UpdateDefaultBranch",
          "UpdateRepositoryDescription",
          "UpdateRepositoryName"
        ]
      },
      "Amazon EC2 Spot Fleet": {
        "StringPrefix": "ec2",
        "Actions": [
          "CancelSpotFleetRequests",
          "DescribeSpotFleetInstances",
          "DescribeSpotFleetRequests",
          "DescribeSpotFleetRequestHistory",
          "ModifySpotFleetRequest",
          "RequestSpotFleet"
        ]
      },
      "AWS CodeDeploy": {
        "ARNFormat": "arn:aws:codedeploy:region:account:resource-type:resource-specifier",
        "ARNRegex": "^arn:aws:codedeploy:.+",
        "StringPrefix": "codedeploy",
        "Actions": [
          "AddTagsToOnPremisesInstances",
          "BatchGetApplicationRevisions",
          "BatchGetApplications",
          "BatchGetDeploymentGroups",
          "BatchGetDeploymentInstances",
          "BatchGetDeployments",
          "BatchGetOnPremisesInstances",
          "CreateApplication",
          "CreateDeployment",
          "CreateDeploymentConfig",
          "CreateDeploymentGroup",
          "DeleteApplication",
          "DeleteDeploymentConfig",
          "DeleteDeploymentGroup",
          "DeregisterOnPremisesInstance",
          "GetApplication",
          "GetApplicationRevision",
          "GetDeployment",
          "GetDeploymentConfig",
          "GetDeploymentGroup",
          "GetDeploymentInstance",
          "GetOnPremisesInstance",
          "ListApplicationRevisions",
          "ListApplications",
          "ListDeploymentConfigs",
          "ListDeploymentGroups",
          "ListDeploymentInstances",
          "ListDeployments",
          "ListOnPremisesInstances",
          "RegisterApplicationRevision",
          "RegisterOnPremisesInstance",
          "RemoveTagsFromOnPremisesInstances",
          "StopDeployment",
          "UpdateApplication",
          "UpdateDeploymentGroup"
        ]
      },
      "Amazon Elastic File System": {
        "ARNFormat": "arn:aws:elasticfilesystem:<region>:<account-id>:file-system/<file-system-id>",
        "ARNRegex": "^arn:aws:elasticfilesystem:.+",
        "HasResource": true,
        "StringPrefix": "elasticfilesystem",
        "Actions": [
          "CreateFileSystem",
          "CreateTags",
          "DescribeTags",
          "DeleteTags",
          "CreateMountTarget",
          "ModifyMountTargetSecurityGroups",
          "DescribeMountTargetSecurityGroups",
          "DescribeFileSystems",
          "DescribeMountTargets",
          "DeleteMountTarget",
          "DeleteFileSystem"
        ]
      },
      "Amazon Elastic Transcoder": {
        "ARNFormat": "arn:aws:elastictranscoder:<region>:<account>:<resourceType>/<resourceId>",
        "ARNRegex": "^arn:aws:elastictranscoder:.+",
        "StringPrefix": "elastictranscoder",
        "Actions": [
          "CancelJob",
          "CreateJob",
          "CreatePipeline",
          "CreatePreset",
          "DeletePipeline",
          "DeletePreset",
          "ListJobsByPipeline",
          "ListJobsByStatus",
          "ListPipelines",
          "ListPresets",
          "ReadJob",
          "ReadPipeline",
          "ReadPreset",
          "TestRole",
          "UpdatePipeline",
          "UpdatePipelineNotifications",
          "UpdatePipelineStatus"
        ]
      },
      "Amazon CloudWatch": {
        "StringPrefix": "cloudwatch",
        "Actions": [
          "DeleteAlarms",
          "DescribeAlarmHistory",
          "DescribeAlarms",
          "DescribeAlarmsForMetric",
          "DisableAlarmActions",
          "EnableAlarmActions",
          "GetMetricData",
          "GetMetricStatistics",
          "ListMetrics",
          "PutMetricAlarm",
          "PutMetricData",
          "SetAlarmState"
        ]
      },
      "Amazon CloudWatch Events": {
        "ARNFormat": "arn:aws:<serviceName>:<region>:<account>:<resourceType>/<resourceName>",
        "ARNRegex": "^arn:aws:.+",
        "HasResource": true,
        "StringPrefix": "events",
        "Actions": [
          "DeleteRule",
          "DescribeRule",
          "DisableRule",
          "EnableRule",
          "ListRuleNamesByTarget",
          "ListRules",
          "ListTargetsByRule",
          "PutEvents",
          "PutRule",
          "PutTargets",
          "RemoveTargets",
          "TestEventPattern"
        ],
        "conditionKeys": [
          "events:source",
          "events:detail-type",
          "events:detail.userIdentity.principalId",
          "events:TargetArn"
        ]
      },
      "AWS Health APIs and Notifications": {
        "StringPrefix": "health",
        "ARNRegex": "^arn:aws:health:.+",
        "ARNFormat": "arn:aws:health:.+:.+:.+",
        "HasResource": true,
        "Actions": [
          "DescribeAffectedEntities",
          "DescribeEntityAggregates",
          "DescribeEventAggregates",
          "DescribeEvents",
          "DescribeEventDetails",
          "DescribeEventTypes"
        ]
      },
      "AWS Identity and Access Management": {
        "ARNFormat": "arn:aws:iam::<namespace>:<relative-id>",
        "ARNRegex": "^arn:aws:iam::.+",
        "HasResource": true,
        "StringPrefix": "iam",
        "Actions": [
          "AddRoleToInstanceProfile",
          "AddUserToGroup",
          "AddClientIDToOpenIDConnectProvider",
          "AttachGroupPolicy",
          "AttachRolePolicy",
          "AttachUserPolicy",
          "ChangePassword",
          "CreateAccessKey",
          "CreateAccountAlias",
          "CreateGroup",
          "CreateInstanceProfile",
          "CreateLoginProfile",
          "CreateOpenIDConnectProvider",
          "CreatePolicy",
          "CreatePolicyVersion",
          "CreateRole",
          "CreateSAMLProvider",
          "CreateUser",
          "CreateVirtualMFADevice",
          "DeactivateMFADevice",
          "DeleteAccessKey",
          "DeleteAccountAlias",
          "DeleteAccountPasswordPolicy",
          "DeleteGroup",
          "DeleteGroupPolicy",
          "DeleteInstanceProfile",
          "DeleteLoginProfile",
          "DeleteOpenIDConnectProvider",
          "DeletePolicy",
          "DeletePolicyVersion",
          "DeleteRole",
          "DeleteRolePolicy",
          "DeleteSAMLProvider",
          "DeleteSSHPublicKey",
          "DeleteServerCertificate",
          "DeleteSigningCertificate",
          "DeleteUser",
          "DeleteUserPolicy",
          "DeleteVirtualMFADevice",
          "DetachGroupPolicy",
          "DetachRolePolicy",
          "DetachUserPolicy",
          "EnableMFADevice",
          "GenerateCredentialReport",
          "GenerateServiceLastAccessedDetails",
          "GetAccessKeyLastUsed",
          "GetAccountAuthorizationDetails",
          "GetAccountPasswordPolicy",
          "GetAccountSummary",
          "GetContextKeysForCustomPolicy",
          "GetContextKeysForPrincipalPolicy",
          "GetCredentialReport",
          "GetGroup",
          "GetGroupPolicy",
          "GetInstanceProfile",
          "GetLoginProfile",
          "GetOpenIDConnectProvider",
          "GetPolicy",
          "GetPolicyVersion",
          "GetRole",
          "GetRolePolicy",
          "GetSAMLProvider",
          "GetSSHPublicKey",
          "GetServerCertificate",
          "GetServiceLastAccessedDetails",
          "GetServiceLastAccessedDetailsWithEntities",
          "GetUser",
          "GetUserPolicy",
          "ListAccessKeys",
          "ListAccountAliases",
          "ListAttachedGroupPolicies",
          "ListAttachedRolePolicies",
          "ListAttachedUserPolicies",
          "ListEntitiesForPolicy",
          "ListGroupPolicies",
          "ListGroups",
          "ListGroupsForUser",
          "ListInstanceProfiles",
          "ListInstanceProfilesForRole",
          "ListMFADevices",
          "ListOpenIDConnectProviders",
          "ListPolicies",
          "ListPoliciesGrantingServiceAccess",
          "ListPolicyVersions",
          "ListRolePolicies",
          "ListRoles",
          "ListSAMLProviders",
          "ListSSHPublicKeys",
          "ListServerCertificates",
          "ListSigningCertificates",
          "ListUserPolicies",
          "ListUsers",
          "ListVirtualMFADevices",
          "PassRole",
          "PutGroupPolicy",
          "PutRolePolicy",
          "PutUserPolicy",
          "RemoveClientIDFromOpenIDConnectProvider",
          "RemoveRoleFromInstanceProfile",
          "RemoveUserFromGroup",
          "ResyncMFADevice",
          "SetDefaultPolicyVersion",
          "SimulateCustomPolicy",
          "SimulatePrincipalPolicy",
          "UpdateAccessKey",
          "UpdateAccountPasswordPolicy",
          "UpdateAssumeRolePolicy",
          "UpdateGroup",
          "UpdateLoginProfile",
          "UpdateOpenIDConnectProviderThumbprint",
          "UpdateSAMLProvider",
          "UpdateSSHPublicKey",
          "UpdateServerCertificate",
          "UpdateSigningCertificate",
          "UpdateUser",
          "UploadSSHPublicKey",
          "UploadServerCertificate",
          "UploadSigningCertificate"
        ],
        "conditionKeys": [
          "iam:PolicyArn"
        ]
      },
      "AWS Import Export": {
        "StringPrefix": "importexport",
        "Actions": [
          "CreateJob",
          "UpdateJob",
          "CancelJob",
          "ListJobs",
          "GetStatus",
          "GetShippingLabel"
        ]
      },
      "AWS Import Export Snowball": {
        "StringPrefix": "snowball",
        "Actions": [
          "CancelCluster",
          "CancelJob",
          "CreateAddress",
          "CreateCluster",
          "CreateJob",
          "DescribeAddress",
          "DescribeAddresses",
          "DescribeCluster",
          "DescribeJob",
          "GetJobManifest",
          "GetJobUnlockCode",
          "GetSnowballUsage",
          "ListClusterJobs",
          "ListClusters",
          "ListJobs",
          "UpdateCluster",
          "UpdateJob"
        ]
      },
      "Amazon Kinesis": {
        "ARNFormat": "arn:aws:kinesis:<region>:<account>:<resourceType>/<resourceName>",
        "ARNRegex": "^arn:aws:kinesis:.+",
        "HasResource": true,
        "StringPrefix": "kinesis",
        "Actions": [
          "AddTagsToStream",
          "CreateStream",
          "DecreaseStreamRetentionPeriod",
          "DeleteStream",
          "DescribeLimits",
          "DescribeStream",
          "DisableEnhancedMonitoring",
          "EnableEnhancedMonitoring",
          "GetShardIterator",
          "GetRecords",
          "IncreaseStreamRetentionPeriod",
          "ListStreams",
          "ListTagsForStream",
          "MergeShards",
          "PutRecord",
          "PutRecords",
          "RemoveTagsFromStream",
          "SplitShard",
          "UpdateShardCount"
        ]
      },
      "Amazon SimpleDB": {
        "ARNFormat": "arn:aws:sdb:<region>:<account_ID>:domain/<domain_name>",
        "ARNRegex": "^arn:aws:sdb:.+",
        "HasResource": true,
        "StringPrefix": "sdb",
        "Actions": [
          "BatchDeleteAttributes",
          "BatchPutAttributes",
          "CreateDomain",
          "DeleteAttributes",
          "DeleteDomain",
          "DomainMetadata",
          "GetAttributes",
          "ListDomains",
          "PutAttributes",
          "Select"
        ]
      },
      "AWS Lambda": {
        "ARNFormat": "arn:aws:lambda:<region>:<account>:function:<functionName>",
        "ARNRegex": "^arn:aws:lambda:.+",
        "StringPrefix": "lambda",
        "HasResource": true,
        "Actions": [
          "AddPermission",
          "CreateAlias",
          "CreateEventSourceMapping",
          "CreateFunction",
          "DeleteAlias",
          "DeleteEventSourceMapping",
          "DeleteFunction",
          "GetAccountSettings",
          "GetAlias",
          "GetEventSourceMapping",
          "GetFunction",
          "GetFunctionConfiguration",
          "GetPolicy",
          "InvokeAsync",
          "InvokeFunction",
          "ListAliases",
          "ListEventSourceMappings",
          "ListFunctions",
          "ListVersionsByFunction",
          "PublishVersion",
          "RemovePermission",
          "UpdateAlias",
          "UpdateEventSourceMapping",
          "UpdateFunctionCode",
          "UpdateFunctionConfiguration"
        ]
      },
      "AWS Mobile Hub": {
        "ARNFormat": "arn:aws:mobilehub:<region>:<aws_account_ID>:project/<project_ID>",
        "ARNRegex": "^arn:aws:mobilehub:.+:[0-9]+:.+",
        "HasResource": true,
        "StringPrefix": "mobilehub",
        "Actions": [
          "CreateProject",
          "CreateServiceRole",
          "DeleteProject",
          "GenerateProjectParameters",
          "GetProject",
          "ListAvailableFeatures",
          "ListAvailableRegions",
          "ListProjects",
          "UpdateProject",
          "ValidateProject",
          "VerifyServiceRole"
        ]
      },
      "Amazon Simple Systems Manager": {
        "ARNFormat": "arn:aws:ssm:<region>:<account_ID>:<document_name>",
        "ARNRegex": "^arn:aws:(ssm|ec2):.+",
        "HasResource": true,
        "StringPrefix": "ssm",
        "Actions": [
          "AddTagsToResource",
          "CancelCommand",
          "CreateActivation",
          "CreateAssociation",
          "CreateAssociationBatch",
          "CreateDocument",
          "CreateMaintenanceWindow",
          "CreatePatchBaseline",
          "DeleteActivation",
          "DeleteAssociation",
          "DeleteDocument",
          "DeleteMaintenanceWindow",
          "DeleteParameter",
          "DeletePatchBaseline",
          "DeregisterManagedInstance",
          "DeregisterPatchBaselineForPatchGroup",
          "DeregisterTargetFromMaintenanceWindow",
          "DeregisterTaskFromMaintenanceWindow",
          "DescribeActivations",
          "DescribeAssociation",
          "DescribeAutomationActions",
          "DescribeAutomationExecutions",
          "DescribeAvailablePatches",
          "DescribeDocument",
          "DescribeDocumentPermission",
          "DescribeEffectiveInstanceAssociations",
          "DescribeEffectivePatchesForPatchBaseline",
          "DescribeInstanceAssociationsStatus",
          "DescribeInstanceInformation",
          "DescribeInstancePatches",
          "DescribeInstancePatchStates",
          "DescribeInstancePatchStatesForPatchGroup",
          "DescribeMaintenanceWindowExecutions",
          "DescribeMaintenanceWindowExecutionTaskInvocations",
          "DescribeMaintenanceWindowExecutionTasks",
          "DescribeMaintenanceWindows",
          "DescribeMaintenanceWindowTargets",
          "DescribeMaintenanceWindowTasks",
          "DescribeParameters",
          "DescribePatchBaselines",
          "DescribePatchGroups",
          "DescribePatchGroupState",
          "GetCommandInvocation",
          "GetDefaultPatchBaseline",
          "GetDeployablePatchSnapshotForInstance",
          "GetInventory",
          "GetInventorySchema",
          "GetDocument",
          "GetMaintenanceWindow",
          "GetMaintenanceWindowExecution",
          "GetMaintenanceWindowExecutionTask",
          "GetParameterHistory",
          "GetParameters",
          "GetPatchBaseline",
          "GetPatchBaselineForPatchGroup",
          "ListAssociations",
          "ListCommandInvocations",
          "ListCommands",
          "ListDocuments",
          "ListDocumentVersions",
          "ListInstanceAssociations",
          "ListInventoryEntries",
          "ListTagsForResource",
          "ModifyDocumentPermission",
          "PutInventory",
          "PutParameter",
          "RegisterDefaultPatchBaseline",
          "RegisterPatchBaselineForPatchGroup",
          "RegisterTargetWithMaintenanceWindow",
          "RegisterTaskWithMaintenanceWindow",
          "RemoveTagsFromResource",
          "SendCommand",
          "StartAssociationsOnce",
          "UpdateAssociation",
          "UpdateAssociationStatus",
          "UpdateDocument",
          "UpdateDocumentDefaultVersion",
          "UpdateInstanceAssociationStatus",
          "UpdateMaintenanceWindow",
          "UpdateManagedInstanceRole",
          "UpdatePatchBaseline"
        ]
      },
      "Amazon Simple Workflow Service": {
        "ARNFormat": "arn:aws:swf:<region>:<account>:/<domain>/<domainName>",
        "ARNRegex": "^arn:aws:swf:.+",
        "StringPrefix": "swf",
        "Actions": [
          "CancelTimer",
          "CancelWorkflowExecution",
          "CompleteWorkflowExecution",
          "ContinueAsNewWorkflowExecution",
          "CountClosedWorkflowExecutions",
          "CountOpenWorkflowExecutions",
          "CountPendingActivityTasks",
          "CountPendingDecisionTasks",
          "DeprecateActivityType",
          "DeprecateDomain",
          "DeprecateWorkflowType",
          "DescribeActivityType",
          "DescribeDomain",
          "DescribeWorkflowExecution",
          "DescribeWorkflowType",
          "FailWorkflowExecution",
          "GetWorkflowExecutionHistory",
          "ListActivityTypes",
          "ListClosedWorkflowExecutions",
          "ListDomains",
          "ListOpenWorkflowExecutions",
          "ListWorkflowTypes",
          "PollForActivityTask",
          "PollForDecisionTask",
          "RecordActivityTaskHeartbeat",
          "RecordMarker",
          "RegisterActivityType",
          "RegisterDomain",
          "RegisterWorkflowType",
          "RequestCancelActivityTask",
          "RequestCancelExternalWorkflowExecution",
          "RequestCancelWorkflowExecution",
          "RespondActivityTaskCanceled",
          "RespondActivityTaskCompleted",
          "RespondActivityTaskFailed",
          "RespondDecisionTaskCompleted",
          "ScheduleActivityTask",
          "SignalExternalWorkflowExecution",
          "SignalWorkflowExecution",
          "StartChildWorkflowExecution",
          "StartTimer",
          "StartWorkflowExecution",
          "TerminateWorkflowExecution"
        ],
        "conditionKeys": [
          "swf:activityType.name",
          "swf:activityType.version",
          "swf:defaultTaskList.name",
          "swf:name",
          "swf:tagFilter.tag",
          "swf:taskList.name",
          "swf:typeFilter.name",
          "swf:typeFilter.version",
          "swf:version",
          "swf:workflowType.name",
          "swf:workflowType.version",
          "swf:workflowTypeVersion"
        ]
      },
      "Amazon Storage Gateway": {
        "ARNFormat": "arn:aws:storagegateway:us-east-1:<account>:<resourceType>/<resourceName>",
        "ARNRegex": "^arn:aws:storagegateway:.+",
        "StringPrefix": "storagegateway",
        "Actions": [
          "ActivateGateway",
          "AddCache",
          "AddUploadBuffer",
          "AddWorkingStorage",
          "CancelArchival",
          "CancelRetrieval",
          "CreateCachediSCSIVolume",
          "CreateSnapshot",
          "CreateSnapshotFromVolumeRecoveryPoint",
          "CreateStorediSCSIVolume",
          "CreateTapes",
          "CreateTapeWithBarcode",
          "DeleteBandwidthRateLimit",
          "DeleteChapCredentials",
          "DeleteGateway",
          "DeleteSnapshotSchedule",
          "DeleteTape",
          "DeleteTapeArchive",
          "DeleteVolume",
          "DescribeBandwidthRateLimit",
          "DescribeCache",
          "DescribeCachediSCSIVolumes",
          "DescribeChapCredentials",
          "DescribeGatewayInformation",
          "DescribeMaintenanceStartTime",
          "DescribeSnapshotSchedule",
          "DescribeStorediSCSIVolumes",
          "DescribeTapeArchives",
          "DescribeTapeRecoveryPoints",
          "DescribeTapes",
          "DescribeUploadBuffer",
          "DescribeVTLDevices",
          "DescribeWorkingStorage",
          "DisableGateway",
          "ListGateways",
          "ListLocalDisks",
          "ListTagsForResource",
          "ListTapes",
          "ListVolumeRecoveryPoints",
          "ListVolumes",
          "RetrieveTapeArchive",
          "RetrieveTapeRecoveryPoint",
          "SetLocalConsolePassword",
          "ShutdownGateway",
          "StartGateway",
          "UpdateBandwidthRateLimit",
          "UpdateChapCredentials",
          "UpdateGatewayInformation",
          "UpdateGatewaySoftwareNow",
          "UpdateMaintenanceStartTime",
          "UpdateSnapshotSchedule"
        ]
      },
      "Amazon SQS": {
        "ARNFormat": "arn:aws:sqs:<region>:<account_ID>:<queue_name>",
        "ARNRegex": "^arn:aws:sqs:.+",
        "HasResource": true,
        "StringPrefix": "sqs",
        "Actions": [
          "AddPermission",
          "ChangeMessageVisibility",
          "ChangeMessageVisibilityBatch",
          "CreateQueue",
          "DeleteMessage",
          "DeleteMessageBatch",
          "DeleteQueue",
          "GetQueueAttributes",
          "GetQueueUrl",
          "ListDeadLetterSourceQueues",
          "ListQueues",
          "PurgeQueue",
          "ReceiveMessage",
          "RemovePermission",
          "SendMessage",
          "SendMessageBatch",
          "SetQueueAttributes"
        ]
      },
      "Amazon SES": {
        "StringPrefix": "ses",
        "Actions": [
          "CloneReceiptRuleSet",
          "CreateReceiptFilter",
          "CreateReceiptRule",
          "CreateReceiptRuleSet",
          "DeleteIdentity",
          "DeleteIdentityPolicy",
          "DeleteReceiptFilter",
          "DeleteReceiptRule",
          "DeleteReceiptRuleSet",
          "DeleteVerifiedEmailAddress",
          "DescribeActiveReceiptRuleSet",
          "DescribeReceiptRule",
          "DescribeReceiptRuleSet",
          "GetIdentityDkimAttributes",
          "GetIdentityNotificationAttributes",
          "GetIdentityPolicies",
          "GetIdentityVerificationAttributes",
          "GetSendQuota",
          "GetSendStatistics",
          "ListIdentities",
          "ListIdentityPolicies",
          "ListReceiptFilters",
          "ListReceiptRuleSets",
          "ListVerifiedEmailAddresses",
          "PutIdentityPolicy",
          "ReorderReceiptRuleSet",
          "SendBounce",
          "SendEmail",
          "SendRawEmail",
          "SetActiveReceiptRuleSet",
          "SetIdentityDkimEnabled",
          "SetIdentityNotificationTopic",
          "SetIdentityFeedbackForwardingEnabled",
          "SetReceiptRulePosition",
          "UpdateReceiptRule",
          "VerifyDomainDkim",
          "VerifyDomainIdentity",
          "VerifyEmailAddress",
          "VerifyEmailIdentity"
        ],
        "conditionKeys": [
          "ses:Recipients",
          "ses:FromAddress",
          "ses:FromDisplayName",
          "ses:FeedbackAddress"
        ]
      },
      "Amazon Redshift": {
        "StringPrefix": "redshift",
        "ARNFormat": "arn:aws:redshift:<region>:<accountID>:<relative-id>",
        "ARNRegex": "^arn:aws:redshift:.+:.+:.+",
        "HasResource": true,
        "Actions": [
          "AuthorizeClusterSecurityGroupIngress",
          "AuthorizeSnapshotAccess",
          "CancelQuerySession",
          "CopyClusterSnapshot",
          "CreateCluster",
          "CreateClusterParameterGroup",
          "CreateClusterSecurityGroup",
          "CreateClusterSnapshot",
          "CreateClusterSubnetGroup",
          "CreateEventSubscription",
          "CreateHsmClientCertificate",
          "CreateHsmConfiguration",
          "CreateTags",
          "DeleteCluster",
          "DeleteClusterParameterGroup",
          "DeleteClusterSecurityGroup",
          "DeleteClusterSnapshot",
          "DeleteClusterSubnetGroup",
          "DeleteEventSubscription",
          "DeleteHsmClientCertificate",
          "DeleteHsmConfiguration",
          "DeleteTags",
          "DescribeClusterParameterGroups",
          "DescribeClusterParameters",
          "DescribeClusterSecurityGroups",
          "DescribeClusterSnapshots",
          "DescribeClusterSubnetGroups",
          "DescribeClusterVersions",
          "DescribeClusters",
          "DescribeDefaultClusterParameters",
          "DescribeEventCategories",
          "DescribeEventSubscriptions",
          "DescribeEvents",
          "DescribeHsmClientCertificates",
          "DescribeHsmConfigurations",
          "DescribeLoggingStatus",
          "DescribeOrderableClusterOptions",
          "DescribeReservedNodeOfferings",
          "DescribeReservedNodes",
          "DescribeResize",
          "DescribeTags",
          "DisableLogging",
          "DisableSnapshotCopy",
          "EnableLogging",
          "EnableSnapshotCopy",
          "ModifyCluster",
          "ModifyClusterParameterGroup",
          "ModifyClusterSubnetGroup",
          "ModifyEventSubscription",
          "ModifySnapshotCopyRetentionPeriod",
          "PurchaseReservedNodeOffering",
          "RebootCluster",
          "ResetClusterParameterGroup",
          "RestoreFromClusterSnapshot",
          "RevokeClusterSecurityGroupIngress",
          "RevokeSnapshotAccess",
          "RotateEncryptionKey",
          "ViewQueriesInConsole"
        ]
      },
      "Amazon RDS": {
        "ARNRegex": "^arn:aws:rds:.+",
        "StringPrefix": "rds",
        "Actions": [
          "AddTagsToResource",
          "AddSourceIdentifierToSubscription",
          "ApplyPendingMaintenanceAction",
          "AuthorizeDBSecurityGroupIngress",
          "CopyDBClusterSnapshot",
          "CopyDBParameterGroup",
          "CopyDBSnapshot",
          "CopyOptionGroup",
          "CreateDBClusterParameterGroup",
          "CreateDBClusterSnapshot",
          "CreateDBCluster",
          "CreateDBInstance",
          "CreateDBInstanceReadReplica",
          "CreateDBParameterGroup",
          "CreateDBSecurityGroup",
          "CreateDBSnapshot",
          "CreateDBSubnetGroup",
          "CreateEventSubscription",
          "CreateOptionGroup",
          "DeleteDBClusterParameterGroup",
          "DeleteDBClusterSnapshot",
          "DeleteDBCluster",
          "DeleteDBInstance",
          "DeleteDBParameterGroup",
          "DeleteDBSecurityGroup",
          "DeleteDBSnapshot",
          "DeleteDBSubnetGroup",
          "DeleteEventSubscription",
          "DeleteOptionGroup",
          "DescribeAccountAttributes",
          "DescribeCertificates",
          "DescribeEngineDefaultClusterParameters",
          "DescribeEngineDefaultParameters",
          "DescribeDBClusterParameterGroups",
          "DescribeDBClusterParameters",
          "DescribeDBClusterSnapshots",
          "DescribeDBClusters",
          "DescribeDBInstances",
          "DescribeDBLogFiles",
          "DescribeDBParameterGroups",
          "DescribeDBParameters",
          "DescribeDBSecurityGroups",
          "DescribeDBSnapshotAttributes",
          "DescribeDBSnapshots",
          "DescribeDBEngineVersions",
          "DescribeDBSubnetGroups",
          "DescribeEventCategories",
          "DescribeEvents",
          "DescribeEventSubscriptions",
          "DescribeOptionGroups",
          "DescribeOptionGroupOptions",
          "DescribeOrderableDBInstanceOptions",
          "DescribePendingMaintenanceActions",
          "DescribeReservedDBInstances",
          "DescribeReservedDBInstancesOfferings",
          "DownloadCompleteDBLogFile",
          "DownloadDBLogFilePortion",
          "FailoverDBCluster",
          "ListTagsForResource",
          "ModifyDBClusterParameterGroup",
          "ModifyDBCluster",
          "ModifyDBInstance",
          "ModifyDBParameterGroup",
          "ModifyDBSnapshotAttribute",
          "ModifyDBSubnetGroup",
          "ModifyEventSubscription",
          "ModifyOptionGroup",
          "PromoteReadReplica",
          "PurchaseReservedDBInstancesOffering",
          "RebootDBInstance",
          "RemoveSourceIdentifierFromSubscription",
          "RemoveTagsFromResource",
          "RestoreDBClusterFromSnapshot",
          "RestoreDBClusterToPointInTime",
          "RestoreDBInstanceFromDBSnapshot",
          "RestoreDBInstanceToPointInTime",
          "ResetDBClusterParameterGroup",
          "ResetDBParameterGroup",
          "RevokeDBSecurityGroupIngress"
        ],
        "conditionKeys": [
          "rds:DatabaseClass",
          "rds:DatabaseEngine",
          "rds:DatabaseName",
          "rds:MultiAz",
          "rds:Piops",
          "rds:StorageSize",
          "rds:Vpc",
          "rds:db-tag",
          "rds:es-tag",
          "rds:og-tag",
          "rds:pg-tag",
          "rds:req-tag",
          "rds:secgrp-tag",
          "rds:snapshot-tag",
          "rds:subgrp-tag"
        ]
      },
      "Amazon Elastic MapReduce": {
        "StringPrefix": "elasticmapreduce",
        "Actions": [
          "AddInstanceGroups",
          "AddTags",
          "AddJobFlowSteps",
          "CreateSecurityConfiguration",
          "DeleteSecurityConfiguration",
          "DescribeCluster",
          "DescribeJobFlows",
          "DescribeSecurityConfiguration",
          "DescribeStep",
          "ListBootstrapActions",
          "ListClusters",
          "ListInstanceGroups",
          "ListInstances",
          "ListSecurityConfigurations",
          "ListSteps",
          "ModifyInstanceGroups",
          "RemoveTags",
          "RunJobFlow",
          "SetTerminationProtection",
          "SetVisibleToAllUsers",
          "TerminateJobFlows"
        ],
        "conditionKeys": [
          "elasticmapreduce:ResourceTag",
          "elasticmapreduce:RequestTag"
        ]
      },
      "Amazon SNS": {
        "ARNFormat": "arn:aws:sns:<region>:<account_ID>:<topic_name>",
        "ARNRegex": "^arn:aws:sns:.+",
        "HasResource": true,
        "conditionKeys": [
          "aws:SourceArn",
          "sns:Endpoint",
          "sns:Protocol"
        ],
        "StringPrefix": "sns",
        "Actions": [
          "AddPermission",
          "CheckIfPhoneNumberIsOptedOut",
          "ConfirmSubscription",
          "CreatePlatformApplication",
          "CreatePlatformEndpoint",
          "CreateTopic",
          "DeleteEndpoint",
          "DeletePlatformApplication",
          "DeleteTopic",
          "GetEndpointAttributes",
          "GetPlatformApplicationAttributes",
          "GetSMSAttributes",
          "GetSubscriptionAttributes",
          "GetTopicAttributes",
          "ListEndpointsByPlatformApplication",
          "ListPhoneNumbersOptedOut",
          "ListPlatformApplications",
          "ListSubscriptions",
          "ListSubscriptionsByTopic",
          "ListTopics",
          "OptInPhoneNumber",
          "Publish",
          "RemovePermission",
          "SetEndpointAttributes",
          "SetPlatformApplicationAttributes",
          "SetSMSAttributes",
          "SetSubscriptionAttributes",
          "SetTopicAttributes",
          "Subscribe",
          "Unsubscribe"
        ]
      },
      "Amazon S3": {
        "ARNFormat": "arn:aws:s3:::<bucket_name>/<key_name>",
        "ARNRegex": "^arn:aws:s3:::.+",
        "HasResource": true,
        "conditionKeys": [
          "s3:x-amz-acl",
          "s3:x-amz-copy-source",
          "s3:x-amz-metadata-directive",
          "s3:x-amz-server-side-encryption",
          "s3:VersionId",
          "s3:LocationConstraint",
          "s3:delimiter",
          "s3:max-keys",
          "s3:prefix",
          "s3:x-amz-server-side-encryption-aws-kms-key-id"
        ],
        "StringPrefix": "s3",
        "Actions": [
          "AbortMultipartUpload",
          "CreateBucket",
          "DeleteBucket",
          "DeleteBucketPolicy",
          "DeleteBucketWebsite",
          "DeleteObject",
          "DeleteObjectVersion",
          "GetAccelerateConfiguration",
          "GetBucketAcl",
          "GetBucketCORS",
          "GetBucketLocation",
          "GetBucketLogging",
          "GetBucketNotification",
          "GetBucketPolicy",
          "GetBucketRequestPayment",
          "GetBucketTagging",
          "GetBucketVersioning",
          "GetBucketWebsite",
          "GetLifecycleConfiguration",
          "GetObject",
          "GetObjectAcl",
          "GetObjectTagging",
          "GetObjectTorrent",
          "GetObjectVersion",
          "GetObjectVersionAcl",
          "GetObjectVersionTagging",
          "GetObjectVersionTorrent",
          "GetReplicationConfiguration",
          "ListAllMyBuckets",
          "ListBucket",
          "ListBucketMultipartUploads",
          "ListBucketVersions",
          "ListMultipartUploadParts",
          "PutAccelerateConfiguration",
          "PutBucketAcl",
          "PutBucketCORS",
          "PutBucketLogging",
          "PutBucketNotification",
          "PutBucketPolicy",
          "PutBucketRequestPayment",
          "PutBucketTagging",
          "PutBucketVersioning",
          "PutBucketWebsite",
          "PutLifecycleConfiguration",
          "PutReplicationConfiguration",
          "PutObject",
          "PutObjectAcl",
          "PutObjectTagging",
          "PutObjectVersionAcl",
          "PutObjectVersionTagging",
          "ReplicateDelete",
          "ReplicateObject",
          "RestoreObject"
        ]
      },
      "Amazon EC2": {
        "ARNRegex": "^arn:aws:ec2:.+",
        "ARNFormat": "arn:aws:ec2:<region>:<account>:<resourceType>/<resourcePath>",
        "HasResource": true,
        "StringPrefix": "ec2",
        "Actions": [
          "AcceptReservedInstancesExchangeQuote",
          "AcceptVpcPeeringConnection",
          "AllocateAddress",
          "AllocateHosts",
          "AssignPrivateIpAddresses",
          "AssociateAddress",
          "AssociateDhcpOptions",
          "AssociateFpgaImage",
          "AssociateIamInstanceProfile",
          "AssociateRouteTable",
          "AttachClassicLinkVpc",
          "AttachInternetGateway",
          "AttachNetworkInterface",
          "AttachVolume",
          "AttachVpnGateway",
          "AuthorizeSecurityGroupEgress",
          "AuthorizeSecurityGroupIngress",
          "BundleInstance",
          "CancelBundleTask",
          "CancelConversionTask",
          "CancelExportTask",
          "CancelImportTask",
          "CancelReservedInstancesListing",
          "CancelSpotFleetRequests",
          "CancelSpotInstanceRequests",
          "ConfirmProductInstance",
          "CopyImage",
          "CopySnapshot",
          "CreateCustomerGateway",
          "CreateDhcpOptions",
          "CreateFlowLogs",
          "CreateImage",
          "CreateInstanceExportTask",
          "CreateInternetGateway",
          "CreateKeyPair",
          "CreateNatGateway",
          "CreateNetworkAcl",
          "CreateNetworkAclEntry",
          "CreateNetworkInterface",
          "CreatePlacementGroup",
          "CreateReservedInstancesListing",
          "CreateRoute",
          "CreateRouteTable",
          "CreateSecurityGroup",
          "CreateSnapshot",
          "CreateSpotDatafeedSubscription",
          "CreateSubnet",
          "CreateTags",
          "CreateVolume",
          "CreateVpc",
          "CreateVpcEndpoint",
          "CreateVpcPeeringConnection",
          "CreateVpnConnection",
          "CreateVpnConnectionRoute",
          "CreateVpnGateway",
          "DeleteCustomerGateway",
          "DeleteDhcpOptions",
          "DeleteFlowLogs",
          "DeleteInternetGateway",
          "DeleteKeyPair",
          "DeleteNatGateway",
          "DeleteNetworkAcl",
          "DeleteNetworkAclEntry",
          "DeleteNetworkInterface",
          "DeletePlacementGroup",
          "DeleteRoute",
          "DeleteRouteTable",
          "DeleteSecurityGroup",
          "DeleteSnapshot",
          "DeleteSpotDatafeedSubscription",
          "DeleteSubnet",
          "DeleteTags",
          "DeleteVolume",
          "DeleteVpc",
          "DeleteVpcEndpoints",
          "DeleteVpcPeeringConnection",
          "DeleteVpnConnection",
          "DeleteVpnConnectionRoute",
          "DeleteVpnGateway",
          "DeregisterImage",
          "DescribeAccountAttributes",
          "DescribeAddresses",
          "DescribeAvailabilityZones",
          "DescribeBundleTasks",
          "DescribeClassicLinkInstances",
          "DescribeConversionTasks",
          "DescribeCustomerGateways",
          "DescribeDhcpOptions",
          "DescribeExportTasks",
          "DescribeFlowLogs",
          "DescribeHosts",
          "DescribeHostReservations",
          "DescribeHostReservationOfferings",
          "DescribeIamInstanceProfileAssociation",
          "DescribeIdentityIdFormat",
          "DescribeIdFormat",
          "DescribeImageAttribute",
          "DescribeImages",
          "DescribeImportImageTasks",
          "DescribeImportSnapshotTasks",
          "DescribeInstanceAttribute",
          "DescribeInstanceStatus",
          "DescribeInstances",
          "DescribeInternetGateways",
          "DescribeKeyPairs",
          "DescribeMovingAddresses",
          "DescribeNatGateways",
          "DescribeNetworkAcls",
          "DescribeNetworkInterfaceAttribute",
          "DescribeNetworkInterfaces",
          "DescribePlacementGroups",
          "DescribePrefixLists",
          "DescribeRegions",
          "DescribeReservedInstances",
          "DescribeReservedInstancesListings",
          "DescribeReservedInstancesModifications",
          "DescribeReservedInstancesOfferings",
          "DescribeRouteTables",
          "DescribeSecurityGroups",
          "DescribeSnapshotAttribute",
          "DescribeSnapshots",
          "DescribeSpotDatafeedSubscription",
          "DescribeSpotFleetInstances",
          "DescribeSpotFleetRequestHistory",
          "DescribeSpotFleetRequests",
          "DescribeSpotInstanceRequests",
          "DescribeSpotPriceHistory",
          "DescribeStaleSecurityGroups",
          "DescribeSubnets",
          "DescribeTags",
          "DescribeVolumeAttribute",
          "DescribeVolumesModifications",
          "DescribeVolumeStatus",
          "DescribeVolumes",
          "DescribeVpcAttribute",
          "DescribeVpcClassicLink",
          "DescribeVpcEndpointServices",
          "DescribeVpcEndpoints",
          "DescribeVpcPeeringConnections",
          "DescribeVpcs",
          "DescribeVpnConnections",
          "DescribeVpnGateways",
          "DetachClassicLinkVpc",
          "DetachInternetGateway",
          "DetachNetworkInterface",
          "DetachVolume",
          "DetachVpnGateway",
          "DisableVgwRoutePropagation",
          "DisableVpcClassicLink",
          "DisableVpcClassicLinkDnsSupport",
          "DescribeVpcClassicLinkDnsSupport",
          "DisassociateAddress",
          "DisassociateFpgaImage",
          "DisassociateIamInstanceProfile",
          "DisassociateRouteTable",
          "EnableVgwRoutePropagation",
          "EnableVolumeIO",
          "EnableVpcClassicLink",
          "EnableVpcClassicLinkDnsSupport",
          "GetConsoleOutput",
          "GetConsoleScreenshot",
          "GetHostReservationPurchasePreview",
          "GetPasswordData",
          "GetReservedInstancesExchangeQuote",
          "ImportImage",
          "ImportInstance",
          "ImportKeyPair",
          "ImportSnapshot",
          "ImportVolume",
          "ModifyHosts",
          "ModifyIdentityIdFormat",
          "ModifyIdFormat",
          "ModifyImageAttribute",
          "ModifyInstanceAttribute",
          "ModifyInstancePlacement",
          "ModifyNetworkInterfaceAttribute",
          "ModifyReservedInstances",
          "ModifySnapshotAttribute",
          "ModifySpotFleetRequest",
          "ModifySubnetAttribute",
          "ModifyVolume",
          "ModifyVolumeAttribute",
          "ModifyVpcAttribute",
          "ModifyVpcEndpoint",
          "ModifyVpcPeeringConnectionOptions",
          "MonitorInstances",
          "MoveAddressToVpc",
          "PurchaseHostReservation",
          "PurchaseReservedInstancesOffering",
          "PurchaseScheduledInstances",
          "RebootInstances",
          "RegisterImage",
          "RejectVpcPeeringConnection",
          "ReleaseAddress",
          "ReleaseHosts",
          "ReplaceIamInstanceProfileAssociation",
          "ReplaceNetworkAclAssociation",
          "ReplaceNetworkAclEntry",
          "ReplaceRoute",
          "ReplaceRouteTableAssociation",
          "ReportInstanceStatus",
          "RequestSpotFleet",
          "RequestSpotInstances",
          "ResetImageAttribute",
          "ResetInstanceAttribute",
          "ResetNetworkInterfaceAttribute",
          "ResetSnapshotAttribute",
          "RestoreAddressToClassic",
          "RevokeSecurityGroupEgress",
          "RevokeSecurityGroupIngress",
          "RunInstances",
          "RunScheduledInstances",
          "StartInstances",
          "StopInstances",
          "TerminateInstances",
          "UnassignPrivateIpAddresses",
          "UnmonitorInstances"
        ],
        "conditionKeys": [
          "ec2:AccepterVpc",
          "ec2:AvailabilityZone",
          "ec2:EbsOptimized",
          "ec2:ImageType",
          "ec2:InstanceProfile",
          "ec2:InstanceType",
          "ec2:Owner",
          "ec2:ParentSnapshot",
          "ec2:PlacementGroup",
          "ec2:PlacementGroupStrategy",
          "ec2:Public",
          "ec2:Region",
          "ec2:RequesterVpc",
          "ec2:ResourceTag",
          "ec2:RootDeviceType",
          "ec2:Subnet",
          "ec2:Tenancy",
          "ec2:VolumeIops",
          "ec2:VolumeSize",
          "ec2:VolumeType",
          "ec2:Vpc"
        ]
      },
      "Amazon DynamoDB": {
        "ARNFormat": "arn:aws:dynamodb:<region>:<accountID>:table/<tablename>",
        "ARNRegex": "^arn:aws:dynamodb:.+:.+:.+",
        "HasResource": true,
        "StringPrefix": "dynamodb",
        "Actions": [
          "BatchGetItem",
          "BatchWriteItem",
          "CreateTable",
          "DeleteItem",
          "DeleteTable",
          "DescribeLimits",
          "DescribeReservedCapacity",
          "DescribeReservedCapacityOfferings",
          "DescribeStream",
          "DescribeTable",
          "GetItem",
          "GetRecords",
          "GetShardIterator",
          "ListStreams",
          "ListTables",
          "PurchaseReservedCapacityOfferings",
          "PutItem",
          "Query",
          "Scan",
          "UpdateItem",
          "UpdateTable"
        ],
        "conditionKeys": [
          "dynamodb:Attributes",
          "dynamodb:ReturnValues",
          "dynamodb:ReturnConsumedCapacity",
          "dynamodb:Select",
          "dynamodb:LeadingKeys"
        ]
      },
      "Amazon Glacier": {
        "HasResource": true,
        "ARNFormat": "arn:aws:glacier:<region>:<accountID>:<relative-id>",
        "ARNRegex": "^arn:aws:glacier:.+:.+:.+",
        "StringPrefix": "glacier",
        "Actions": [
          "AbortVaultLock",
          "AddTagsToVault",
          "AbortMultipartUpload",
          "CompleteMultipartUpload",
          "CompleteVaultLock",
          "CreateVault",
          "DeleteArchive",
          "DeleteVault",
          "DeleteVaultAccessPolicy",
          "DeleteVaultNotifications",
          "DescribeJob",
          "DescribeVault",
          "GetDataRetrievalPolicy",
          "GetJobOutput",
          "GetVaultAccessPolicy",
          "GetVaultLock",
          "GetVaultNotifications",
          "InitiateJob",
          "InitiateMultipartUpload",
          "InitiateVaultLock",
          "ListJobs",
          "ListMultipartUploads",
          "ListParts",
          "ListTagsForVault",
          "ListVaults",
          "RemoveTagsFromVault",
          "SetDataRetrievalPolicy",
          "SetVaultAccessPolicy",
          "SetVaultNotifications",
          "UploadArchive",
          "UploadMultipartPart"
        ],
        "conditionKeys": [
          "glacier:ArchiveAgeInDays"
        ]
      },
      "Amazon CloudFront": {
        "StringPrefix": "cloudfront",
        "Actions": [
          "CreateCloudFrontOriginAccessIdentity",
          "CreateDistribution",
          "CreateInvalidation",
          "CreateStreamingDistribution",
          "DeleteCloudFrontOriginAccessIdentity",
          "DeleteDistribution",
          "DeleteStreamingDistribution",
          "GetCloudFrontOriginAccessIdentity",
          "GetCloudFrontOriginAccessIdentityConfig",
          "GetDistribution",
          "GetDistributionConfig",
          "GetInvalidation",
          "GetStreamingDistribution",
          "GetStreamingDistributionConfig",
          "ListCloudFrontOriginAccessIdentities",
          "ListDistributions",
          "ListDistributionsByWebACLId",
          "ListInvalidations",
          "ListStreamingDistributions",
          "UpdateCloudFrontOriginAccessIdentity",
          "UpdateDistribution",
          "UpdateStreamingDistribution"
        ]
      },
      "AWS Security Token Service": {
        "ARNFormat": "arn:aws:<sts/iam>::<namespace>:<relative-id>",
        "ARNRegex": "^arn:aws:(sts|iam)::.+",
        "HasResource": true,
        "StringPrefix": "sts",
        "Actions": [
          "AssumeRole",
          "AssumeRoleWithSAML",
          "AssumeRoleWithWebIdentity",
          "DecodeAuthorizationMessage",
          "GetFederationToken",
          "GetSessionToken"
        ]
      },
      "Amazon WorkDocs": {
        "StringPrefix": "workdocs",
        "Actions": [
          "ActivateUser",
          "AddUserToGroup",
          "CheckAlias",
          "CreateInstance",
          "DeactivateUser",
          "DeleteInstance",
          "DeregisterDirectory",
          "DescribeAvailableDirectories",
          "DescribeInstances",
          "RegisterDirectory",
          "RemoveUserFromGroup",
          "UpdateInstanceAlias"
        ]
      },
      "AWS Directory Service": {
        "ARNFormat": "arn:aws:ds:<region>:<account_ID>:<directory-id>",
        "ARNRegex": "^arn:aws:ds:.+:.+:.+",
        "HasResource": true,
        "StringPrefix": "ds",
        "Actions": [
          "AddIpRoutes",
          "AddTagsToResource",
          "CancelSchemaExtension",
          "ConnectDirectory",
          "CreateAlias",
          "CreateComputer",
          "CreateConditionalForwarder",
          "CreateDirectory",
          "CreateMicrosoftAD",
          "CreateSnapshot",
          "CreateTrust",
          "DeleteConditionalForwarder",
          "DeleteDirectory",
          "DeleteSnapshot",
          "DeleteTrust",
          "DeregisterEventTopic",
          "DescribeConditionalForwarders",
          "DescribeDirectories",
          "DescribeEventTopics",
          "DescribeSnapshots",
          "DescribeTrusts",
          "DisableRadius",
          "DisableSso",
          "EnableRadius",
          "EnableSso",
          "GetDirectoryLimits",
          "GetSnapshotLimits",
          "ListIpRoutes",
          "ListTagsForResource",
          "ListSchemaExtensions",
          "RegisterEventTopic",
          "RemoveIpRoutes",
          "RemoveTagsFromResource",
          "RestoreFromSnapshot",
          "StartSchemaExtension",
          "UpdateConditionalForwarder",
          "UpdateRadius",
          "VerifyTrust"
        ]
      },
      "Amazon ElastiCache": {
        "StringPrefix": "elasticache",
        "Actions": [
          "AddTagsToResource",
          "AuthorizeCacheSecurityGroupIngress",
          "CopySnapshot",
          "CreateCacheCluster",
          "CreateCacheParameterGroup",
          "CreateCacheSecurityGroup",
          "CreateCacheSubnetGroup",
          "CreateReplicationGroup",
          "CreateSnapshot",
          "DeleteCacheCluster",
          "DeleteCacheParameterGroup",
          "DeleteCacheSecurityGroup",
          "DeleteCacheSubnetGroup",
          "DeleteReplicationGroup",
          "DeleteSnapshot",
          "DescribeCacheClusters",
          "DescribeCacheEngineVersions",
          "DescribeCacheParameterGroups",
          "DescribeCacheParameters",
          "DescribeCacheSecurityGroups",
          "DescribeCacheSubnetGroups",
          "DescribeEngineDefaultParameters",
          "DescribeEvents",
          "DescribeReplicationGroups",
          "DescribeReservedCacheNodes",
          "DescribeReservedCacheNodesOfferings",
          "DescribeSnapshots",
          "ListAllowedNodeTypeModifications",
          "ListTagsForResource",
          "ModifyCacheCluster",
          "ModifyCacheParameterGroup",
          "ModifyCacheSubnetGroup",
          "ModifyReplicationGroup",
          "PurchaseReservedCacheNodesOffering",
          "RebootCacheCluster",
          "RemoveTagsFromResource",
          "ResetCacheParameterGroup",
          "RevokeCacheSecurityGroupIngress"
        ]
      },
      "Amazon CloudWatch Logs": {
        "StringPrefix": "logs",
        "ARNRegex": "^arn:aws:logs:.+",
        "ARNFormat": "arn:aws:logs:.+:.+:.+",
        "HasResource": true,
        "Actions": [
          "CancelExportTask",
          "CreateExportTask",
          "CreateLogGroup",
          "CreateLogStream",
          "DeleteDestination",
          "DeleteLogGroup",
          "DeleteLogStream",
          "DeleteMetricFilter",
          "DeleteRetentionPolicy",
          "DeleteSubscriptionFilter",
          "DescribeDestinations",
          "DescribeExportTasks",
          "DescribeLogGroups",
          "DescribeLogStreams",
          "DescribeMetricFilters",
          "DescribeSubscriptionFilters",
          "FilterLogEvents",
          "GetLogEvents",
          "PutDestination",
          "PutDestinationPolicy",
          "PutLogEvents",
          "PutMetricFilter",
          "PutRetentionPolicy",
          "PutSubscriptionFilter",
          "TestMetricFilter"
        ]
      },
      "Amazon Cognito Identity": {
        "StringPrefix": "cognito-identity",
        "ARNRegex": "^arn:aws:cognito-identity:.+",
        "ARNFormat": "arn:aws:cognito-identy:<region>:<account>:<resourceType>/<resourcePath>",
        "Actions": [
          "CreateIdentityPool",
          "DeleteIdentityPool",
          "DeleteIdentities",
          "DescribeIdentity",
          "DescribeIdentityPool",
          "GetIdentityPoolRoles",
          "GetOpenIdTokenForDeveloperIdentity",
          "ListIdentities",
          "ListIdentityPools",
          "LookupDeveloperIdentity",
          "MergeDeveloperIdentities",
          "SetIdentityPoolRoles",
          "UnlinkDeveloperIdentity",
          "UpdateIdentityPool"
        ]
      },
      "Amazon Cognito Sync": {
        "StringPrefix": "cognito-sync",
        "ARNRegex": "^arn:aws:cognito-sync:.+",
        "ARNFormat": "arn:aws:ec2:cognito-sync:<region>:<account>:<resourceType>/<resourcePath>:",
        "Actions": [
          "BulkPublish",
          "DeleteDataset",
          "DescribeDataset",
          "DescribeIdentityUsage",
          "DescribeIdentityPoolUsage",
          "GetBulkPublishDetails",
          "GetCognitoEvents",
          "GetIdentityPoolConfiguration",
          "ListDatasets",
          "ListIdentityPoolUsage",
          "ListRecords",
          "RegisterDevice",
          "SetCognitoEvents",
          "SetIdentityPoolConfiguration",
          "SubscribeToDataset",
          "UpdateRecords",
          "UnsubscribeFromDataset"
        ]
      },
      "Amazon Cognito User Pools": {
        "StringPrefix": "cognito-idp",
        "ARNRegex": "^arn:aws:cognito-idp:.+",
        "ARNFormat": "arn:aws:cognito-idp:<region>:<account_ID>:userpool/<userPoolId>",
        "HasResource": true,
        "Actions": [
          "AddCustomAttributes",
          "AdminAddUserToGroup",
          "AdminConfirmSignUp",
          "AdminCreateUser",
          "AdminDeleteUser",
          "AdminDeleteUserAttributes",
          "AdminDisableUser",
          "AdminEnableUser",
          "AdminForgetDevice",
          "AdminGetDevice",
          "AdminGetUser",
          "AdminInitiateAuth",
          "AdminListDevices",
          "AdminListGroupsForUser",
          "AdminRemoveUserFromGroup",
          "AdminResetUserPassword",
          "AdminRespondToAuthChallenge",
          "AdminSetUserSettings",
          "AdminUpdateDeviceStatus",
          "AdminUpdateUserAttributes",
          "AdminUserGlobalSignOut",
          "CreateGroup",
          "CreateUserImportJob",
          "CreateUserPool",
          "CreateUserPoolClient",
          "DeleteGroup",
          "DeleteUserPool",
          "DeleteUserPoolClient",
          "DescribeUserImportJob",
          "DescribeUserPool",
          "DescribeUserPoolClient",
          "GetCSVHeader",
          "GetGroup",
          "ListGroups",
          "ListUserImportJobs",
          "ListUserPoolClients",
          "ListUserPools",
          "ListUsers",
          "ListUsersInGroup",
          "StartUserImportJob",
          "StopUserImportJob",
          "UpdateGroup",
          "UpdateUserPool",
          "UpdateUserPoolClient"
        ]
      },
      "Amazon Mobile Analytics": {
        "ARNFormat": "arn:aws:mobileanalytics:<region>:<account_id>:<app_title>",
        "ARNRegex": "^arn:aws:mobileanalytics:.+",
        "StringPrefix": "mobileanalytics",
        "Actions": [
          "PutEvents",
          "GetReports",
          "GetFinancialReports"
        ]
      },
      "Amazon Route53 Domains": {
        "StringPrefix": "route53domains",
        "Actions": [
          "CheckDomainAvailability",
          "DeleteDomain",
          "DeleteTagsForDomain",
          "DisableDomainAutoRenew",
          "DisableDomainTransferLock",
          "EnableDomainAutoRenew",
          "EnableDomainTransferLock",
          "GetContactReachabilityStatus",
          "GetDomainDetail",
          "GetDomainSuggestions",
          "GetOperationDetail",
          "ListDomains",
          "ListOperations",
          "ListTagsForDomain",
          "RegisterDomain",
          "RenewDomain",
          "ResendContactReachabilityEmail",
          "RetrieveDomainAuthCode",
          "TransferDomain",
          "UpdateDomainContact",
          "UpdateDomainContactPrivacy",
          "UpdateDomainNameservers",
          "UpdateTagsForDomain",
          "ViewBilling"
        ]
      },
      "AWS Key Management Service": {
        "StringPrefix": "kms",
        "ARNFormat": "arn:aws:kms:<region>:<account_id>:<resource_type>/<id>",
        "ARNRegex": "^arn:aws:kms:.+",
        "HasResource": true,
        "Actions": [
          "CancelKeyDeletion",
          "CreateAlias",
          "CreateGrant",
          "CreateKey",
          "Decrypt",
          "DeleteAlias",
          "DeleteImportedKeyMaterial",
          "DescribeKey",
          "DisableKey",
          "DisableKeyRotation",
          "EnableKey",
          "EnableKeyRotation",
          "Encrypt",
          "GenerateDataKey",
          "GenerateDataKeyWithoutPlaintext",
          "GenerateRandom",
          "GetKeyPolicy",
          "GetKeyRotationStatus",
          "GetParametersForImport",
          "ImportKeyMaterial",
          "ListAliases",
          "ListGrants",
          "ListKeyPolicies",
          "ListKeys",
          "ListRetirableGrants",
          "PutKeyPolicy",
          "ReEncryptFrom",
          "ReEncryptTo",
          "ReEncrypt*",
          "RevokeGrant",
          "ScheduleKeyDeletion",
          "UpdateAlias",
          "UpdateKeyDescription"
        ],
        "conditionKeys": [
          "kms:BypassPolicyLockoutSafetyCheck",
          "kms:EncryptionContextKeys",
          "kms:EncryptionContext",
          "kms:CallerAccount",
          "kms:GrantOperations",
          "kms:GrantConstraintType",
          "kms:GrantIsForAWSResource",
          "kms:ReEncryptOnSameKey",
          "kms:ViaService"
        ]
      },
      "AWS Billing": {
        "StringPrefix": "aws-portal",
        "Actions": [
          "ModifyAccount",
          "ModifyBilling",
          "ModifyPaymentMethods",
          "ViewAccount",
          "ViewBilling",
          "ViewPaymentMethods",
          "ViewUsage"
        ]
      },
      "AWS Direct Connect": {
        "StringPrefix": "directconnect",
        "Actions": [
          "AllocateConnectionOnInterconnect",
          "AllocatePrivateVirtualInterface",
          "AllocatePublicVirtualInterface",
          "ConfirmConnection",
          "ConfirmPrivateVirtualInterface",
          "ConfirmPublicVirtualInterface",
          "CreateConnection",
          "CreateInterconnect",
          "CreatePrivateVirtualInterface",
          "CreatePublicVirtualInterface",
          "DeleteConnection",
          "DeleteInterconnect",
          "DeleteVirtualInterface",
          "DescribeConnections",
          "DescribeConnectionsOnInterconnect",
          "DescribeInterconnects",
          "DescribeLocations",
          "DescribeVirtualGateways",
          "DescribeVirtualInterfaces"
        ]
      },
      "AWS Marketplace": {
        "StringPrefix": "aws-marketplace",
        "Actions": [
          "Subscribe",
          "Unsubscribe",
          "ViewSubscriptions"
        ]
      },
      "AWS Marketplace Metering Service": {
        "StringPrefix": "aws-marketplace",
        "Actions": [
          "MeterUsage",
          "BatchMeterUsage",
          "ResolveCustomer"
        ]
      },
      "AWS Marketplace Management Portal": {
        "StringPrefix": "aws-marketplace-management",
        "Actions": [
          "uploadFiles",
          "viewMarketing",
          "viewReports",
          "viewSupport"
        ]
      },
      "AWS Service Catalog": {
        "StringPrefix": "servicecatalog",
        "Actions": [
          "AcceptPortfolioShare",
          "AssociatePrincipalWithPortfolio",
          "AssociateProductWithPortfolio",
          "CreateConstraint",
          "CreatePortfolio",
          "CreatePortfolioShare",
          "CreateProduct",
          "CreateProvisioningArtifact",
          "DeleteConstraint",
          "DeletePortfolio",
          "DeletePortfolioShare",
          "DeleteProduct",
          "DeleteProvisioningArtifact",
          "DescribeConstraint",
          "DescribePortfolio",
          "DescribeProduct",
          "DescribeProductAsAdmin",
          "DescribeProductView",
          "DescribeProvisioningArtifact",
          "DescribeProvisioningParameters",
          "DescribeRecord",
          "DisassociatePrincipalFromPortfolio",
          "DisassociateProductFromPortfolio",
          "ListAcceptedPortfolioShares",
          "ListConstraintsForPortfolio",
          "ListLaunchPaths",
          "ListPortfolioAccess",
          "ListPortfolios",
          "ListPortfoliosForProduct",
          "ListPrincipalsForPortfolio",
          "ListProvisioningArtifacts",
          "ListRecordHistory",
          "ProvisionProduct",
          "RejectPortfolioShare",
          "ScanProvisionedProducts",
          "SearchProducts",
          "SearchProductsAsAdmin",
          "TerminateProvisionedProduct",
          "UpdateConstraint",
          "UpdatePortfolio",
          "UpdateProduct",
          "UpdateProvisionedProduct",
          "UpdateProvisioningArtifact"
        ],
        "conditionKeys": [
          "servicecatalog:userLevel",
          "servicecatalog:roleLevel",
          "servicecatalog:accountLevel"
        ]
      },
      "AWS Shield": {
        "StringPrefix": "shield",
        "ARNRegex": "^arn:aws:shield::[0-9]+:.+/.+",
        "ARNFormat": "arn:aws:shield::<account_ID>:<resource>/<resource_id>",
        "HasResource": true,
        "Actions": [
          "CreateProtection",
          "CreateSubscription",
          "DeleteProtection",
          "DeleteSubscription",
          "DescribeAttack",
          "DescribeProtection",
          "DescribeSubscription",
          "ListAttacks",
          "ListProtections"
        ]
      },
      "AWS Trusted Advisor": {
        "StringPrefix": "trustedadvisor",
        "ARNRegex": "arn:aws:trustedadvisor:*",
        "ARNFormat": "arn:aws:trustedadvisor:*:<account_ID>:checks/{category}/{checkId}",
        "Actions": [
          "DescribeCheckItems",
          "DescribeCheckRefreshStatuses",
          "DescribeCheckSummaries",
          "DescribeNotificationPreferences",
          "ExcludeCheckItems",
          "IncludeCheckItems",
          "RefreshCheck",
          "UpdateNotificationPreferences"
        ]
      },
      "AWS OpsWorks": {
        "StringPrefix": "opsworks",
        "ARNRegex": "^arn:aws:opsworks:.+",
        "ARNFormat": "arn:aws:opsworks:<region>:<accountId>:<stack>/<stackId>/",
        "Actions": [
          "AssignInstance",
          "AssignVolume",
          "AssociateElasticIp",
          "AttachElasticLoadBalancer",
          "CloneStack",
          "CreateApp",
          "CreateDeployment",
          "CreateInstance",
          "CreateLayer",
          "CreateStack",
          "CreateUserProfile",
          "DeleteApp",
          "DeleteInstance",
          "DeleteLayer",
          "DeleteStack",
          "DeleteUserProfile",
          "DeregisterEcsCluster",
          "DeregisterElasticIp",
          "DeregisterInstance",
          "DeregisterVolume",
          "DescribeApps",
          "DescribeCommands",
          "DescribeDeployments",
          "DescribeEcsClusters",
          "DescribeElasticIps",
          "DescribeElasticLoadBalancers",
          "DescribeInstances",
          "DescribeLayers",
          "DescribeLoadBasedAutoScaling",
          "DescribePermissions",
          "DescribeRaidArrays",
          "DescribeRdsDbInstances",
          "DescribeServiceErrors",
          "DescribeStackProvisioningParameters",
          "DescribeStackSummary",
          "DescribeStacks",
          "DescribeTimeBasedAutoScaling",
          "DescribeUserProfiles",
          "DescribeVolumes",
          "DetachElasticLoadBalancer",
          "DisassociateElasticIp",
          "GetHostnameSuggestion",
          "GrantAccess",
          "RebootInstance",
          "RegisterEcsCluster",
          "RegisterElasticIp",
          "RegisterInstance",
          "RegisterRdsDbInstance",
          "RegisterVolume",
          "SetLoadBasedAutoScaling",
          "SetPermission",
          "SetTimeBasedAutoScaling",
          "StartInstance",
          "StartStack",
          "StopInstance",
          "StopStack",
          "UnassignInstance",
          "UnassignVolume",
          "UpdateApp",
          "UpdateElasticIp",
          "UpdateInstance",
          "UpdateLayer",
          "UpdateMyUserProfile",
          "UpdateRdsDbInstance",
          "UpdateStack",
          "UpdateUserProfile",
          "UpdateVolume"
        ]
      },
      "AWS OpsWorks for Chef Automate": {
        "StringPrefix": "opsworks-cm",
        "ARNRegex": "^arn:aws:opsworks-cm:.+",
        "ARNFormat": "arn:aws:opsworks-cm:<region>:<accountId>:<server|backup>/<server name | backup id>/<UUID>",
        "HasResource": true,
        "Actions": [
          "AssociateNode",
          "CreateBackup",
          "CreateServer",
          "DeleteBackup",
          "DeleteServer",
          "DescribeAccountAttributes",
          "DescribeBackups",
          "DescribeEvents",
          "DescribeNodeAssociationStatus",
          "DescribeServers",
          "DisassociateNode",
          "RestoreServer",
          "StartMaintenance",
          "UpdateServer",
          "UpdateServerEngineAttributes"
        ]
      },
      "Amazon WorkMail": {
        "StringPrefix": "workmail",
        "Actions": [
          "AddMembersToGroup",
          "CreateGroup",
          "CreateMailDomain",
          "CreateMailUser",
          "CreateOrganization",
          "DeleteOrganization",
          "DeleteMailDomain",
          "DeleteMobileDevice",
          "DescribeDirectories",
          "DescribeKmsKeys",
          "DescribeOrganizations",
          "DescribeMailDomains",
          "DescribeMailGroups",
          "DescribeMailUsers",
          "DisableMailGroups",
          "DisableMailUsers",
          "EnableMailDomain",
          "EnableMailUsers",
          "EnableMailGroups",
          "GetMailDomainDetails",
          "GetMailGroupDetails",
          "GetMailUserDetails",
          "GetMobileDeviceDetails",
          "GetMobileDevicesForUser",
          "GetMobilePolicyDetails",
          "ListMembersInMailGroup",
          "RemoveMembersFromGroup",
          "ResetUserPassword",
          "SearchMembers",
          "SetAdmin",
          "SetDefaultMailDomain",
          "SetMailGroupDetails",
          "SetMailUserDetails",
          "SetMobilePolicyDetails",
          "WipeMobileDevice"
        ]
      },
      "Amazon EC2 Container Service": {
        "StringPrefix": "ecs",
        "ARNRegex": "^arn:aws:ecs:.+",
        "ARNFormat": "arn:aws:ecs:<region>:<account_ID>:<resource_type>/<relative_ID>",
        "HasResource": true,
        "Actions": [
          "CreateCluster",
          "CreateService",
          "DeleteCluster",
          "DeleteService",
          "DeregisterContainerInstance",
          "DeregisterTaskDefinition",
          "DescribeClusters",
          "DescribeContainerInstances",
          "DescribeServices",
          "DescribeTaskDefinition",
          "DescribeTasks",
          "DiscoverPollEndpoint",
          "ListClusters",
          "ListContainerInstances",
          "ListServices",
          "ListTaskDefinitionFamilies",
          "ListTaskDefinitions",
          "ListTasks",
          "Poll",
          "RegisterContainerInstance",
          "RegisterTaskDefinition",
          "RunTask",
          "StartTask",
          "StopTask",
          "StartTelemetrySession",
          "SubmitContainerStateChange",
          "SubmitTaskStateChange",
          "UpdateContainerAgent",
          "UpdateService"
        ],
        "conditionKeys": [
          "ecs:cluster",
          "ecs:container-instances"
        ]
      },
      "Amazon Lightsail": {
        "StringPrefix": "lightsail",
        "ARNRegex": "^arn:aws:lightsail:.+",
        "ARNFormat": "arn:aws:lightsail:<regionName>:<userAccountId>:<resourceType>/<Id>",
        "HasResource": true,
        "Actions": [
          "AllocateStaticIp",
          "AttachStaticIp",
          "CloseInstancePublicPorts",
          "CreateDomain",
          "CreateDomainEntry",
          "CreateInstanceSnapshot",
          "CreateInstances",
          "CreateInstancesFromSnapshot",
          "CreateKeyPair",
          "DeleteDomain",
          "DeleteDomainEntry",
          "DeleteInstance",
          "DeleteInstanceSnapshot",
          "DeleteKeyPair",
          "DetachStaticIp",
          "DownloadDefaultKeyPair",
          "GetActiveNames",
          "GetBlueprints",
          "GetBundles",
          "GetDomain",
          "GetDomains",
          "GetInstance",
          "GetInstanceAccessDetails",
          "GetInstanceMetricData",
          "GetInstancePortStates",
          "GetInstanceSnapshot",
          "GetInstanceSnapshots",
          "GetInstanceState",
          "GetInstances",
          "GetKeyPair",
          "GetKeyPairs",
          "GetOperation",
          "GetOperations",
          "GetOperationsForResource",
          "GetRegions",
          "GetStaticIp",
          "GetStaticIps",
          "ImportKeyPair",
          "IsVpcPeered",
          "OpenInstancePublicPorts",
          "PeerVpc",
          "RebootInstance",
          "ReleaseStaticIp",
          "StartInstance",
          "StopInstance",
          "UnpeerVpc",
          "UpdateDomainEntry"
        ]
      },
      "Amazon Machine Learning": {
        "StringPrefix": "machinelearning",
        "ARNRegex": "^arn:aws:machinelearning:.+",
        "ARNFormat": "arn:aws:machinelearning:<region>:<account_ID>:<resource_type>/<relative_ID>",
        "HasResource": true,
        "Actions": [
          "AddTags",
          "CreateBatchPrediction",
          "CreateDataSourceFromRDS",
          "CreateDataSourceFromRedshift",
          "CreateDataSourceFromS3",
          "CreateEvaluation",
          "CreateMLModel",
          "CreateRealtimeEndpoint",
          "DeleteBatchPrediction",
          "DeleteDataSource",
          "DeleteEvaluation",
          "DeleteMLModel",
          "DeleteRealtimeEndpoint",
          "DeleteTags",
          "DescribeBatchPredictions",
          "DescribeDataSources",
          "DescribeEvaluations",
          "DescribeMLModels",
          "DescribeTags",
          "GetBatchPrediction",
          "GetDataSource",
          "GetEvaluation",
          "GetMLModel",
          "Predict",
          "UpdateBatchPrediction",
          "UpdateDataSource",
          "UpdateEvaluation",
          "UpdateMLModel"
        ]
      },
      "Amazon Rekognition": {
        "StringPrefix": "rekognition",
        "ARNRegex": "^arn:aws:rekognition:.+",
        "ARNFormat": "arn:aws:rekognition:<region>:<account_ID>:<collection>/<collectionid>",
        "HasResource": true,
        "Actions": [
          "CompareFaces",
          "CreateCollection",
          "DeleteCollection",
          "DeleteFaces",
          "DetectFaces",
          "DetectLabels",
          "IndexFaces",
          "ListCollections",
          "ListFaces",
          "SearchFaces",
          "SearchFacesByImage"
        ]
      },
      "Amazon WorkSpaces": {
        "StringPrefix": "workspaces",
        "Actions": [
          "CreateTags",
          "CreateWorkspaces",
          "DeleteTags",
          "DescribeTags",
          "DescribeWorkspaceBundles",
          "DescribeWorkspacesConnectionStatus",
          "DescribeWorkspaceDirectories",
          "DescribeWorkspaces",
          "ModifyWorkspaceProperties",
          "StartWorkspaces",
          "StopWorkspaces",
          "RebootWorkspaces",
          "RebuildWorkspaces",
          "TerminateWorkspaces"
        ]
      },
      "Amazon WorkSpaces Application Manager": {
        "StringPrefix": "wam",
        "Actions": [
          "AuthenticatePackager"
        ]
      },
      "Data Pipeline": {
        "StringPrefix": "datapipeline",
        "Actions": [
          "ActivatePipeline",
          "AddTags",
          "CreatePipeline",
          "DeactivatePipeline",
          "DeletePipeline",
          "DescribeObjects",
          "DescribePipelines",
          "EvaluateExpression",
          "GetAccountLimits",
          "GetPipelineDefinition",
          "ListPipelines",
          "PollForTask",
          "PutAccountLimits",
          "PutPipelineDefinition",
          "QueryObjects",
          "RemoveTags",
          "ReportTaskProgress",
          "ReportTaskRunnerHeartbeat",
          "SetStatus",
          "SetTaskStatus",
          "ValidatePipelineDefinition"
        ]
      },
      "AWS CodeBuild ": {
        "StringPrefix": "codebuild",
        "ARNRegex": "^arn:aws:codebuild:[a-z0-9]+:[0-9]{12}:project/[A-Za-z0-9][A-Za-z0-9-_]{1,254}",
        "ARNFormat": "arn:aws:codebuild:<region>:<account ID>:project/<project name>",
        "HasResource": true,
        "Actions": [
          "BatchGetBuilds",
          "BatchGetProjects",
          "CreateProject",
          "DeleteProject",
          "ListBuilds",
          "ListBuildsForProject",
          "ListConnectedOAuthAccounts",
          "ListProjects",
          "ListRepositories",
          "PersistOAuthToken",
          "StartBuild",
          "StopBuild",
          "UpdateProject"
        ]
      },
      "AWS Cost and Usage Report": {
        "StringPrefix": "cur",
        "ARNRegex": "^arn:aws:cur:.+:.+:.+",
        "ARNFormat": "arn:aws:cur:<region>:<account_ID>:definition/<reportname>",
        "HasResource": true,
        "Actions": [
          "DeleteReportDefinition",
          "DescribeReportDefinitions",
          "PutReportDefinition"
        ]
      },
      "AWS Organizations": {
        "StringPrefix": "organizations",
        "ARNRegex": "^arn:aws:organizations::.+:.+",
        "ARNFormat": "arn:aws:organizations::<masterAccountId>:<resource>/o-<organizationId>(/<resourceType>/<resourceId>)?",
        "HasResource": true,
        "Actions": [
          "AcceptHandshake",
          "AttachPolicy",
          "CancelHandshake",
          "CreateAccount",
          "CreateOrganization",
          "CreateOrganizationalUnit",
          "CreatePolicy",
          "DeclineHandshake",
          "DeleteOrganization",
          "DeleteOrganizationalUnit",
          "DeletePolicy",
          "DescribeAccount",
          "DescribeCreateAccountStatus",
          "DescribeHandshake",
          "DescribeOrganization",
          "DescribeOrganizationalUnit",
          "DescribePolicy",
          "DetachPolicy",
          "DisablePolicyType",
          "EnableAllFeatures",
          "EnablePolicyType",
          "InviteAccountToOrganization",
          "LeaveOrganization",
          "ListAccounts",
          "ListAccountsForParent",
          "ListChildren",
          "ListCreateAccountStatus",
          "ListHandshakesForAccount",
          "ListHandshakesForOrganization",
          "ListOrganizationalUnitsForParent",
          "ListParents",
          "ListPolicies",
          "ListPoliciesForTarget",
          "ListRoots",
          "ListTargetsForPolicy",
          "MoveAccount",
          "RemoveAccountFromOrganization",
          "UpdateOrganizationalUnit",
          "UpdatePolicy"
        ]
      },
      "Amazon Elasticsearch Service": {
        "StringPrefix": "es",
        "ARNRegex": "^arn:aws:es:.+",
        "ARNFormat": "arn:aws:es:<region>:<account_ID>:<resource>",
        "HasResource": true,
        "Actions": [
          "AddTags",
          "CreateElasticsearchDomain",
          "DeleteElasticsearchDomain",
          "DescribeElasticsearchDomain",
          "DescribeElasticsearchDomains",
          "DescribeElasticsearchDomainConfig",
          "ListDomainNames",
          "ListTags",
          "RemoveTags",
          "UpdateElasticsearchDomainConfig"
        ]
      },
      "AWS WAF": {
        "StringPrefix": "waf",
        "ARNRegex": "^arn:aws:waf::[0-9]+:.+/.+",
        "ARNFormat": "arn:aws:waf::<account_ID>:<resource>/<resource_id>",
        "HasResource": true,
        "Actions": [
          "CreateByteMatchSet",
          "CreateIPSet",
          "CreateRule",
          "CreateSizeConstraintSet",
          "CreateSqlInjectionMatchSet",
          "CreateWebACL",
          "CreateXssMatchSet",
          "DeleteByteMatchSet",
          "DeleteIPSet",
          "DeleteRule",
          "DeleteSizeConstraintSet",
          "DeleteSqlInjectionMatchSet",
          "DeleteWebACL",
          "DeleteXssMatchSet",
          "GetByteMatchSet",
          "GetChangeToken",
          "GetChangeTokenStatus",
          "GetIPSet",
          "GetRule",
          "GetSampledRequests",
          "GetSizeConstraintSet",
          "GetSqlInjectionMatchSet",
          "GetWebACL",
          "GetXssMatchSet",
          "ListByteMatchSets",
          "ListIPSets",
          "ListRules",
          "ListSizeConstraintSets",
          "ListSqlInjectionMatchSets",
          "ListWebACLs",
          "ListXssMatchSets",
          "UpdateByteMatchSet",
          "UpdateIPSet",
          "UpdateRule",
          "UpdateSizeConstraintSet",
          "UpdateSqlInjectionMatchSet",
          "UpdateWebACL",
          "UpdateXssMatchSet"
        ]
      },
      "AWS WAF Regional": {
        "StringPrefix": "waf-regional",
        "ARNRegex": "^arn:aws:waf-regional:.+:[0-9]+:.+/.+",
        "ARNFormat": "arn:aws:waf-regional:<region>:<account_ID>:<resource>/<resource_id>",
        "HasResource": true,
        "Actions": [
          "AssociateWebACL",
          "CreateByteMatchSet",
          "CreateIPSet",
          "CreateRule",
          "CreateSizeConstraintSet",
          "CreateSqlInjectionMatchSet",
          "CreateWebACL",
          "CreateXssMatchSet",
          "DeleteByteMatchSet",
          "DeleteIPSet",
          "DeleteRule",
          "DeleteSizeConstraintSet",
          "DeleteSqlInjectionMatchSet",
          "DeleteWebACL",
          "DeleteXssMatchSet",
          "DisassociateWebACL",
          "GetByteMatchSet",
          "GetChangeToken",
          "GetChangeTokenStatus",
          "GetIPSet",
          "GetRule",
          "GetSampledRequests",
          "GetSizeConstraintSet",
          "GetSqlInjectionMatchSet",
          "GetWebACL",
          "GetWebACLForResource",
          "GetXssMatchSet",
          "ListByteMatchSets",
          "ListIPSets",
          "ListResourcesForWebACL",
          "ListRules",
          "ListSizeConstraintSets",
          "ListSqlInjectionMatchSets",
          "ListWebACLs",
          "ListXssMatchSets",
          "UpdateByteMatchSet",
          "UpdateIPSet",
          "UpdateRule",
          "UpdateSizeConstraintSet",
          "UpdateSqlInjectionMatchSet",
          "UpdateWebACL",
          "UpdateXssMatchSet"
        ]
      },
      "Amazon Inspector": {
        "StringPrefix": "inspector",
        "ARNRegex": "^arn:aws:inspector:.+",
        "ARNFormat": "arn:aws:inspector:<region>:<account_ID>:<resource_id>",
        "HasResource": true,
        "Actions": [
          "AddAttributesToFindings",
          "CreateAssessmentTarget",
          "CreateAssessmentTemplate",
          "CreateResourceGroup",
          "DeleteAssessmentRun",
          "DeleteAssessmentTarget",
          "DeleteAssessmentTemplate",
          "DescribeAssessmentRuns",
          "DescribeAssessmentTargets",
          "DescribeAssessmentTemplates",
          "DescribeCrossAccountAccessRole",
          "DescribeFindings",
          "DescribeResourceGroups",
          "DescribeRulesPackages",
          "GetTelemetryMetadata",
          "ListAssessmentRunAgents",
          "ListAssessmentRuns",
          "ListAssessmentTargets",
          "ListAssessmentTemplates",
          "ListEventSubscriptions",
          "ListFindings",
          "ListRulesPackages",
          "ListTagsForResource",
          "PreviewAgents",
          "RegisterCrossAccountAccessRole",
          "RemoveAttributesFromFindings",
          "SetTagsForResource",
          "StartAssessmentRun",
          "StopAssessmentRun",
          "SubscribeToEvent",
          "UnsubscribeFromEvent",
          "UpdateAssessmentTarget"
        ]
      },
      "Amazon Kinesis Analytics": {
        "StringPrefix": "kinesisanalytics",
        "ARNRegex": "arn:aws:[a-zA-Z0-9-]+:[a-zA-Z0-9-]*:d{12}:[a-zA-Z_0-9+=,.@-_/:]+",
        "ARNFormat": "arn:aws:kinesisanalytics:<region>:<account_ID>:application/<app-name>",
        "HasResource": true,
        "Actions": [
          "AddApplicationInput",
          "AddApplicationOutput",
          "AddApplicationReferenceDataSource",
          "CreateApplication",
          "DeleteApplication",
          "DeleteApplicationOutput",
          "DeleteApplicationReferenceDataSource",
          "DescribeApplication",
          "DiscoverInputSchema",
          "GetApplicationState",
          "ListApplications",
          "StartApplication",
          "StopApplication",
          "UpdateApplication"
        ]
      },
      "Amazon Kinesis Firehose": {
        "StringPrefix": "firehose",
        "ARNRegex": "^arn:aws:firehose:.+:[0-9]+:deliverystream/.+",
        "ARNFormat": "arn:aws:firehose:<region>:<account_ID>:deliverystream/<deliverystreamname>",
        "HasResource": true,
        "Actions": [
          "CreateDeliveryStream",
          "DeleteDeliveryStream",
          "DescribeDeliveryStream",
          "ListDeliveryStreams",
          "PutRecord",
          "PutRecordBatch",
          "UpdateDestination"
        ]
      },
      "AWS IoT": {
        "StringPrefix": "iot",
        "conditionKeys": [
          "iot:ClientId"
        ],
        "ARNRegex": "^arn:aws:iot:.+:[0-9]+:.+",
        "ARNFormat": "arn:aws:iot:<region>:<account_ID>:<type>/<name>",
        "HasResource": true,
        "Actions": [
          "AcceptCertificateTransfer",
          "AttachPrincipalPolicy",
          "AttachThingPrincipal",
          "CancelCertificateTransfer",
          "Connect",
          "CreateCertificateFromCsr",
          "CreateKeysAndCertificate",
          "CreatePolicy",
          "CreatePolicyVersion",
          "CreateThing",
          "CreateThingType",
          "CreateTopicRule",
          "DeleteCACertificate",
          "DeleteCertificate",
          "DeletePolicy",
          "DeletePolicyVersion",
          "DeleteRegistrationCode",
          "DeleteThing",
          "DeleteThingShadow",
          "DeleteThingType",
          "DeleteTopicRule",
          "DeprecateThingType",
          "DescribeCaCertificate",
          "DescribeCertificate",
          "DescribeEndpoint",
          "DescribeThing",
          "DescribeThingType",
          "DetachPrincipalPolicy",
          "DetachThingPrincipal",
          "DisableTopicRule",
          "EnableTopicRule",
          "GetLoggingOptions",
          "GetPolicy",
          "GetPolicyVersion",
          "GetRegistrationCode",
          "GetThingShadow",
          "GetTopicRule",
          "ListCaCertificates",
          "ListCertificates",
          "ListCertificatesByCa",
          "ListOutgoingCertificates",
          "ListPolicies",
          "ListPolicyPrincipals",
          "ListPolicyVersions",
          "ListPrincipalPolicies",
          "ListPrincipalThings",
          "ListThingPrincipals",
          "ListThings",
          "ListThingTypes",
          "ListTopicRules",
          "Publish",
          "Receive",
          "RegisterCACertificate",
          "RegisterCertificate",
          "RejectCertificateTransfer",
          "ReplaceTopicRule",
          "SetDefaultPolicyVersion",
          "SetLoggingOptions",
          "Subscribe",
          "TransferCertificate",
          "UpdateCACertificate",
          "UpdateCertificate",
          "UpdateThing",
          "UpdateThingShadow"
        ]
      },
      "Amazon GameLift": {
        "StringPrefix": "gamelift",
        "HasResource": false,
        "Actions": [
          "CreateAlias",
          "CreateBuild",
          "CreateFleet",
          "CreateGameSession",
          "CreatePlayerSession",
          "CreatePlayerSessions",
          "DeleteAlias",
          "DeleteBuild",
          "DeleteFleet",
          "DeleteScalingPolicy",
          "DescribeAlias",
          "DescribeBuild",
          "DescribeEC2InstanceLimits",
          "DescribeFleetAttributes",
          "DescribeFleetCapacity",
          "DescribeFleetEvents",
          "DescribeFleetPortSettings",
          "DescribeFleetUtilization",
          "DescribeGameSessions",
          "DescribeGameSessionDetails",
          "DescribeInstances",
          "DescribePlayerSessions",
          "DescribeRuntimeConfiguration",
          "DescribeScalingPolicies",
          "GetGameSessionLogUrl",
          "GetInstanceAccess",
          "ListAliases",
          "ListBuilds",
          "ListFleets",
          "PutScalingPolicy",
          "SearchGameSessions",
          "RequestUploadCredentials",
          "ResolveAlias",
          "UpdateAlias",
          "UpdateBuild",
          "UpdateFleetAttributes",
          "UpdateFleetCapacity",
          "UpdateFleetPortSettings",
          "UpdateGameSession",
          "UpdateRuntimeConfiguration"
        ]
      },
      "Amazon Mechanical Turk": {
        "StringPrefix": "mechanicalturk",
        "HasResource": false,
        "Actions": [
          "AcceptQualificationRequest",
          "ApproveAssignment",
          "ApproveRejectedAssignment",
          "AssignQualification",
          "AssociateQualificationWithWorker",
          "BlockWorker",
          "CreateHITType",
          "ChangeHITTypeOfHIT",
          "CreateHIT",
          "CreateHITWithHITType",
          "CreateQualificationType",
          "CreateWorkerBlock",
          "DeleteHIT",
          "DeleteQualificationType",
          "DeleteWorkerBlock",
          "DisableHIT",
          "DisassociateQualificationFromWorker",
          "DisposeHIT",
          "DisposeQualificationType",
          "ExtendHIT",
          "ForceExpireHIT",
          "GetAccountBalance",
          "GetAssignment",
          "GetAssignmentsForHIT",
          "GetBlockedWorkers",
          "GetBonusPayments",
          "GetFileUploadURL",
          "GetHIT",
          "GetHITsForQualificationType",
          "GetQualificationRequests",
          "GetQualificationScore",
          "GetQualificationType",
          "GetQualificationsForQualificationType",
          "GetRequesterStatistic",
          "GetRequesterWorkerStatistic",
          "GetReviewResultsForHIT",
          "GetReviewableHITs",
          "GrantBonus",
          "GrantQualification",
          "ListAssignmentsForHIT",
          "ListBonusPayments",
          "ListHITs",
          "ListHITsForQualificationType",
          "ListQualificationRequests",
          "ListQualificationTypes",
          "ListReviewableHITs",
          "ListReviewPolicyResultsForHIT",
          "ListWorkerBlocks",
          "ListWorkersWithQualificationType",
          "NotifyWorkers",
          "RegisterHITType",
          "RejectAssignment",
          "RejectQualificationRequest",
          "RevokeQualification",
          "SearchHITs",
          "SearchQualificationTypes",
          "SendBonus",
          "SendTestEventNotification",
          "SetHITAsReviewing",
          "SetHITTypeNotification",
          "UnblockWorker",
          "UpdateExpirationForHIT",
          "UpdateHITReviewStatus",
          "UpdateHITTypeOfHIT",
          "UpdateNotificationSettings",
          "UpdateQualificationScore",
          "UpdateQualificationType"
        ]
      },
      "AWS XRay": {
        "StringPrefix": "xray",
        "Actions": [
          "BatchGetTraces",
          "GetServiceGraph",
          "GetTraceGraph",
          "GetTraceSummaries",
          "PutTelemetryRecords",
          "PutTraceSegments"
        ]
      }
    },
    "policyTypes": {
      "SNSPolicy": {
        "Name": "SNS Topic Policy",
        "AssociatedService": "Amazon SNS"
      },
      "IAMPolicy": {
        "Name": "IAM Policy",
        "AssociatedService": "*"
      },
      "SQSPolicy": {
        "Name": "SQS Queue Policy",
        "AssociatedService": "Amazon SQS"
      },
      "S3Policy": {
        "Name": "S3 Bucket Policy",
        "AssociatedService": "Amazon S3"
      },
      "VPCPolicy": {
        "Name": "VPC Endpoint Policy",
        "AssociatedService": [
          "Amazon S3",
          "Amazon DynamoDB"
        ]
      }
    },
    "VPCPolicyServiceActionMap": {
      "Amazon DynamoDB": [
        "BatchGetItem",
        "BatchWriteItem",
        "CreateTable",
        "DeleteItem",
        "DeleteTable",
        "DescribeLimits",
        "DescribeReservedCapacity",
        "DescribeReservedCapacityOfferings",
        "DescribeTable",
        "GetItem",
        "ListTables",
        "PurchaseReservedCapacityOfferings",
        "PutItem",
        "Query",
        "Scan",
        "UpdateItem",
        "UpdateTable"
      ]
    }
  },
  "serviceConfig": [
    {
      "name": "EMR_DefaultRole",
      "displayName": "Amazon Elastic MapReduce",
      "tags": [
        "classic"
      ],
      "vendorCode": "elasticmapreduce",
      "readOnlyActions": [],
      "actions": [],
      "roleTemplates": [
        {
          "name": "EMR_DefaultRole",
          "displayName": "Amazon Elastic MapReduce",
          "description": "Role to allow EMR to access other AWS services such as EC2 on your behalf.",
          "trustPolicy": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "sts:AssumeRole"
                ],
                "Principal": {
                  "Service": [
                    "elasticmapreduce.amazonaws.com"
                  ]
                }
              }
            ]
          },
          "filterPolicies": [
            "arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceRole"
          ],
          "permissions": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Resource": "*",
                "Action": [
                  "ec2:AuthorizeSecurityGroupIngress",
                  "ec2:CancelSpotInstanceRequests",
                  "ec2:CreateSecurityGroup",
                  "ec2:CreateTags",
                  "ec2:DeleteTags",
                  "ec2:DescribeAvailabilityZones",
                  "ec2:DescribeAccountAttributes",
                  "ec2:DescribeInstances",
                  "ec2:DescribeKeyPairs",
                  "ec2:DescribeRouteTables",
                  "ec2:DescribeSecurityGroups",
                  "ec2:DescribeSpotInstanceRequests",
                  "ec2:DescribeSpotPriceHistory",
                  "ec2:DescribeSubnets",
                  "ec2:DescribeVpcAttributes",
                  "ec2:DescribeVpcs",
                  "ec2:ModifyImageAttribute",
                  "ec2:ModifyInstanceAttribute",
                  "ec2:RequestSpotInstances",
                  "ec2:RunInstances",
                  "ec2:TerminateInstances",
                  "iam:GetRole",
                  "iam:GetRolePolicy",
                  "iam:ListInstanceProfiles",
                  "iam:ListRolePolicies",
                  "iam:PassRole",
                  "s3:CreateBucket",
                  "s3:Get*",
                  "s3:List*",
                  "sdb:BatchPutAttributes",
                  "sdb:Select"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "name": "EMR_EC2_DefaultRole",
      "displayName": "Amazon Elastic MapReduce for EC2",
      "tags": [
        "classic"
      ],
      "vendorCode": "ElasticMapReduce",
      "readOnlyActions": [],
      "actions": [],
      "roleTemplates": [
        {
          "name": "EMR_EC2_DefaultRole",
          "displayName": "Amazon Elastic MapReduce for EC2",
          "description": "Role to allow EC2 instances in an EMR cluster to access other AWS services such as S3.",
          "trustPolicy": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "sts:AssumeRole"
                ],
                "Principal": {
                  "Service": [
                    "ec2.amazonaws.com"
                  ]
                }
              }
            ]
          },
          "filterPolicies": [
            "arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceforEC2Role"
          ],
          "permissions": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Resource": "*",
                "Action": [
                  "cloudwatch:*",
                  "dynamodb:*",
                  "ec2:Describe*",
                  "elasticmapreduce:Describe*",
                  "rds:Describe*",
                  "s3:*",
                  "sdb:*",
                  "sns:*",
                  "sqs:*"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Autoscaling",
      "displayName": "Amazon Auto Scaling",
      "tags": [
        "classic"
      ],
      "vendorCode": "autoscaling",
      "readOnlyActions": [],
      "actions": [],
      "roleTemplates": [
        {
          "name": "Autoscaling",
          "displayName": "AutoScaling Notification Access",
          "description": "Allows AWS AutoScaling to publish to SNS and SQS notification targets in your account.",
          "trustPolicy": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "sts:AssumeRole"
                ],
                "Principal": {
                  "Service": [
                    "autoscaling.amazonaws.com"
                  ]
                }
              }
            ]
          },
          "filterPolicies": [
            "arn:aws:iam::aws:policy/service-role/AutoScalingNotificationAccessRole"
          ],
          "permissions": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "sqs:SendMessage",
                  "sqs:GetQueueUrl",
                  "sns:Publish"
                ],
                "Resource": "*"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "CloudHSM",
      "displayName": "AWS CloudHSM",
      "tags": [
        "classic"
      ],
      "vendorCode": "cloudhsm",
      "readOnlyActions": [],
      "actions": [],
      "roleTemplates": [
        {
          "name": "CloudHSM",
          "displayName": "AWS CloudHSM",
          "description": "Allows AWS CloudHSM to create a network interface on your behalf.",
          "trustPolicy": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "sts:AssumeRole"
                ],
                "Principal": {
                  "Service": [
                    "cloudhsm.amazonaws.com"
                  ]
                }
              }
            ]
          },
          "filterPolicies": [
            "arn:aws:iam::aws:policy/service-role/AWSCloudHSMRole"
          ],
          "permissions": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "ec2:CreateNetworkInterface",
                  "ec2:CreateTags",
                  "ec2:DeleteNetworkInterface",
                  "ec2:DescribeNetworkInterfaceAttribute",
                  "ec2:DescribeNetworkInterfaces",
                  "ec2:DescribeSubnets",
                  "ec2:DescribeVpcs",
                  "ec2:DetachNetworkInterface"
                ],
                "Resource": [
                  "*"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Data Pipeline",
      "displayName": "AWS Data Pipeline",
      "tags": [
        "classic"
      ],
      "vendorCode": "datapipeline",
      "readOnlyActions": [],
      "actions": [],
      "roleTemplates": [
        {
          "name": "Data Pipeline",
          "displayName": "AWS Data Pipeline",
          "description": "Allows AWS Data Pipeline and Data Pipeline managed Amazon EMR clusters to call AWS Services on your behalf.",
          "trustPolicy": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "sts:AssumeRole"
                ],
                "Principal": {
                  "Service": [
                    "datapipeline.amazonaws.com",
                    "elasticmapreduce.amazonaws.com"
                  ]
                }
              }
            ]
          },
          "filterPolicies": [
            "arn:aws:iam::aws:policy/service-role/AWSDataPipelineRole"
          ],
          "permissions": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "s3:List*",
                  "s3:Put*",
                  "s3:Get*",
                  "s3:DeleteObject",
                  "dynamodb:DescribeTable",
                  "dynamodb:Scan",
                  "dynamodb:Query",
                  "dynamodb:GetItem",
                  "dynamodb:BatchGetItem",
                  "dynamodb:UpdateTable",
                  "ec2:DescribeInstances",
                  "ec2:DescribeSecurityGroups",
                  "ec2:RunInstances",
                  "ec2:CreateTags",
                  "ec2:StartInstances",
                  "ec2:StopInstances",
                  "ec2:TerminateInstances",
                  "elasticmapreduce:*",
                  "rds:DescribeDBInstances",
                  "rds:DescribeDBSecurityGroups",
                  "redshift:DescribeClusters",
                  "redshift:DescribeClusterSecurityGroups",
                  "sns:GetTopicAttributes",
                  "sns:ListTopics",
                  "sns:Publish",
                  "sns:Subscribe",
                  "sns:Unsubscribe",
                  "iam:PassRole",
                  "iam:ListRolePolicies",
                  "iam:GetRole",
                  "iam:GetRolePolicy",
                  "iam:ListInstanceProfiles",
                  "cloudwatch:*",
                  "datapipeline:DescribeObjects",
                  "datapipeline:EvaluateExpression"
                ],
                "Resource": [
                  "*"
                ]
              }
            ]
          }
        },
        {
          "name": "Data Pipeline EC2",
          "displayName": "Amazon EC2 Role for Data Pipeline",
          "description": "Provides access to S3, DynamoDB, and other services for EC2 instances that are launched by Data Pipeline.",
          "trustPolicy": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "sts:AssumeRole"
                ],
                "Principal": {
                  "Service": [
                    "ec2.amazonaws.com"
                  ]
                }
              }
            ]
          },
          "filterPolicies": [
            "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforDataPipelineRole"
          ],
          "permissions": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "s3:List*",
                  "s3:Put*",
                  "s3:Get*",
                  "s3:DeleteObject",
                  "dynamodb:DescribeTable",
                  "dynamodb:Scan",
                  "dynamodb:Query",
                  "dynamodb:GetItem",
                  "dynamodb:BatchGetItem",
                  "dynamodb:UpdateTable",
                  "rds:DescribeDBInstances",
                  "rds:DescribeDBSecurityGroups",
                  "redshift:DescribeClusters",
                  "redshift:DescribeClusterSecurityGroups",
                  "cloudwatch:PutMetricData",
                  "datapipeline:PollForTask",
                  "datapipeline:ReportTaskProgress",
                  "datapipeline:SetTaskStatus",
                  "datapipeline:PollForTask",
                  "datapipeline:ReportTaskRunnerHeartbeat"
                ],
                "Resource": [
                  "*"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Elastic Transcoder",
      "displayName": "Amazon Elastic Transcoder",
      "tags": [
        "classic"
      ],
      "vendorCode": "elastictranscoder",
      "readOnlyActions": [],
      "actions": [],
      "roleTemplates": [
        {
          "name": "Elastic Transcoder",
          "displayName": "Amazon Elastic Transcoder",
          "description": "Allows Elastic Transcoder to call S3 and SNS on your behalf.",
          "trustPolicy": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "sts:AssumeRole"
                ],
                "Principal": {
                  "Service": [
                    "elastictranscoder.amazonaws.com"
                  ]
                }
              }
            ]
          },
          "filterPolicies": [
            "arn:aws:iam::aws:policy/service-role/AmazonElasticTranscoderRole"
          ],
          "permissions": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "1",
                "Effect": "Allow",
                "Action": [
                  "s3:ListBucket",
                  "s3:Put*",
                  "s3:Get*",
                  "s3:*MultipartUpload*"
                ],
                "Resource": [
                  "*"
                ]
              },
              {
                "Sid": "2",
                "Effect": "Allow",
                "Action": [
                  "sns:Publish"
                ],
                "Resource": [
                  "*"
                ]
              },
              {
                "Sid": "3",
                "Effect": "Deny",
                "Action": [
                  "s3:*Policy*",
                  "sns:*Permission*",
                  "sns:*Delete*",
                  "s3:*Delete*",
                  "sns:*Remove*"
                ],
                "Resource": [
                  "*"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Machine Learning",
      "displayName": "Amazon Machine Learning",
      "tags": [
        "classic"
      ],
      "vendorCode": "machinelearning",
      "readOnlyActions": [],
      "actions": [],
      "roleTemplates": [
        {
          "name": "Amazon Machine Learning Role for Redshift Data Source",
          "displayName": "Amazon Machine Learning Role for Redshift Data Source",
          "description": "Allows Machine Learning to configure and use your Redshift Clusters and S3 Staging Locations for Redshift Data Source.",
          "filterPolicies": [
            "arn:aws:iam::aws:policy/service-role/AmazonMachineLearningRoleforRedshiftDataSource"
          ],
          "trustPolicy": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "",
                "Effect": "Allow",
                "Principal": {
                  "Service": "machinelearning.amazonaws.com"
                },
                "Action": "sts:AssumeRole"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "OpsWorks",
      "displayName": "AWS OpsWorks",
      "tags": [
        "classic"
      ],
      "vendorCode": "opsworks",
      "readOnlyActions": [],
      "actions": [],
      "roleTemplates": [
        {
          "name": "OpsWorks",
          "displayName": "AWS OpsWorks",
          "description": "Allows OpsWorks to create and manage AWS resources on your behalf.",
          "trustPolicy": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "sts:AssumeRole"
                ],
                "Principal": {
                  "Service": [
                    "opsworks.amazonaws.com"
                  ]
                }
              }
            ]
          },
          "filterPolicies": [
            "arn:aws:iam::aws:policy/service-role/AWSOpsWorksRole"
          ],
          "permissions": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "cloudwatch:GetMetricStatistics",
                  "ec2:DescribeAccountAttributes",
                  "ec2:DescribeAvailabilityZones",
                  "ec2:DescribeInstances",
                  "ec2:DescribeKeyPairs",
                  "ec2:DescribeSecurityGroups",
                  "ec2:DescribeSubnets",
                  "ec2:DescribeVpcs",
                  "elasticloadbalancing:DescribeInstanceHealth",
                  "elasticloadbalancing:DescribeLoadBalancers",
                  "iam:GetRolePolicy",
                  "iam:ListInstanceProfiles",
                  "iam:ListRoles",
                  "iam:ListUsers",
                  "iam:PassRole",
                  "opsworks:*",
                  "rds:*"
                ],
                "Resource": [
                  "*"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "name": "RDSCloudHsmAndDirectoryService",
      "displayName": "Amazon RDS",
      "tags": [
        "classic"
      ],
      "vendorCode": "rds",
      "readOnlyActions": [],
      "actions": [],
      "roleTemplates": [
        {
          "name": "RDSCloudHsmAndDirectoryService",
          "displayName": "Amazon RDS",
          "description": "Allows RDS to call AWS services on your behalf.",
          "trustPolicy": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "",
                "Effect": "Allow",
                "Action": [
                  "sts:AssumeRole"
                ],
                "Principal": {
                  "Service": [
                    "rds.amazonaws.com"
                  ]
                }
              }
            ]
          },
          "filterPolicies": [
            "arn:aws:iam::aws:policy/service-role/AmazonRDSDirectoryServiceAccess",
            "arn:aws:iam::aws:policy/service-role/RDSCloudHsmAuthorizationRole"
          ],
          "permissions": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "cloudhsm:CreateLunaClient",
                  "cloudhsm:GetClientConfiguration",
                  "cloudhsm:DeleteLunaClient",
                  "cloudhsm:DescribeLunaClient",
                  "cloudhsm:ModifyLunaClient",
                  "cloudhsm:DescribeHapg",
                  "cloudhsm:ModifyHapg",
                  "cloudhsm:GetConfig"
                ],
                "Resource": "*"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "SimpleSystemsManager",
      "displayName": "Amazon EC2 Role for Simple Systems Manager",
      "tags": [
        "classic"
      ],
      "vendorCode": "ssm",
      "readOnlyActions": [],
      "actions": [],
      "roleTemplates": [
        {
          "name": "SimpleSystemsManagerServiceRole",
          "displayName": "Amazon EC2 Role for Simple Systems Manager",
          "description": "Provides access to Amazon Simple Systems Manager(SSM), CloudWatch, EC2 and supported plugins in SSM document. ",
          "filterPolicies": [
            "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM"
          ],
          "trustPolicy": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "",
                "Effect": "Allow",
                "Principal": {
                  "Service": "ec2.amazonaws.com"
                },
                "Action": "sts:AssumeRole"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "ContainerService",
      "displayName": "Amazon EC2 Container Service Role",
      "tags": [
        "classic"
      ],
      "vendorCode": "ecs",
      "readOnlyActions": [],
      "actions": [],
      "roleTemplates": [
        {
          "name": "EC2ContainerServiceRole",
          "displayName": "Amazon EC2 Container Service Role",
          "description": "Allows ECS to create and manage AWS resources on your behalf.",
          "filterPolicies": [
            "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceRole"
          ],
          "trustPolicy": {
            "Version": "2008-10-17",
            "Statement": [
              {
                "Sid": "",
                "Effect": "Allow",
                "Principal": {
                  "Service": "ecs.amazonaws.com"
                },
                "Action": "sts:AssumeRole"
              }
            ]
          }
        },
        {
          "name": "EC2ContainerAutoscaleRole",
          "displayName": "Amazon EC2 Container Service Autoscale Role",
          "description": "Role to allow Auto scaling to access and update ECS Services",
          "filterPolicies": [
            "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceAutoscaleRole"
          ],
          "trustPolicy": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "",
                "Effect": "Allow",
                "Principal": {
                  "Service": "application-autoscaling.amazonaws.com"
                },
                "Action": "sts:AssumeRole"
              }
            ]
          }
        },
        {
          "name": "EC2ContainerTaskRole",
          "displayName": "Amazon EC2 Container Service Task Role",
          "description": "Allows ECS tasks to call AWS services on your behalf.",
          "filterPolicies": null,
          "trustPolicy": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "",
                "Effect": "Allow",
                "Principal": {
                  "Service": [
                    "ecs-tasks.amazonaws.com"
                  ]
                },
                "Action": "sts:AssumeRole"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "EC2SpotFleet",
      "displayName": "Amazon EC2 Spot Fleet Role",
      "tags": [
        "classic"
      ],
      "vendorCode": "spotfleet",
      "readOnlyActions": [],
      "actions": [],
      "roleTemplates": [
        {
          "name": "EC2SpotFleetRole",
          "displayName": "Amazon EC2 Spot Fleet Role",
          "description": "Role to Allow EC2 Spot Fleet to request and terminate Spot Instances on your behalf.",
          "filterPolicies": [
            "arn:aws:iam::aws:policy/service-role/AmazonEC2SpotFleetRole"
          ],
          "trustPolicy": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "",
                "Effect": "Allow",
                "Principal": {
                  "Service": "spotfleet.amazonaws.com"
                },
                "Action": "sts:AssumeRole"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "AWSSWF",
      "displayName": "AWS SWF",
      "tags": [
        "classic"
      ],
      "vendorCode": "config",
      "readOnlyActions": [],
      "actions": [],
      "roleTemplates": [
        {
          "name": "AWSSWF",
          "displayName": "AWS SWF",
          "description": "Allows SWF workflows to invoke Lambda functions on your behalf.",
          "filterPolicies": [
            "arn:aws:iam::aws:policy/service-role/AWSLambdaRole"
          ],
          "trustPolicy": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "",
                "Effect": "Allow",
                "Principal": {
                  "Service": "swf.amazonaws.com"
                },
                "Action": "sts:AssumeRole"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "AWSEvents",
      "displayName": "Amazon CloudWatch Events",
      "tags": [
        "classic"
      ],
      "vendorCode": "config",
      "readOnlyActions": [],
      "actions": [],
      "roleTemplates": [
        {
          "name": "AWSEvents",
          "displayName": "Amazon CloudWatch Events",
          "description": "Allows Amazon CloudWatch Events to invoke targets and perform actions in built-in targets on your behalf.",
          "filterPolicies": [
            "arn:aws:iam::aws:policy/service-role/CloudWatchEventsBuiltInTargetExecutionAccess",
            "arn:aws:iam::aws:policy/service-role/CloudWatchEventsInvocationAccess"
          ],
          "trustPolicy": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "",
                "Effect": "Allow",
                "Principal": {
                  "Service": "events.amazonaws.com"
                },
                "Action": "sts:AssumeRole"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "EC2ContainerService",
      "displayName": "Amazon EC2 Role for EC2 Container Service",
      "tags": [
        "classic"
      ],
      "vendorCode": "ecs",
      "readOnlyActions": [],
      "actions": [],
      "roleTemplates": [
        {
          "name": "EC2ContainerServiceEC2Role",
          "displayName": "Amazon EC2 Role for EC2 Container Service",
          "description": "Role to allow EC2 instances in an Amazon ECS cluster to access Amazon ECS.",
          "filterPolicies": [
            "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"
          ],
          "trustPolicy": {
            "Version": "2008-10-17",
            "Statement": [
              {
                "Sid": "",
                "Effect": "Allow",
                "Principal": {
                  "Service": "ec2.amazonaws.com"
                },
                "Action": "sts:AssumeRole"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "AWSConfig",
      "displayName": "AWS Config",
      "tags": [
        "classic"
      ],
      "vendorCode": "config",
      "readOnlyActions": [],
      "actions": [],
      "roleTemplates": [
        {
          "name": "AWSConfig",
          "displayName": "AWS Config",
          "description": " Allows AWS Config to call AWS services and collect resource configurations on your behalf.",
          "filterPolicies": [
            "arn:aws:iam::aws:policy/service-role/AWSConfigRole"
          ],
          "trustPolicy": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "",
                "Effect": "Allow",
                "Principal": {
                  "Service": "config.amazonaws.com"
                },
                "Action": "sts:AssumeRole"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "SNS",
      "displayName": "Amazon SNS",
      "tags": [
        "classic"
      ],
      "vendorCode": "sns",
      "readOnlyActions": [],
      "actions": [],
      "roleTemplates": [
        {
          "name": "SNS",
          "displayName": "Amazon SNS",
          "description": "Allows SNS to call CloudWatchLogs on your behalf",
          "trustPolicy": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "sts:AssumeRole"
                ],
                "Principal": {
                  "Service": [
                    "sns.amazonaws.com"
                  ]
                }
              }
            ]
          },
          "filterPolicies": [
            "arn:aws:iam::aws:policy/service-role/AmazonSNSRole"
          ],
          "permissions": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "logs:CreateLogGroup",
                  "logs:CreateLogStream",
                  "logs:PutLogEvents",
                  "logs:PutMetricFilter",
                  "logs:PutRetentionPolicy"
                ],
                "Resource": [
                  "*"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "name": "IoT",
      "displayName": "AWS IoT",
      "tags": [
        "classic"
      ],
      "vendorCode": "iot",
      "readOnlyActions": [],
      "actions": [],
      "roleTemplates": [
        {
          "name": "IoT",
          "displayName": "AWS IoT",
          "description": "Allows AWS IoT to call AWS Services on your behalf.",
          "filterPolicies": [
            "arn:aws:iam::aws:policy/service-role/AWSIoTLogging",
            "arn:aws:iam::aws:policy/service-role/AWSIoTRuleActions"
          ],
          "trustPolicy": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "",
                "Effect": "Allow",
                "Principal": {
                  "Service": [
                    "iot.amazonaws.com"
                  ]
                },
                "Action": [
                  "sts:AssumeRole"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "name": "CodeDeploy",
      "displayName": "AWS CodeDeploy",
      "tags": [
        "classic"
      ],
      "vendorCode": "codedeploy",
      "readOnlyActions": [],
      "actions": [],
      "roleTemplates": [
        {
          "name": "CodeDeploy",
          "displayName": "AWS CodeDeploy",
          "description": "Allows CodeDeploy to access other AWS services such as Auto Scaling on your behalf.",
          "filterPolicies": [
            "arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole"
          ],
          "trustPolicy": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "",
                "Effect": "Allow",
                "Principal": {
                  "Service": [
                    "codedeploy.amazonaws.com"
                  ]
                },
                "Action": [
                  "sts:AssumeRole"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "name": "ServiceCatalog",
      "displayName": "AWS Service Catalog",
      "tags": [
        "classic"
      ],
      "vendorCode": "servicecatalog",
      "readOnlyActions": [],
      "actions": [],
      "roleTemplates": [
        {
          "name": "ServiceCatalog",
          "displayName": "AWS Service Catalog",
          "description": "Allows AWS Service Catalog to access AWS resources on your behalf.",
          "filterPolicies": null,
          "trustPolicy": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "",
                "Effect": "Allow",
                "Principal": {
                  "Service": [
                    "servicecatalog.amazonaws.com"
                  ]
                },
                "Action": [
                  "sts:AssumeRole"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "name": "AWSAmazonAPIGatewayRole",
      "displayName": "Amazon API Gateway",
      "tags": [
        "classic"
      ],
      "vendorCode": "execute-api",
      "readOnlyActions": [],
      "actions": [],
      "roleTemplates": [
        {
          "name": "AWSAmazonAPIGatewayRole",
          "displayName": "Amazon API Gateway",
          "description": "Allows API Gateway to call AWS resources on your behalf.",
          "filterPolicies": [
            "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
          ],
          "trustPolicy": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "",
                "Effect": "Allow",
                "Principal": {
                  "Service": [
                    "apigateway.amazonaws.com"
                  ]
                },
                "Action": [
                  "sts:AssumeRole"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "name": "RDSEnhancedMonitoring",
      "displayName": "Amazon RDS Role for Enhanced Monitoring",
      "tags": [
        "classic"
      ],
      "vendorCode": "rds",
      "readOnlyActions": [],
      "actions": [],
      "roleTemplates": [
        {
          "name": "RDSEnhancedMonitoring",
          "displayName": "Amazon RDS Role for Enhanced Monitoring",
          "description": "Allows RDS to manage CloudWatch Logs resources for Enhanced Monitoring on your behalf.",
          "filterPolicies": [
            "arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole"
          ],
          "trustPolicy": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "",
                "Effect": "Allow",
                "Principal": {
                  "Service": [
                    "monitoring.rds.amazonaws.com"
                  ]
                },
                "Action": [
                  "sts:AssumeRole"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "name": "ElasticBeanstalk",
      "displayName": "AWS Elastic Beanstalk",
      "tags": [
        "classic"
      ],
      "vendorCode": "elasticbeanstalk",
      "readOnlyActions": [],
      "actions": [],
      "roleTemplates": [
        {
          "name": "ElasticBeanstalk",
          "displayName": "AWS Elastic Beanstalk",
          "description": "Allows Elastic Beanstalk to create and manage AWS resources on your behalf.",
          "filterPolicies": [
            "arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkService",
            "arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkEnhancedHealth"
          ],
          "trustPolicy": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "",
                "Effect": "Allow",
                "Principal": {
                  "Service": [
                    "elasticbeanstalk.amazonaws.com"
                  ]
                },
                "Action": [
                  "sts:AssumeRole"
                ],
                "Condition": {
                  "StringEquals": {
                    "sts:ExternalId": "elasticbeanstalk"
                  }
                }
              }
            ]
          }
        }
      ]
    },
    {
      "name": "AWSCloudformation",
      "displayName": "AWS Cloudformation",
      "tags": [
        "classic"
      ],
      "vendorCode": "cloudformation",
      "readOnlyActions": [],
      "actions": [],
      "roleTemplates": [
        {
          "name": "AWSCloudformation",
          "displayName": "AWS Cloudformation Role",
          "description": "Allows Cloudformation to create and manage AWS stacks and its resources on your behalf",
          "filterPolicies": null,
          "trustPolicy": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Sid": "",
                "Effect": "Allow",
                "Principal": {
                  "Service": "cloudformation.amazonaws.com"
                },
                "Action": "sts:AssumeRole"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "AWSGreengrass",
      "displayName": "AWS Greengrass",
      "tags": [
        "classic"
      ],
      "vendorCode": "greengrass",
      "readOnlyActions": [],
      "actions": [],
      "roleTemplates": [
        {
          "name": "AWSGreengrass",
          "displayName": "AWS Greengrass Role",
          "description": "Allows AWS Greengrass to call AWS Services on your behalf",
          "filterPolicies": null,
          "trustPolicy": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": "greengrass.amazonaws.com"
                },
                "Action": "sts:AssumeRole"
              }
            ]
          }
        }
      ]
    }
  ],
  "commonRoleTemplates": [
    {
      "name": "EC2",
      "displayName": "Amazon EC2",
      "description": "Allows EC2 instances to call AWS services on your behalf.",
      "filterPolicies": null,
      "trustPolicy": {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Action": [
              "sts:AssumeRole"
            ],
            "Principal": {
              "Service": [
                "ec2.amazonaws.com"
              ]
            }
          }
        ]
      }
    },
    {
      "name": "DirectoryService",
      "displayName": "AWS Directory Service",
      "description": "Allows AWS Directory Service to manage access for existing directory users and groups to AWS services.",
      "filterPolicies": null,
      "trustPolicy": {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Action": [
              "sts:AssumeRole"
            ],
            "Principal": {
              "Service": [
                "ds.amazonaws.com"
              ]
            }
          }
        ]
      }
    },
    {
      "name": "Lambda",
      "displayName": "AWS Lambda",
      "description": "Allows Lambda Function to call AWS services on your behalf.",
      "filterPolicies": null,
      "trustPolicy": {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Action": [
              "sts:AssumeRole"
            ],
            "Principal": {
              "Service": [
                "lambda.amazonaws.com"
              ]
            }
          }
        ]
      }
    },
    {
      "name": "Redshift",
      "displayName": "Amazon Redshift",
      "description": "Allows Amazon Redshift Clusters to call AWS services on your behalf",
      "filterPolicies": null,
      "trustPolicy": {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Action": [
              "sts:AssumeRole"
            ],
            "Principal": {
              "Service": [
                "redshift.amazonaws.com"
              ]
            }
          }
        ]
      }
    }
  ],
  "WebIdentityFederationConfig": {
    "conditionOperators": [
      "StringEquals",
      "StringNotEquals",
      "StringEqualsIgnoreCase",
      "StringNotEqualsIgnoreCase",
      "StringLike",
      "StringNotLike"
    ],
    "providerMap": {
      "Login with Amazon": {
        "providerEndpoint": "www.amazon.com",
        "idName": "Application Id",
        "suffix": ":app_id",
        "conditionKeys": [
          "www.amazon.com:user_id"
        ]
      },
      "Amazon Cognito": {
        "providerEndpoint": "cognito-identity.amazonaws.com",
        "idName": "Identity Pool Id",
        "suffix": ":aud",
        "conditionKeys": [
          "cognito-identity.amazonaws.com:sub",
          "cognito-identity.amazonaws.com:amr"
        ]
      },
      "Facebook": {
        "providerEndpoint": "graph.facebook.com",
        "idName": "Application Id",
        "suffix": ":app_id",
        "conditionKeys": [
          "graph.facebook.com:id",
          "graph.facebook.com:locale"
        ]
      },
      "Google": {
        "providerEndpoint": "accounts.google.com",
        "idName": "Audience",
        "suffix": ":aud",
        "conditionKeys": [
          "accounts.google.com:sub"
        ]
      }
    }
  },
  "keyManagementConfig": {
    "key-consolepolicy-2": {
      "Id": "key-consolepolicy-2",
      "Version": "2012-10-17",
      "Statement": [
        {
          "Sid": "Enable IAM User Permissions",
          "Effect": "Allow",
          "Principal": {
            "AWS": [
              "{{KEY_ACCOUNT_ID}}"
            ]
          },
          "Action": "kms:*",
          "Resource": "*"
        },
        {
          "Sid": "Allow access for Key Administrators",
          "Effect": "Allow",
          "Principal": {
            "AWS": [
              "{{KEY_AUTHORIZED_MANAGERS}}"
            ]
          },
          "Action": [
            "kms:Create*",
            "kms:Describe*",
            "kms:Enable*",
            "kms:List*",
            "kms:Put*",
            "kms:Update*",
            "kms:Revoke*",
            "kms:Disable*",
            "kms:Get*",
            "kms:Delete*"
          ],
          "Resource": "*"
        },
        {
          "Sid": "Allow use of the key",
          "Effect": "Allow",
          "Principal": {
            "AWS": [
              "{{KEY_AUTHORIZED_USERS}}"
            ]
          },
          "Action": [
            "kms:Encrypt",
            "kms:Decrypt",
            "kms:ReEncrypt*",
            "kms:GenerateDataKey*",
            "kms:DescribeKey"
          ],
          "Resource": "*"
        },
        {
          "Sid": "Allow attachment of persistent resources",
          "Effect": "Allow",
          "Principal": {
            "AWS": [
              "{{KEY_AUTHORIZED_USERS}}"
            ]
          },
          "Action": [
            "kms:CreateGrant",
            "kms:ListGrants",
            "kms:RevokeGrant"
          ],
          "Resource": "*",
          "Condition": {
            "Bool": {
              "kms:GrantIsForAWSResource": true
            }
          }
        }
      ]
    }
  },
  "OneClickRoleCreationConfig": {
    "services": [
      {
        "name": "s3-0044523875",
        "displayName": "S3",
        "description": "S3 is requesting permission to replicate resources in your account ",
        "description2": "Click Allow to give S3 replication access to resources in your account. <a href=\"https://docs-aws.amazon.com/console/s3/replication-iam-role-intro\">Learn More</a>.",
        "params": {},
        "baseReturnURI": "^https://(s3-console-.*\\.console\\.aws|.*\\.console\\.aws|console\\.aws).amazon.com/GetResource(/(?!\\.\\./)[^/\\n]*)*$"
      },
      {
        "name": "firehose-prod",
        "displayName": "Amazon Kinesis Firehose",
        "description": "Amazon Kinesis Firehose is requesting permission to use resources in your account",
        "description2": "Click Allow to give Amazon Kinesis Firehose Read and Write access to resources in your account.",
        "params": {},
        "baseReturnURI": "^https://(.*\\.console\\.aws|console\\.aws).amazon.com/firehose(/(?!\\.\\./)[^/\\n]*)*$"
      },
      {
        "name": "mobileanalytics-0045229998",
        "displayName": "Amazon Mobile Analytics",
        "description": "Amazon Mobile Analytics would like to create roles on your behalf.",
        "description2": "Amazon Mobile Analytics uses Identity and Access Management (IAM) to securely write data to your Amazon S3 bucket and Amazon Redshift cluster. From this screen, you can select an existing role or select to automatically have the required roles created for you. <br> To view the details of the role and its policy click on \"View Details\" below. To proceed with your selection click the \"Allow\" button at the bottom of the screen.",
        "baseReturnURI": "^https://(.*\\.console\\.aws|console\\.aws).amazon.com/mobileanalytics(/(?!\\.\\./)[^/\\n]*)*$"
      },
      {
        "name": "codepipeline-0044873234",
        "displayName": "CodePipeline",
        "description": "AWS CodePipeline is requesting permission to use resources in your account",
        "description2": "Choose Allow to grant AWS CodePipeline read and write access to resources in your AWS account.",
        "params": {},
        "baseReturnURI": "^https://(.*\\.console\\.aws|console\\.aws|codepipeline-preview-console(\\.[a-z]+-([a-z]+-)?[a-z]+-[0-9]+)?\\.aws|([a-zA-Z0-9-]+\\.)?awsc-[a-z]+\\.aws).amazon.com/codepipeline(/(?!\\.\\./)[^/\\n]*)*$"
      },
      {
        "name": "flowlogging-0050122067",
        "displayName": "Flow Logs",
        "description": "VPC Flow Logs is requesting permission to use resources in your account ",
        "description2": "Click Allow to give Flow Logs write access to CloudWatch groups in your account. This allows Flow Logs to publish metrics to your cloudwatch group.",
        "params": {},
        "baseReturnURI": "^https://(.*\\.console.aws|console.aws|vpc-preview-b\\.aka\\.iad).amazon.com/(vpc|ec2)(/(?!\\.\\./)[^/\\n]*)*$"
      },
      {
        "name": "isengard-0047679719",
        "displayName": "Isengard",
        "description": "Isengard is requesting permission to use resources in your account ",
        "description2": "Click Allow to give Isengard Full IAM access to resources in your account. ",
        "params": {},
        "baseReturnURI": "^https://isengard.amazon.com/registration(/(?!\\.\\./)[^/\\n]*)*$"
      },
      {
        "name": "ec2-ecs-0046788064",
        "displayName": "ec2-ecs",
        "description": "AWS EC2 Container Service is requesting permission to use resources in your account",
        "description2": "Click Allow to give EC2 Container Serivce access to resources in your account.",
        "params": {}
      },
      {
        "name": "ec2-ecs-0046788065",
        "displayName": "ec2-ecs",
        "description": "Amazon ECS needs permission to use resources in your account",
        "description2": "IAM roles help you restrict access to your AWS resources. Amazon ECS uses IAM roles in two ways. The IAM role for EC2 refers to an IAM role that grants your EC2 instances permissions to access AWS resources it needs, including the ability to connect with the ECS service to manage your tasks. The service role grants the necessary permissions for ECS to interact with resources such as Elastic Load Balancing. <a href=\"http://docs.aws.amazon.com/AmazonECS/latest/developerguide/Welcome.html\">Learn more about Amazon ECS.</a>\nYou can grant required permissions in three ways: Reuse an existing role and policy, associate a new permissions policy with the required permissions to an existing role, or create a new role. By default, the controls below will create a new role or add a new policy to the role if it already exists. You can use these controls for any of the approaches. <a href=\"http://docs.aws.amazon.com/AmazonECS/latest/developerguide/IAM_policies.html\"> Learn more about Amazon ECS IAM policies.</a>",
        "params": {},
        "baseReturnURI": "^https://(.*\\.console\\.aws|console\\.aws|.*\\.awsc-preprod.aws).amazon.com/ecs(/(?!\\.\\./)[^/\\n]*)*$"
      },
      {
        "name": "lambda-0044690667",
        "displayName": "AWS Lambda",
        "description": "AWS Lambda requires access to your resources",
        "description2": "<p>IAM roles help you restrict access to your AWS resources. <a href=\"http://aws.amazon.com/iam/\" target=\"_blank\">Learn more about IAM</a>.  AWS Lambda uses IAM roles in two ways.  The \"execution\" role refers to an IAM role that grants your custom code permissions to access AWS resources it needs.  AWS Lambda assumes this role while executing cloud functions on your behalf. The \"invocation\" role refers to an IAM role that grants the necessary permissions for Lambda to interact with event sources like Amazon S3 and Amazon DynamoDB.  <a href=\"https://docs.aws.amazon.com/console/lambda/introduction\" target=\"_blank\">Learn more about How Lambda works</a>.</p><p>You can grant required permissions in three ways: Reuse an existing role and policy, associate a new permissions policy with the required permissions to an existing role, or create a new role. By default, the controls below will create a new role or add a new policy to the role if it already exists.  You can use these controls for any of the approaches.  To understand the default permissions, see the policy document for creating a new policy or role.  For example, the default execution role policy grants permissions to AWS Lambda write to Amazon CloudWatch logs on your behalf.  You can modify the role to add any additional permissions your code needs, such as access to other AWS services.</p>",
        "baseReturnURI": "^https://(.*\\.console\\.aws|console\\.aws).amazon.com/lambda(/(?!\\.\\./)[^/\\n]*)*$"
      },
      {
        "name": "cognito-0043888825",
        "displayName": "Cognito",
        "description": "Amazon Cognito is requesting permission to use resources in your account. ",
        "description2": "Click Allow to give Amazon Cognito write access to Kinesis Stream in your account. ",
        "params": {},
        "baseReturnURI": "^https://(.*\\.console\\.aws|console\\.aws).amazon.com/cognito(/(?!\\.\\./)[^/\\n]*)*$"
      },
      {
        "name": "hyperloop-0044058604",
        "displayName": "Amazon WorkSpaces Application Manager",
        "description": "Amazon WorkSpaces Application Manager is requesting permission to use resources in your account ",
        "description2": "Click Allow to give Amazon WorkSpaces Application Manager Read-only access to AWS Marketplace Catalog resources in your account.",
        "params": {},
        "baseReturnURI": "^https://(hyperloop-console-prod-iad\\.aws|.*\\.console\\.aws|console\\.aws).amazon.com/hyperloop(/(?!\\.\\./)[^/\\n]*)*$"
      },
      {
        "name": "mobileanalytics-redshiftExport",
        "displayName": "Mobile Analytics",
        "description": "Amazon Mobile Analytics would like to create a role on your behalf. ",
        "description2": "Click Allow to give this new IAM Role Read/Write access to resources in your account. This IAM Role will be used on an EC2 instance to facilitate copying Amazon Mobile Analytics data in S3 into Amazon Redshift. ",
        "params": {},
        "baseReturnURI": "^https://(.*\\.console\\.aws|console\\.aws).amazon.com/mobileanalytics(/(?!\\.\\./)[^/\\n]*)*$"
      },
      {
        "name": "eb-0042752868",
        "displayName": "Elastic Beanstalk",
        "description": "AWS Elastic Beanstalk is requesting permission to use resources in your account.",
        "description2": "<p>AWS Elastic Beanstalk needs to access your AWS resources on your behalf, clicking allow will create an IAM Role for AWS Elastic Beanstalk to use. See below for details.</p>",
        "baseReturnURI": {},
        "params": {}
      },
      {
        "name": "importexport-0096142238",
        "displayName": "AWS Snowball",
        "description": "AWS Snowball is requesting permission to use resources in your account",
        "description2": "Click Allow to give AWS Snowball Read/Write access to resources in your account. AWS Snowball will use this role to configure the appliance for storage and local computing.",
        "params": {},
        "baseReturnURI": "^https://(([a-z]+-[a-z]+-\\d+\\.)?awsc-preprod\\.aws|snowball-console-preview\\.aws|.*\\.console\\.aws|console\\.aws).amazon.com/importexport(/(?!\\.\\./)[^/\\n]*)*$"
      },
      {
        "name": "importexport-0096981029",
        "displayName": "AWS Snowball",
        "description": "AWS Snowball is requesting permission to use resources in your account",
        "description2": "Click Allow to give AWS Snowball Read access to resources in your account. AWS Snowball will use this role to configure the appliance for storage and local computing.",
        "params": {},
        "baseReturnURI": "^https://(([a-z]+-[a-z]+-\\d+\\.)?awsc-preprod\\.aws|snowball-console-preview\\.aws|.*\\.console\\.aws|console\\.aws).amazon.com/importexport(/(?!\\.\\./)[^/\\n]*)*$"
      },
      {
        "name": "importexport-0046055266",
        "displayName": "AWS Snowball",
        "description": "AWS Snowball is requesting permission to use resources in your account",
        "description2": "Click Allow to give AWS Snowball write access to resources in your account. AWS Snowball will use this role to import your data into Amazon S3.",
        "params": {},
        "baseReturnURI": "^https://(([a-z]+-[a-z]+-\\d+\\.)?awsc-preprod\\.aws|snowball-console-preview\\.aws|.*\\.console\\.aws|console\\.aws).amazon.com/importexport(/(?!\\.\\./)[^/\\n]*)*$"
      },
      {
        "name": "importexport-0089258736",
        "displayName": "AWS Snowball",
        "description": "AWS Snowball is requesting permission to use resources in your account",
        "description2": "Click Allow to give AWS Snowball write access to resources in your account. AWS Snowball will use this role to import your data into Amazon S3 / Amazon Glacier.",
        "params": {},
        "baseReturnURI": "^https://(([a-z]+-[a-z]+-\\d+\\.)?awsc-preprod\\.aws|snowball-console-preview\\.aws|.*\\.console\\.aws|console\\.aws).amazon.com/importexport(/(?!\\.\\./)[^/\\n]*)*$"
      },
      {
        "name": "sns-prod",
        "displayName": "SNS",
        "description": "SNS is requesting permission to use resources in your account ",
        "description2": "<p>Click Allow to give SNS write access to resources in your account. This will allow SNS to use Cloudwatch Logs on your behalf.</p>",
        "baseReturnURI": {},
        "params": {}
      },
      {
        "name": "wam-0047858188",
        "displayName": "Amazon WAM",
        "description": "Amazon WorkSpaces Application Manager is requesting permission to use resources in your account",
        "description2": "Click Allow to give Amazon WorkSpaces Application Manager (Amazon WAM) Read-only access to AWS Marketplace Catalog resources in your account.",
        "params": {},
        "baseReturnURI": "^https://(.*\\.console\\.aws|console\\.aws).amazon.com/wam(/(?!\\.\\./)[^/\\n]*)*$"
      },
      null,
      {
        "name": "beanstalk_demo",
        "displayName": "Elastic Beanstalk",
        "description": "Elastic Beanstalk requires access to your resources",
        "description2": "<p>Elastic Beanstalk would like you to allow acess to some of your resources to an Elastic Beanstalk Environment.</p><p>Elastic Beanstalk Environments often need acess to your resources to:<ul><li> import or export data </li><li> scale your enviroment </li><li> monitor the health of your environment </li></ul></p>",
        "baseReturnURI": "^http://aws.amazon.com/elasticbeanstalk/[^#/.]*#?.*$",
        "params": {
          "serviceprincipal": "ec2.amazonaws.com"
        }
      },
      {
        "name": "beanstalk_demo_update",
        "displayName": "Elastic Beanstalk",
        "description": "Elastic Beanstalk requires additional access to your resources",
        "description2": "<p>Elastic Beanstalk would like you to allow some additional acess to your resources to an Elastic Beanstalk Environment.</p><p>Elastic Beanstalk Environments often need acess to your resources to:<ul><li> import or export data </li><li> scale your enviroment </li><li> monitor the health of your environment </li></ul></p>",
        "baseReturnURI": "^http://aws.amazon.com/elasticbeanstalk/[^#/.]*#?.*$",
        "params": {
          "serviceprincipal": "ec2.amazonaws.com"
        }
      },
      {
        "name": "beanstalk",
        "displayName": "Elastic Beanstalk",
        "description": "Elastic Beanstalk requires access to your resources",
        "description2": "<p>Create an IAM role to enable your AWS Elastic Beanstalk environment access to the AWS resources that it needs. When it assumes the IAM role at runtime, AWS Elastic Beanstalk gets temporary security credentials that it can use to make programmatic requests to AWS. <a href='http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html'>Learn more.</a></p><p>Create an IAM role and specify policies for the role. Create a trust policy to grant AWS Elastic Beanstalk permission to assume the specified IAM role. Also create an access policy to specify the actions and resources to which AWS Elastic Beanstalk will have access.</p>",
        "baseReturnURI": "^https://([a-zA-Z0-9-]+.)?console.aws.amazon.com/elasticbeanstalk[^#/.]*#?.*$",
        "params": {
          "serviceprincipal": "ec2.amazonaws.com"
        }
      },
      {
        "name": "beanstalk_update",
        "displayName": "Elastic Beanstalk",
        "description": "Your Elastic Beanstalk Environment requires additional access to your resources",
        "description2": "<p>Create an IAM role to enable your AWS Elastic Beanstalk environment access to the AWS resources that it needs. When it assumes the IAM role at runtime, AWS Elastic Beanstalk gets temporary security credentials that it can use to make programmatic requests to AWS. <a href='http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html'>Learn more.</a></p><p>Create an IAM role and specify policies for the role. Create a trust policy to grant AWS Elastic Beanstalk permission to assume the specified IAM role. Also create an access policy to specify the actions and resources to which AWS Elastic Beanstalk will have access.</p>",
        "baseReturnURI": "^https://([a-zA-Z0-9-]+.)?console.aws.amazon.com/elasticbeanstalk[^#/.]*#?.*$",
        "params": {
          "serviceprincipal": "ec2.amazonaws.com"
        }
      },
      {
        "name": "cognito",
        "displayName": "Amazon Cognito",
        "description": "Your Cognito identities require access to your resources",
        "description2": "<p>Assigning a role to your application end users helps you restrict access to your AWS resources. Amazon Cognito integrates with Identity and Access Management (IAM) and lets you select specific roles for both your authenticated and unauthenticated identities. <a href=\"http://aws.amazon.com/iam/\" target=\"_blank\">Learn more about IAM.</a></p><p>By default, Amazon Cognito creates a new role with limited permissions - end users only have access to Cognito Sync and Mobile Analytics. You can modify the roles if your application needs access to other AWS resources, such as S3 or DynamoDB.</p>",
        "baseReturnURI": "^https://(dev\\.aws-console\\.pdx|.*\\.?console\\.aws|cognito-console-preview\\.aws|.*\\.desktop)\\.amazon\\.com(:[0-9]+)?/cognito(/(?!\\.\\./)[^#?\\n/]*)+(\\?[^#\\n]*)?(#[^\\n]*)?$",
        "params": {}
      },
      {
        "name": "directory_service",
        "displayName": "AWS Directory Service",
        "description": "AWS Directory Service is requesting to create a role.",
        "description2": "<p>By clicking Allow, you will create a new role based on the template you selected. You can then use this role to grant access to AWS Resources for users and groups in your directory.</p>",
        "baseReturnURI": "^https://((([a-z]+-)+\\d+\\.)?console|wormhole\\.us-east-1).aws.amazon.com/(galaxy|directoryservice)(/(?!\\.\\./)[^/\\n]*)*$",
        "params": {
          "serviceprincipal": "ds.amazonaws.com"
        }
      },
      {
        "name": "lambda",
        "displayName": "AWS Lambda",
        "description": "AWS Lambda requires access to your resources",
        "description2": "AWS Lambda uses an IAM role that grants your custom code permissions to access AWS resources it needs.",
        "baseReturnURI": "^https://(aws-lambda-console-.*|(.*\\.)?console.aws|lambda-pen-testing)\\.amazon\\.com/lambda(/(?!\\.\\./)[^#?\\n/]*)+(\\?[^#\\n]*)?(#[^\\n]*)?$",
        "params": {
          "servicePrincipal": "lambda.amazonaws.com"
        }
      },
      {
        "name": "starling",
        "displayName": "AWS Config",
        "description": "AWS Config is requesting permissions to read your resources' configurations.",
        "description2": "<p>AWS Config is requesting read-only access to record the configuration of your resources, and to deliver these configurations to Amazon S3 and Amazon SNS. AWS Config will create an IAM role that grants the following permissions:<br> 1. Read access to your resource configurations using the Describe or List interface for AWS services.<br> 2. Deliver configuration data to your Amazon SNS Topic and Amazon S3 Bucket.</p> You can also choose to use an existing role and update the role policy to give AWS Config appropriate permissions. <a href=\"http://aws.amazon.com/documentation/config\" target=\"_blank\">Learn more about IAM and required role policies.</a></p>",
        "baseReturnURI": "^https://(([a-zA-Z0-9-./]+\\.)?desktop|starling-console(-[a-zA-Z0-9-]+)?|falcon-console\\..*\\.aws|.*\\.console\\.aws|console\\.aws).amazon.com(:[0-9]+)?/(starling|configservice|config)(/[-0-9a-zA-Z%?=]*)*(#([-0-9a-zA-Z%?=]*))*",
        "params": {}
      },
      {
        "name": "configservice",
        "displayName": "AWS Config",
        "description": "AWS Config is requesting permissions to read your resources' configurations.",
        "description2": "<p>AWS Config is requesting read-only access to record the configuration of your resources, and to deliver these configurations to Amazon S3 and Amazon SNS. AWS Config will create an IAM role that grants the following permissions:<br> 1. Read access to your resource configurations using the Describe or List interface for AWS services.<br> 2. Deliver configuration data to your Amazon SNS Topic and Amazon S3 Bucket.</p> You can also choose to use an existing role and update the role policy to give AWS Config appropriate permissions. <a href=\"http://aws.amazon.com/documentation/config\" target=\"_blank\">Learn more about IAM and required role policies.</a></p>",
        "baseReturnURI": "^https://(([a-zA-Z0-9-./]+\\.)?console|starling-console(\\.[a-zA-Z0-9-.]+)?|([a-zAA-Z0-9-./]+\\.)?awsc-preprod).aws.amazon.com(:[0-9]*)?/(starling|configservice|config)(/[-0-9a-zA-Z%?=]*)*(#([-0-9a-zA-Z%?=]*))*",
        "params": {}
      },
      {
        "name": "configrules",
        "displayName": "AWS Config",
        "description": "AWS Config is requesting permissions to read your resources' configurations.",
        "description2": "<p>AWS Config is requesting read-only access to record the configuration of your resources, and to deliver these configurations to Amazon S3 and Amazon SNS. AWS Config will create an IAM role that grants the following permissions:<br> 1. Read access to your resource configurations using the Describe or List interface for AWS services.<br> 2. Deliver configuration data to your Amazon SNS Topic and Amazon S3 Bucket.</p> You can also choose to use an existing role and update the role policy to give AWS Config appropriate permissions. <a href=\"http://aws.amazon.com/documentation/config\" target=\"_blank\">Learn more about IAM and required role policies.</a></p>",
        "baseReturnURI": "^https://(starling-console-falcon-prod-iad|awsc-preprod\\.aws|.*\\.console\\.aws|console\\.aws).amazon.com/config(rules)?(/(?!\\.\\./)[^/\\n]*)*$",
        "params": {}
      },
      {
        "name": "cloudtrail",
        "displayName": "AWS CloudTrail",
        "description": "AWS CloudTrail will deliver CloudTrail events associated with API activity in your account to your CloudWatch Logs log group",
        "description2": "<p>In order to successfully deliver CloudTrail events to your CloudWatch Logs log group, CloudTrail will assume the role you are creating or specifying. Assuming the role grants CloudTrail permissions to two CloudWatch Logs API calls: <br><br> 1. CreateLogStream: Create a CloudWatch Logs log stream in the CloudWatch Logs log group you specify<br> 2. PutLogEvents: Deliver CloudTrail events to the CloudWatch Logs log stream</p>",
        "baseReturnURI": "^https://(.*\\.console\\.aws|console\\.aws).amazon.com/cloudtrail(/(?!\\.\\./)[^/\\n]*)*$",
        "params": {
          "serviceprincipal": "cloudtrail.amazonaws.com"
        }
      },
      {
        "name": "mobileanalytics",
        "displayName": "Amazon Mobile Analytics",
        "description": "Amazon Mobile Analytics requires access to your S3 Bucket",
        "description2": "Amazon Mobile Analytics uses Identity and Access Management (IAM) to securely write your data, and needs a role to access your Amazon S3 bucket. To view the details of the role and its policy click on \"View Details\" below. To proceed click the \"Allow\" button at the bottom of the screen.",
        "baseReturnURI": "^https://console\\.aws\\.amazon\\.com/mobileanalytics/[^#/\\.]*#?.*$"
      },
      {
        "name": "mobileanalytics-0046568122",
        "displayName": "Amazon Mobile Analytics",
        "description": "Amazon Mobile Analytics is requesting permission to create an IAM role",
        "description2": "Click \"Allow\" to create an IAM role that will be used to send your app events to Amazon Mobile Analytics.",
        "baseReturnURI": "^https://console\\.aws\\.amazon\\.com/mobileanalytics/[^#/\\.]*#?.*$"
      },
      {
        "name": "dartboard-0064257465",
        "displayName": "AWS Dartboard",
        "description": "Dartboard is requesting permission to create Cognito UnAuthenticated Roles in your account",
        "description2": "Click Allow to create IAM roles for use with Amazon Cognito and Dartboard. You can always change these roles in the IAM console or update the Cognito Identity Pool in the Cognito Console.",
        "baseReturnURI": "^https://(.*\\.|dartboard)?console\\.aws\\.amazon\\.com/dartboard/[^#/\\.]*#?.*$"
      },
      {
        "name": "rdsenhanced monitoring-0057151370",
        "displayName": "RDS Enhanced Monitoring",
        "description": "RDS Enhanced Monitoring is requesting permission to use resources in your account",
        "description2": "Click Allow to give RDS Enhanced Monitoring Write-Only access to Cloudwatch Logs resources in your account.",
        "params": {},
        "baseReturnURI": "^https://(rds-console-develop-orion\\.aka|rds-console-develop-beta|rds-console-develop-devo-beta|rds-console-develop-qa-beta|.*\\.console\\.aws|console\\.aws|.*\\.desktop).amazon.com(:[0-9]+)?/rds(/(?!\\.\\./)[^/\\n]*)*$"
      },
      {
        "name": "awsevents-0058815527",
        "displayName": "AWS Events",
        "description": "AWS Events is requesting permission to use resources in your account.",
        "description2": "Click Allow to give AWS Events service access to resources in your account. This role will allow built-in actions to operate on your AWS resources",
        "params": {},
        "baseReturnURI": "^https://(.*\\.console\\.aws|console\\.aws).amazon.com/cloudwatch(/(?!\\.\\./)[^/\\n]*)*$"
      },
      {
        "name": "awsevents-0058798375",
        "displayName": "AWS Events",
        "description": "AWS Events is requesting permission to use resources in your account",
        "description2": "Click Allow to give AWS Events service access to resources in your account. This role will allow AWS Events to invoke targets attached to your rule.",
        "params": {},
        "baseReturnURI": "^https://(.*\\.console\\.aws|console\\.aws).amazon.com/cloudwatch(/(?!\\.\\./)[^/\\n]*)*$"
      },
      {
        "name": "aws-iot",
        "displayName": "AWS IoT",
        "description": "AWS IoT is requesting permission to use resources in your account",
        "description2": "Click allow to give AWS IoT write access to resources in your account.",
        "params": {},
        "baseReturnURI": "^https://(icebreaker-preview\\..*\\.aws|aws-console-service-icebreaker-prod|.*\\.console\\.aws|console\\.aws).amazon.com/iot(/(?!\\.\\./)[^/\\n]*)*$"
      },
      {
        "name": "amazoninspector-0058132011",
        "displayName": "Amazon Inspector",
        "description": "Amazon Inspector is requesting permission to use resources in your account",
        "description2": "Click Allow to give Amazon Inspector read-only access to resources in your account.",
        "params": {},
        "baseReturnURI": "^https://(unicorn-preview-console-us-west-2\\.aws|.*\\.console\\.aws|console\\.aws).amazon.com/inspector(/(?!\\.\\./)[^/\\n]*)*$"
      },
      {
        "name": "ec2spotconsole-0058734074",
        "displayName": "EC2 Spot Console",
        "description": "EC2 Spot Console is requesting permission to use resources in your account",
        "description2": "Click Allow to give EC2 Spot Fleet permissions to request and terminate Spot Instances on your behalf.",
        "params": {},
        "baseReturnURI": "^https://(ec2-spot-console-iad|.*\\.console\\.aws|console\\.aws).amazon.com/ec2spot(/(?!\\.\\./)[^/\\n]*)*$"
      },
      {
        "name": "cloudwatchlogs-0058524269",
        "displayName": "CloudWatch Logs",
        "description": "Amazon CloudWatch Logs is requesting permission to create an AWS Lambda execution role in your account",
        "description2": "AWS Lambda uses an IAM role that grants your custom code permissions to access AWS resources it needs",
        "params": {},
        "baseReturnURI": "^https://(.*\\.console\\.aws|console\\.aws).amazon.com/cloudwatch(/(?!\\.\\./)[^/\\n]*)*$"
      },
      {
        "name": "marketplace-commerce-analytics-0062356512",
        "displayName": "Marketplace Commerce Analytics",
        "description": "AWS Marketplace Commerce Analytics Service is requesting permission to use resources in your account",
        "description2": "Click Allow to give AWS Marketplace Commerce Analytics Service access to resources in your account",
        "params": {},
        "baseReturnURI": "^https://(.*\\.console\\.aws|console\\.aws|.*\\.aws|aws).amazon.com/marketplace(/(?!\\.\\./)[^/\\n]*)*$"
      },
      {
        "name": "importexport-0069496168",
        "displayName": "AWS Snowball",
        "description": "AWS Snowball is requesting permission to use resources in your account",
        "description2": "Click Allow to give AWS Snowball read access to resources in your account. AWS Snowball will use this role to export your data from Amazon S3.",
        "params": {},
        "baseReturnURI": "^https://(([a-z]+-[a-z]+-\\d+\\.)?awsc-preprod\\.aws|frozen-console-prod\\.iad|.*\\.console\\.aws|console\\.aws).amazon.com/importexport(/(?!\\.\\./)[^/\\n]*)*$"
      }
    ],
    "templates": [
      {
        "name": "s3-role-0044523875",
        "description": "Provides replication access to AWS Services and Resources ",
        "docLink": "https://docs-aws.amazon.com/console/s3/replication-iam-role-intro",
        "requesters": [
          "s3-0044523875"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "s3:GetReplicationConfiguration",
                "s3:ListBucket"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:s3:::{{srcbucket}}"
              ]
            },
            {
              "Action": [
                "s3:GetObjectVersion",
                "s3:GetObjectVersionAcl"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:s3:::{{srcbucket}}/*"
              ]
            },
            {
              "Action": [
                "s3:ReplicateObject",
                "s3:ReplicateDelete"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::{{dstbucket}}/*"
            }
          ]
        }
      },
      {
        "name": "wam-role-0047858188",
        "description": "Provides Read-only access to AWS Marketplace Catalog resources.",
        "docLink": "",
        "requesters": [
          "wam-0047858188"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "wam.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "catalog-admin:Describe*",
                "catalog-admin:Get*",
                "catalog-admin:Search*",
                "catalog-admin:List*",
                "catalog-user:SimulateView*",
                "catalog-user:SimulateGet*",
                "catalog-user:SimulateBrowse*"
              ],
              "Resource": [
                "*"
              ]
            }
          ]
        }
      },
      {
        "name": "ecs-ec2-role-0046788065",
        "description": "Provides access to AWS EC2 Container Services and Resources",
        "docLink": "",
        "requesters": [
          "ec2-ecs-0046788064",
          "ec2-ecs-0046788065"
        ],
        "trustPolicy": {
          "Version": "2008-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "elasticloadbalancing:Describe*",
                "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                "ec2:Describe*",
                "ec2:AuthorizeSecurityGroupIngress"
              ],
              "Resource": [
                "*"
              ]
            }
          ]
        }
      },
      {
        "name": "importexport-role-0096981029",
        "description": "Provides Read access to AWS Services and Resources",
        "docLink": "",
        "requesters": [
          "importexport-0096981029"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "importexport.amazonaws.com"
              },
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "AWSIE"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket"
              ],
              "Resource": [
                "arn:aws:s3:::*"
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "lambda:GetFunction",
                "lambda:GetFunctionConfiguration"
              ],
              "Resource": [
                "arn:aws:lambda:{{region}}:{{account-id}}:function:*"
              ]
            }
          ]
        }
      },
      {
        "name": "importexport-role-0096142238",
        "description": "Provides Read/Write access to AWS Services and Resources",
        "docLink": "",
        "requesters": [
          "importexport-0096142238"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "importexport.amazonaws.com"
              },
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "AWSIE"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetBucketLocation",
                "s3:GetBucketPolicy",
                "s3:ListBucketMultipartUploads"
              ],
              "Resource": [
                "arn:aws:s3:::*"
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:PutObject",
                "s3:AbortMultipartUpload",
                "s3:ListMultipartUploadParts",
                "s3:PutObjectAcl"
              ],
              "Resource": [
                "arn:aws:s3:::*"
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "lambda:GetFunction",
                "lambda:GetFunctionConfiguration"
              ],
              "Resource": [
                "arn:aws:lambda:{{region}}:{{account-id}}:function:*"
              ]
            }
          ]
        }
      },
      {
        "name": "importexport-role-0046055266",
        "description": "Provides write access to AWS Services and Resources",
        "docLink": "",
        "requesters": [
          "importexport-0046055266"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "importexport.amazonaws.com"
              },
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "AWSIE"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetBucketPolicy",
                "s3:GetBucketLocation",
                "s3:ListBucketMultipartUploads"
              ],
              "Resource": "arn:aws:s3:::*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:PutObject",
                "s3:AbortMultipartUpload",
                "s3:ListMultipartUploadParts",
                "s3:PutObjectAcl"
              ],
              "Resource": "arn:aws:s3:::*"
            }
          ]
        }
      },
      {
        "name": "importexport-role-0089258736",
        "description": "Provides write access to AWS Services and Resources",
        "docLink": "",
        "requesters": [
          "importexport-0089258736"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "importexport.amazonaws.com"
              },
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "AWSIE"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetBucketPolicy",
                "s3:GetBucketLocation",
                "s3:ListBucketMultipartUploads"
              ],
              "Resource": "arn:aws:s3:::*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:PutObject",
                "s3:AbortMultipartUpload",
                "s3:ListMultipartUploadParts",
                "s3:PutObjectAcl"
              ],
              "Resource": "arn:aws:s3:::*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "glacier:AbortMultipartUpload",
                "glacier:CompleteMultipartUpload",
                "glacier:DescribeVault",
                "glacier:GetVaultAccessPolicy",
                "glacier:GetVaultLock",
                "glacier:InitiateMultipartUpload",
                "glacier:ListMultipartUploads",
                "glacier:ListParts",
                "glacier:UploadArchive",
                "glacier:UploadMultipartPart"
              ],
              "Resource": "arn:aws:glacier:{{region}}:{{account-id}}:vaults/*"
            }
          ]
        }
      },
      {
        "name": "ec2-ecs-role-0046788064",
        "description": "Provides access to EC2 Container Service and Resources",
        "iipName": true,
        "docLink": "",
        "requesters": [
          "ec2-ecs-0046788064",
          "ec2-ecs-0046788065"
        ],
        "trustPolicy": {
          "Version": "2008-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "ecs:CreateCluster",
                "ecs:DeregisterContainerInstance",
                "ecs:DiscoverPollEndpoint",
                "ecs:Poll",
                "ecs:RegisterContainerInstance",
                "ecs:StartTelemetrySession",
                "ecs:Submit*"
              ],
              "Resource": [
                "*"
              ]
            }
          ]
        }
      },
      {
        "name": "codepipeline-role-0044873234",
        "description": "Provides read and write access to AWS services and resources.",
        "docLink": "http://docs.aws.amazon.com/console/codepipeline/create-service-role",
        "requesters": [
          "codepipeline-0044873234"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": [
                  "codepipeline.amazonaws.com"
                ]
              }
            }
          ]
        },
        "permissions": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject",
                "s3:GetObjectVersion",
                "s3:GetBucketVersioning"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Action": [
                "s3:PutObject"
              ],
              "Resource": [
                "arn:aws:s3:::codepipeline*",
                "arn:aws:s3:::elasticbeanstalk*"
              ],
              "Effect": "Allow"
            },
            {
              "Action": [
                "codecommit:CancelUploadArchive",
                "codecommit:GetBranch",
                "codecommit:GetCommit",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:UploadArchive"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Action": [
                "codedeploy:CreateDeployment",
                "codedeploy:GetApplicationRevision",
                "codedeploy:GetDeployment",
                "codedeploy:GetDeploymentConfig",
                "codedeploy:RegisterApplicationRevision"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Action": [
                "elasticbeanstalk:*",
                "ec2:*",
                "elasticloadbalancing:*",
                "autoscaling:*",
                "cloudwatch:*",
                "s3:*",
                "sns:*",
                "cloudformation:*",
                "rds:*",
                "sqs:*",
                "ecs:*",
                "iam:PassRole"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Action": [
                "lambda:InvokeFunction",
                "lambda:ListFunctions"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Action": [
                "opsworks:CreateDeployment",
                "opsworks:DescribeApps",
                "opsworks:DescribeCommands",
                "opsworks:DescribeDeployments",
                "opsworks:DescribeInstances",
                "opsworks:DescribeStacks",
                "opsworks:UpdateApp",
                "opsworks:UpdateStack"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Action": [
                "cloudformation:CreateStack",
                "cloudformation:DeleteStack",
                "cloudformation:DescribeStacks",
                "cloudformation:UpdateStack",
                "cloudformation:CreateChangeSet",
                "cloudformation:DeleteChangeSet",
                "cloudformation:DescribeChangeSet",
                "cloudformation:ExecuteChangeSet",
                "cloudformation:SetStackPolicy",
                "cloudformation:ValidateTemplate",
                "iam:PassRole"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild"
              ],
              "Resource": "*",
              "Effect": "Allow"
            }
          ],
          "Version": "2012-10-17"
        }
      },
      {
        "name": "lambda-role-0045905370",
        "description": "Provides Lambda and DynamoDB access to AWS Services and Resources.",
        "docLink": "http://docs.aws.amazon.com/lambda/latest/dg/lambda-introduction.html",
        "requesters": [
          "lambda",
          "dynamodb"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "lambda:InvokeFunction"
              ],
              "Resource": [
                "*"
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:DescribeStream",
                "dynamodb:ListStreams",
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": "*"
            }
          ]
        }
      },
      {
        "name": "flowlogging-role-0050122067",
        "description": "Provides creation and write access to AWS Cloudwatch groups. ",
        "docLink": "",
        "requesters": [
          "flowlogging-0050122067"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "vpc-flow-logs.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "permissions": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:DescribeLogGroups",
                "logs:DescribeLogStreams",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ]
        }
      },
      {
        "name": "lambda-role-0044690667",
        "description": "Allows Lambda functions to process Kinesis event sources ",
        "docLink": "http://docs.aws.amazon.com/lambda/latest/dg/lambda-introduction.html",
        "requesters": [
          "lambda-0044690667"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "lambda:InvokeFunction"
              ],
              "Resource": [
                "{{lambdaFunctionARN}}"
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:DescribeStream",
                "kinesis:ListStreams",
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": "{{kinesisStreamARN}}"
            }
          ]
        }
      },
      {
        "name": "cognito-role-0043888825",
        "description": "Provides write access to Kinesis Stream. ",
        "docLink": "http://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/cognito-sync.html",
        "requesters": [
          "cognito-0043888825"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": [
                  "cognito-sync.amazonaws.com"
                ]
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "kinesis:PutRecord"
              ],
              "Resource": [
                "arn:aws:kinesis:{{streamregion}}:{{accountid}}:stream/{{streamname}}"
              ]
            }
          ]
        }
      },
      {
        "name": "hyperloop-role-0044058604",
        "description": "Provides Read-only access to AWS Marketplace Catalog resources.",
        "docLink": "https://docs.aws.amazon.com/",
        "forceCreateRole": true,
        "requesters": [
          "hyperloop-0044058604"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": [
                  "714915225874",
                  "859416799420"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "catalog-admin:Describe*",
                "catalog-admin:Get*",
                "catalog-admin:Search*",
                "catalog-admin:List*",
                "catalog-user:SimulateView*",
                "catalog-user:SimulateGet*",
                "catalog-user:SimulateBrowse*"
              ],
              "Resource": [
                "*"
              ]
            }
          ]
        }
      },
      {
        "name": "firehose-role-0046252884",
        "description": "Provides access to AWS Services and Resources",
        "docLink": "",
        "requesters": [
          "firehose-prod"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              },
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "{{accountId}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Resource": [
                "arn:aws:s3:::*"
              ]
            }
          ]
        }
      },
      {
        "name": "firehose-role-s3-corrective",
        "description": "Provides access to AWS Services and Resources",
        "docLink": "",
        "requesters": [
          "firehose-prod"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              },
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "{{accountId}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Resource": [
                "arn:aws:s3:::{{bucket_name1}}",
                "arn:aws:s3:::{{bucket_name1}}/*",
                "arn:aws:s3:::{{bucket_name2}}",
                "arn:aws:s3:::{{bucket_name2}}/*",
                "arn:aws:s3:::{{bucket_name3}}",
                "arn:aws:s3:::{{bucket_name3}}/*",
                "arn:aws:s3:::{{bucket_name4}}",
                "arn:aws:s3:::{{bucket_name4}}/*",
                "arn:aws:s3:::{{bucket_name5}}",
                "arn:aws:s3:::{{bucket_name5}}/*"
              ]
            }
          ]
        }
      },
      {
        "name": "firehose-role-noEncrypt",
        "description": "Provides access to AWS Services and Resources",
        "docLink": "",
        "requesters": [
          "firehose-prod"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              },
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "{{accountId}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Resource": [
                "arn:aws:s3:::{{bucket_name1}}",
                "arn:aws:s3:::{{bucket_name1}}/*",
                "arn:aws:s3:::{{bucket_name2}}",
                "arn:aws:s3:::{{bucket_name2}}/*"
              ]
            },
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": [
                "lambda:InvokeFunction",
                "lambda:GetFunctionConfiguration"
              ],
              "Resource": "arn:aws:lambda:{{region}}:{{accountId}}:function:{{functionName}}:{{functionVersion}}"
            },
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": [
                "logs:PutLogEvents"
              ],
              "Resource": [
                "arn:aws:logs:{{region}}:{{accountId}}:log-group:{{logGroupName}}:log-stream:*"
              ]
            }
          ]
        }
      },
      {
        "name": "firehose-role-encrypt",
        "description": "Provides access to AWS Services and Resources",
        "docLink": "",
        "requesters": [
          "firehose-prod"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              },
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "{{accountId}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Resource": [
                "arn:aws:s3:::{{bucket_name1}}",
                "arn:aws:s3:::{{bucket_name1}}/*",
                "arn:aws:s3:::{{bucket_name2}}",
                "arn:aws:s3:::{{bucket_name2}}/*"
              ]
            },
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": [
                "lambda:InvokeFunction",
                "lambda:GetFunctionConfiguration"
              ],
              "Resource": "arn:aws:lambda:{{region}}:{{accountId}}:function:{{functionName}}:{{functionVersion}}"
            },
            {
              "Effect": "Allow",
              "Action": [
                "kms:Decrypt",
                "kms:GenerateDataKey"
              ],
              "Resource": [
                "{{kms_key_arn}}"
              ],
              "Condition": {
                "StringEquals": {
                  "kms:ViaService": "s3.{{regions}}.{{aws_dns_suffix}}"
                },
                "StringLike": {
                  "kms:EncryptionContext:aws:s3:arn": "arn:aws:s3:::{{bucket_name}}/{{prefix}}*"
                }
              }
            },
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": [
                "logs:PutLogEvents"
              ],
              "Resource": [
                "arn:aws:logs:{{region}}:{{accountId}}:log-group:{{logGroupName}}:log-stream:*"
              ]
            }
          ]
        }
      },
      {
        "name": "firehose-role-es-noEncrypt-0074723790",
        "description": "Provides access to AWS Services and Resources",
        "docLink": "",
        "requesters": [
          "firehose-prod"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              },
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "{{accountId}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Resource": [
                "arn:aws:s3:::{{bucket_name}}",
                "arn:aws:s3:::{{bucket_name}}/*"
              ]
            },
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": [
                "lambda:InvokeFunction",
                "lambda:GetFunctionConfiguration"
              ],
              "Resource": "arn:aws:lambda:{{region}}:{{accountId}}:function:{{functionName}}:{{functionVersion}}"
            },
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": [
                "es:DescribeElasticsearchDomain",
                "es:DescribeElasticsearchDomains",
                "es:DescribeElasticsearchDomainConfig",
                "es:ESHttpPost",
                "es:ESHttpPut"
              ],
              "Resource": [
                "arn:aws:es:{{region}}:{{accountId}}:domain/{{domainName}}",
                "arn:aws:es:{{region}}:{{accountId}}:domain/{{domainName}}/*"
              ]
            },
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": [
                "es:ESHttpGet"
              ],
              "Resource": [
                "arn:aws:es:{{region}}:{{accountId}}:domain/{{domainName}}/_all/_settings",
                "arn:aws:es:{{region}}:{{accountId}}:domain/{{domainName}}/_cluster/stats",
                "arn:aws:es:{{region}}:{{accountId}}:domain/{{domainName}}/{{indexName}}/_mapping/{{typeName}}",
                "arn:aws:es:{{region}}:{{accountId}}:domain/{{domainName}}/_nodes",
                "arn:aws:es:{{region}}:{{accountId}}:domain/{{domainName}}/_nodes/stats",
                "arn:aws:es:{{region}}:{{accountId}}:domain/{{domainName}}/_nodes/*/stats",
                "arn:aws:es:{{region}}:{{accountId}}:domain/{{domainName}}/_stats",
                "arn:aws:es:{{region}}:{{accountId}}:domain/{{domainName}}/{{indexName}}/_stats"
              ]
            },
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": [
                "logs:PutLogEvents"
              ],
              "Resource": [
                "arn:aws:logs:{{region}}:{{accountId}}:log-group:{{logGroupName}}:log-stream:*"
              ]
            }
          ]
        }
      },
      {
        "name": "firehose-role-es-encrypt-0074723790",
        "description": "Provides access to AWS Services and Resources",
        "docLink": "",
        "requesters": [
          "firehose-prod"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "firehose.amazonaws.com"
              },
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "{{accountId}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject"
              ],
              "Resource": [
                "arn:aws:s3:::{{bucket_name}}",
                "arn:aws:s3:::{{bucket_name}}/*"
              ]
            },
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": [
                "lambda:InvokeFunction",
                "lambda:GetFunctionConfiguration"
              ],
              "Resource": "arn:aws:lambda:{{region}}:{{accountId}}:function:{{functionName}}:{{functionVersion}}"
            },
            {
              "Effect": "Allow",
              "Action": [
                "kms:Decrypt",
                "kms:GenerateDataKey"
              ],
              "Resource": [
                "{{kms_key_arn}}"
              ],
              "Condition": {
                "StringEquals": {
                  "kms:ViaService": "s3.{{regions}}.{{aws_dns_suffix}}"
                },
                "StringLike": {
                  "kms:EncryptionContext:aws:s3:arn": "arn:aws:s3:::{{bucket_name}}/{{prefix}}*"
                }
              }
            },
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": [
                "es:DescribeElasticsearchDomain",
                "es:DescribeElasticsearchDomains",
                "es:DescribeElasticsearchDomainConfig",
                "es:ESHttpPost",
                "es:ESHttpPut"
              ],
              "Resource": [
                "arn:aws:es:{{region}}:{{accountId}}:domain/{{domainName}}",
                "arn:aws:es:{{region}}:{{accountId}}:domain/{{domainName}}/*"
              ]
            },
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": [
                "es:ESHttpGet"
              ],
              "Resource": [
                "arn:aws:es:{{region}}:{{accountId}}:domain/{{domainName}}/_all/_settings",
                "arn:aws:es:{{region}}:{{accountId}}:domain/{{domainName}}/_cluster/stats",
                "arn:aws:es:{{region}}:{{accountId}}:domain/{{domainName}}/{{indexName}}/_mapping/{{typeName}}",
                "arn:aws:es:{{region}}:{{accountId}}:domain/{{domainName}}/_nodes",
                "arn:aws:es:{{region}}:{{accountId}}:domain/{{domainName}}/_nodes/stats",
                "arn:aws:es:{{region}}:{{accountId}}:domain/{{domainName}}/_nodes/*/stats",
                "arn:aws:es:{{region}}:{{accountId}}:domain/{{domainName}}/_stats",
                "arn:aws:es:{{region}}:{{accountId}}:domain/{{domainName}}/{{indexName}}/_stats"
              ]
            },
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": [
                "logs:PutLogEvents"
              ],
              "Resource": [
                "arn:aws:logs:{{region}}:{{accountId}}:log-group:{{logGroupName}}:log-stream:*"
              ]
            }
          ]
        }
      },
      {
        "name": "mobileanalytics-redshiftRole",
        "description": "Provides Read/Write access to AWS Services and Resources ",
        "docLink": "http://docs.aws.amazon.com/mobileanalytics/latest/ug/auto-export.html",
        "requesters": [
          "mobileanalytics-redshiftExport",
          "mobileanalytics-0045229998"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Resource": [
                "arn:aws:s3:::{{s3BucketName}}",
                "arn:aws:s3:::{{s3BucketName}}/*"
              ],
              "Action": [
                "s3:ListBucket",
                "s3:GetObject"
              ],
              "Effect": "Allow"
            },
            {
              "Resource": [
                "*"
              ],
              "Action": [
                "cloudwatch:PutMetricData"
              ],
              "Effect": "Allow"
            },
            {
              "Resource": [
                "arn:aws:logs:*:*:*"
              ],
              "Action": [
                "logs:*"
              ],
              "Effect": "Allow"
            },
            {
              "Resource": [
                "arn:aws:s3:::{{s3BucketName}}/jsonpaths/*"
              ],
              "Action": [
                "s3:PutObject*"
              ],
              "Effect": "Allow"
            }
          ]
        },
        "iipName": true
      },
      {
        "name": "eb-role-0042752868",
        "iipName": true,
        "description": "Provides access to send, receive and delete messages from Amazon SQS queues; metric data in Amazon CloudWatch; Amazon S3 buckets created by AWS Elastic Beanstalk; and Amazon DynamoDB tables created by AWS Elastic Beanstalk.",
        "docLink": "http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/AWSHowTo.iam.roles.aeb.html#AWSHowTo.iam.policies.actions.worker",
        "requesters": [
          "eb-0042752868"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "QueueAccess",
              "Action": [
                "sqs:ChangeMessageVisibility",
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage",
                "sqs:SendMessage"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Sid": "MetricsAccess",
              "Action": [
                "cloudwatch:PutMetricData"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Sid": "BucketAccess",
              "Action": [
                "s3:Get*",
                "s3:List*",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:s3:::elasticbeanstalk-*-{{accountid}}/*",
                "arn:aws:s3:::elasticbeanstalk-*-{{accountid}}-*/*"
              ]
            },
            {
              "Sid": "DynamoPeriodicTasks",
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:DeleteItem",
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:UpdateItem"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:dynamodb:*:{{accountid}}:table/*-stack-AWSEBWorkerCronLeaderRegistry*"
              ]
            }
          ]
        }
      },
      {
        "name": "sns-prod-role",
        "description": "Provides write access to AWS Services and Resources",
        "docLink": "https://docs.aws.amazon.com/placeholder",
        "requesters": [
          "sns-prod"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "sns.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:PutMetricFilter",
                "logs:PutRetentionPolicy"
              ],
              "Resource": [
                "*"
              ]
            }
          ]
        }
      },
      {
        "name": "elastic_beanstalk_dynamodb",
        "description": "Provides EC2 instances in your environment access to DynamoDB tables.",
        "docLink": "http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/AWSHowTo.iam.roles.apps.html",
        "iipName": true,
        "requesters": [
          "beanstalk",
          "beanstalk_update",
          "beanstalk_internal",
          "beanstalk_internal_update"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "sts:AssumeRole"
              ],
              "Principal": {
                "Service": [
                  "{{serviceprincipal}}"
                ]
              },
              "Condition": {
                "StringEquals": {
                  "sts:externalid": "{{accountid}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:GetItem",
                "dynamodb:BatchGetItem"
              ],
              "Resource": [
                "arn:aws:dynamodb:{{region}}:{{accountid}}:table/*"
              ]
            }
          ]
        }
      },
      {
        "name": "elastic_beanstalk_default",
        "description": "Provides EC2 instances in your environment access to Simple Queue Service (SQS), Amazon Cloudwatch, and Amazon S3.",
        "docLink": "http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/AWSHowTo.iam.roles.aeb.html",
        "iipName": true,
        "requesters": [
          "beanstalk",
          "beanstalk_update",
          "beanstalk_internal",
          "beanstalk_internal_update"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "sts:AssumeRole"
              ],
              "Principal": {
                "Service": [
                  "{{serviceprincipal}}"
                ]
              },
              "Condition": {
                "StringEquals": {
                  "sts:externalid": "{{accountid}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "QueueAccess",
              "Action": [
                "sqs:ChangeMessageVisibility",
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Sid": "MetricsAccess",
              "Action": [
                "cloudwatch:PutMetricData"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Sid": "BucketAccess",
              "Action": [
                "s3:Get*",
                "s3:List*",
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:aws:s3:::{{bucketid}}/*"
              ]
            }
          ]
        }
      },
      {
        "name": "beanstalk_create",
        "description": "The Elastic Beanstalk environment <b>{{env_name}}</b> would like access to your DynamoDB tables",
        "docLink": "http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/AWSHowTo.iam.roles.apps.html",
        "requesters": [
          "beanstalk_demo"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "sts:AssumeRole"
              ],
              "Principal": {
                "Service": [
                  "{{serviceprincipal}}"
                ]
              },
              "Condition": {
                "StringEquals": {
                  "sts:externalid": "{{accountid}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:GetItem",
                "dynamodb:BatchGetItem"
              ],
              "Resource": [
                "arn:aws:dynamodb:{{region}}:{{accountid}}:table/*"
              ]
            }
          ]
        }
      },
      {
        "name": "cognito_auth",
        "description": "Your authenticated identities would like access to Cognito.",
        "docLink": "http://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/cognito-auth.html#d0e908",
        "requesters": [
          "cognito"
        ],
        "forceCreateRole": true,
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              },
              "Condition": {
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": "{{identity_pool}}"
                },
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "authenticated"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "mobileanalytics:PutEvents",
                "cognito-sync:*",
                "cognito-identity:*"
              ],
              "Resource": [
                "*"
              ]
            }
          ]
        }
      },
      {
        "name": "cognito_silentsync",
        "description": "Amazon Cognito is requesting access to create and delete endpoints and publish to those endpoints using Amazon SNS.",
        "docLink": "http://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/cognito-auth.html#d0e908",
        "forceCreateRole": true,
        "requesters": [
          "cognito"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": "cognito-sync.amazonaws.com"
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "sns:CreatePlatformEndpoint",
                "sns:DeleteEndpoint",
                "sns:Publish"
              ],
              "Resource": [
                "*"
              ]
            }
          ]
        }
      },
      {
        "name": "cognito_unauth",
        "description": "Your unauthenticated identities would like access to Cognito.",
        "docLink": "http://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/cognito-auth.html#d0e908",
        "requesters": [
          "cognito",
          "mobileanalytics-0046568122",
          "dartboard-0064257465"
        ],
        "forceCreateRole": true,
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              },
              "Condition": {
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": "{{identity_pool}}"
                },
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": "unauthenticated"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "mobileanalytics:PutEvents",
                "cognito-sync:*"
              ],
              "Resource": [
                "*"
              ]
            }
          ]
        }
      },
      {
        "name": "cognito_shared",
        "description": "Your authenticated and unauthenticated identities would like access to Cognito.",
        "docLink": "http://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/cognito-auth.html#d0e908",
        "requesters": [
          "cognito"
        ],
        "forceCreateRole": true,
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Principal": {
                "Federated": "cognito-identity.amazonaws.com"
              },
              "Condition": {
                "StringEquals": {
                  "cognito-identity.amazonaws.com:aud": "{{identity_pool}}"
                },
                "ForAnyValue:StringLike": {
                  "cognito-identity.amazonaws.com:amr": [
                    "authenticated",
                    "unauthenticated"
                  ]
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "mobileanalytics:PutEvents",
                "cognito-sync:*"
              ],
              "Resource": [
                "*"
              ]
            }
          ]
        }
      },
      {
        "name": "ds_PowerUser",
        "description": "Provides full access to AWS services and resources, but does not allow management of IAM Users and groups.",
        "docLink": "http://docs.aws.amazon.com/console/directoryservice/iam-federation",
        "requesters": [
          "directory_service"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "sts:AssumeRole"
              ],
              "Principal": {
                "Service": [
                  "{{serviceprincipal}}"
                ]
              },
              "Condition": {
                "StringEquals": {
                  "sts:externalid": "{{accountid}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "NotAction": "iam:*",
              "Resource": "*"
            }
          ]
        }
      },
      {
        "name": "ds_ReadOnly",
        "description": "Provides read-only access to AWS services and resources.",
        "docLink": "http://docs.aws.amazon.com/console/directoryservice/iam-federation",
        "requesters": [
          "directory_service"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "sts:AssumeRole"
              ],
              "Principal": {
                "Service": [
                  "{{serviceprincipal}}"
                ]
              },
              "Condition": {
                "StringEquals": {
                  "sts:externalid": "{{accountid}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "appstream:Get*",
                "autoscaling:Describe*",
                "cloudformation:DescribeStacks",
                "cloudformation:DescribeStackEvents",
                "cloudformation:DescribeStackResource",
                "cloudformation:DescribeStackResources",
                "cloudformation:GetTemplate",
                "cloudformation:List*",
                "cloudfront:Get*",
                "cloudfront:List*",
                "cloudtrail:DescribeTrails",
                "cloudtrail:GetTrailStatus",
                "cloudwatch:Describe*",
                "cloudwatch:Get*",
                "cloudwatch:List*",
                "directconnect:Describe*",
                "dynamodb:GetItem",
                "dynamodb:BatchGetItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:DescribeTable",
                "dynamodb:ListTables",
                "ec2:Describe*",
                "elasticache:Describe*",
                "elasticbeanstalk:Check*",
                "elasticbeanstalk:Describe*",
                "elasticbeanstalk:List*",
                "elasticbeanstalk:RequestEnvironmentInfo",
                "elasticbeanstalk:RetrieveEnvironmentInfo",
                "elasticloadbalancing:Describe*",
                "elastictranscoder:Read*",
                "elastictranscoder:List*",
                "iam:List*",
                "iam:Get*",
                "kinesis:Describe*",
                "kinesis:Get*",
                "kinesis:List*",
                "opsworks:Describe*",
                "opsworks:Get*",
                "route53:Get*",
                "route53:List*",
                "redshift:Describe*",
                "redshift:ViewQueriesInConsole",
                "rds:Describe*",
                "rds:ListTagsForResource",
                "s3:Get*",
                "s3:List*",
                "sdb:GetAttributes",
                "sdb:List*",
                "sdb:Select*",
                "ses:Get*",
                "ses:List*",
                "sns:Get*",
                "sns:List*",
                "sqs:GetQueueAttributes",
                "sqs:ListQueues",
                "sqs:ReceiveMessage",
                "storagegateway:List*",
                "storagegateway:Describe*",
                "trustedadvisor:Describe*"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ]
        }
      },
      {
        "name": "ds_EC2FullAccess",
        "description": "Provides full access to Amazon EC2 via the AWS Management Console.",
        "docLink": "http://docs.aws.amazon.com/console/directoryservice/iam-federation",
        "requesters": [
          "directory_service"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "sts:AssumeRole"
              ],
              "Principal": {
                "Service": [
                  "{{serviceprincipal}}"
                ]
              },
              "Condition": {
                "StringEquals": {
                  "sts:externalid": "{{accountid}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "ec2:*",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": "elasticloadbalancing:*",
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": "cloudwatch:*",
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": "autoscaling:*",
              "Resource": "*"
            }
          ]
        }
      },
      {
        "name": "ds_EC2ReadOnly",
        "description": "Provides read only access to Amazon EC2 via the AWS Management Console.",
        "docLink": "http://docs.aws.amazon.com/console/directoryservice/iam-federation",
        "requesters": [
          "directory_service"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "sts:AssumeRole"
              ],
              "Principal": {
                "Service": [
                  "{{serviceprincipal}}"
                ]
              },
              "Condition": {
                "StringEquals": {
                  "sts:externalid": "{{accountid}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "ec2:Describe*",
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": "elasticloadbalancing:Describe*",
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "cloudwatch:ListMetrics",
                "cloudwatch:GetMetricStatistics",
                "cloudwatch:Describe*"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": "autoscaling:Describe*",
              "Resource": "*"
            }
          ]
        }
      },
      {
        "name": "ds_VPCFullAccess",
        "description": "Provides full access to Amazon VPC via the AWS Management Console.",
        "docLink": "http://docs.aws.amazon.com/console/directoryservice/iam-federation",
        "requesters": [
          "directory_service"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "sts:AssumeRole"
              ],
              "Principal": {
                "Service": [
                  "{{serviceprincipal}}"
                ]
              },
              "Condition": {
                "StringEquals": {
                  "sts:externalid": "{{accountid}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "ec2:AcceptVpcPeeringConnection",
                "ec2:AllocateAddress",
                "ec2:AssociateAddress",
                "ec2:AssociateDhcpOptions",
                "ec2:AssociateRouteTable",
                "ec2:AttachInternetGateway",
                "ec2:AttachVpnGateway",
                "ec2:AuthorizeSecurityGroupEgress",
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:CreateCustomerGateway",
                "ec2:CreateDhcpOptions",
                "ec2:CreateInternetGateway",
                "ec2:CreateNetworkAcl",
                "ec2:CreateNetworkAclEntry",
                "ec2:CreateRoute",
                "ec2:CreateRouteTable",
                "ec2:CreateSecurityGroup",
                "ec2:CreateSubnet",
                "ec2:CreateTags",
                "ec2:CreateVpc",
                "ec2:CreateVpcPeeringConnection",
                "ec2:CreateVpnConnection",
                "ec2:CreateVpnConnectionRoute",
                "ec2:CreateVpnGateway",
                "ec2:DeleteCustomerGateway",
                "ec2:DeleteDhcpOptions",
                "ec2:DeleteInternetGateway",
                "ec2:DeleteNetworkAcl",
                "ec2:DeleteNetworkAclEntry",
                "ec2:DeleteRoute",
                "ec2:DeleteRouteTable",
                "ec2:DeleteSecurityGroup",
                "ec2:DeleteSubnet",
                "ec2:DeleteTags",
                "ec2:DeleteVpc",
                "ec2:DeleteVpcPeeringConnection",
                "ec2:DeleteVpnConnection",
                "ec2:DeleteVpnGateway",
                "ec2:DescribeAddresses",
                "ec2:DescribeAvailabilityZones",
                "ec2:DescribeCustomerGateways",
                "ec2:DescribeDhcpOptions",
                "ec2:DescribeInstances",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeKeyPairs",
                "ec2:DescribeNetworkAcls",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeRouteTables",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeTags",
                "ec2:DescribeVpcAttribute",
                "ec2:DescribeVpcPeeringConnections",
                "ec2:DescribeVpcs",
                "ec2:DescribeVpnConnections",
                "ec2:DescribeVpnGateways",
                "ec2:DetachInternetGateway",
                "ec2:DetachVpnGateway",
                "ec2:DisassociateAddress",
                "ec2:DisassociateRouteTable",
                "ec2:ModifyVpcAttribute",
                "ec2:RejectVpcPeeringConnection",
                "ec2:ReleaseAddress",
                "ec2:ReplaceNetworkAclAssociation",
                "ec2:ReplaceNetworkAclEntry",
                "ec2:ReplaceRouteTableAssociation",
                "ec2:RevokeSecurityGroupEgress",
                "ec2:RevokeSecurityGroupIngress"
              ],
              "Resource": "*"
            }
          ]
        }
      },
      {
        "name": "ds_VPCReadOnly",
        "description": "Provides read only access to Amazon VPC via the AWS Management Console.",
        "docLink": "http://docs.aws.amazon.com/console/directoryservice/iam-federation",
        "requesters": [
          "directory_service"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "sts:AssumeRole"
              ],
              "Principal": {
                "Service": [
                  "{{serviceprincipal}}"
                ]
              },
              "Condition": {
                "StringEquals": {
                  "sts:externalid": "{{accountid}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "ec2:DescribeAddresses",
                "ec2:DescribeCustomerGateways",
                "ec2:DescribeDhcpOptions",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeNetworkAcls",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeRouteTables",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeVpcAttribute",
                "ec2:DescribeVpcPeeringConnection",
                "ec2:DescribeVpcs",
                "ec2:DescribeVpnConnections",
                "ec2:DescribeVpnGateways"
              ],
              "Resource": "*"
            }
          ]
        }
      },
      {
        "name": "ds_RDSFullAccess",
        "description": "Provides full access to Amazon RDS via the AWS Management Console.",
        "docLink": "http://docs.aws.amazon.com/console/directoryservice/iam-federation",
        "requesters": [
          "directory_service"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "sts:AssumeRole"
              ],
              "Principal": {
                "Service": [
                  "{{serviceprincipal}}"
                ]
              },
              "Condition": {
                "StringEquals": {
                  "sts:externalid": "{{accountid}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "rds:*",
                "cloudwatch:DescribeAlarms",
                "cloudwatch:GetMetricStatistics",
                "ec2:DescribeAccountAttributes",
                "ec2:DescribeAvailabilityZones",
                "ec2:DescribeVpcs",
                "sns:ListSubscriptions",
                "sns:ListTopics"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ]
        }
      },
      {
        "name": "ds_RDSReadOnly",
        "description": "Provides read only access to Amazon RDS via the AWS Management Console.",
        "docLink": "http://docs.aws.amazon.com/console/directoryservice/iam-federation",
        "requesters": [
          "directory_service"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "sts:AssumeRole"
              ],
              "Principal": {
                "Service": [
                  "{{serviceprincipal}}"
                ]
              },
              "Condition": {
                "StringEquals": {
                  "sts:externalid": "{{accountid}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "rds:Describe*",
                "rds:ListTagsForResource",
                "ec2:DescribeAccountAttributes",
                "ec2:DescribeAvailabilityZones",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeVpcs"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "cloudwatch:GetMetricStatistics"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ]
        }
      },
      {
        "name": "ds_DynamoDBFullAccess",
        "description": "Provides full access to Amazon DynamoDB via the AWS Management Console.",
        "docLink": "http://docs.aws.amazon.com/console/directoryservice/iam-federation",
        "requesters": [
          "directory_service"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "sts:AssumeRole"
              ],
              "Principal": {
                "Service": [
                  "{{serviceprincipal}}"
                ]
              },
              "Condition": {
                "StringEquals": {
                  "sts:externalid": "{{accountid}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "dynamodb:*",
                "cloudwatch:DeleteAlarms",
                "cloudwatch:DescribeAlarmHistory",
                "cloudwatch:DescribeAlarms",
                "cloudwatch:DescribeAlarmsForMetric",
                "cloudwatch:GetMetricStatistics",
                "cloudwatch:ListMetrics",
                "cloudwatch:PutMetricAlarm",
                "sns:CreateTopic",
                "sns:ListSubscriptionsByTopic",
                "sns:ListTopics",
                "sns:Subscribe",
                "sns:Unsubscribe"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ]
        }
      },
      {
        "name": "ds_DynamoDBReadOnly",
        "description": "Provides read only access to Amazon DynamoDB via the AWS Management Console, including CloudWatch and SNS access.",
        "docLink": "http://docs.aws.amazon.com/console/directoryservice/iam-federation",
        "requesters": [
          "directory_service"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "sts:AssumeRole"
              ],
              "Principal": {
                "Service": [
                  "{{serviceprincipal}}"
                ]
              },
              "Condition": {
                "StringEquals": {
                  "sts:externalid": "{{accountid}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "cloudwatch:DescribeAlarmHistory",
                "cloudwatch:DescribeAlarms",
                "cloudwatch:DescribeAlarmsForMetric",
                "cloudwatch:GetMetricStatistics",
                "cloudwatch:ListMetrics",
                "dynamodb:BatchGetItem",
                "dynamodb:DescribeTable",
                "dynamodb:GetItem",
                "dynamodb:ListTables",
                "dynamodb:Query",
                "dynamodb:Scan",
                "sns:ListSubscriptionsByTopic",
                "sns:ListTopics"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ]
        }
      },
      {
        "name": "ds_S3FullAccess",
        "description": "Provides full access to all buckets via the AWS Management Console.",
        "docLink": "http://docs.aws.amazon.com/console/directoryservice/iam-federation",
        "requesters": [
          "directory_service"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "sts:AssumeRole"
              ],
              "Principal": {
                "Service": [
                  "{{serviceprincipal}}"
                ]
              },
              "Condition": {
                "StringEquals": {
                  "sts:externalid": "{{accountid}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "s3:*",
              "Resource": "*"
            }
          ]
        }
      },
      {
        "name": "ds_S3ReadOnly",
        "description": "Provides read only access to all buckets via the AWS Management Console.",
        "docLink": "http://docs.aws.amazon.com/console/directoryservice/iam-federation",
        "requesters": [
          "directory_service"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "sts:AssumeRole"
              ],
              "Principal": {
                "Service": [
                  "{{serviceprincipal}}"
                ]
              },
              "Condition": {
                "StringEquals": {
                  "sts:externalid": "{{accountid}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:Get*",
                "s3:List*"
              ],
              "Resource": "*"
            }
          ]
        }
      },
      {
        "name": "ds_CloudTrailFullAccess",
        "description": "Provides full access to AWS CloudTrail.",
        "docLink": "http://docs.aws.amazon.com/console/directoryservice/iam-federation",
        "requesters": [
          "directory_service"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "sts:AssumeRole"
              ],
              "Principal": {
                "Service": [
                  "{{serviceprincipal}}"
                ]
              },
              "Condition": {
                "StringEquals": {
                  "sts:externalid": "{{accountid}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "sns:AddPermission",
                "sns:CreateTopic",
                "sns:DeleteTopic",
                "sns:GetTopicAttributes",
                "sns:ListPlatformApplications",
                "sns:ListTopics",
                "sns:SetTopicAttributes"
              ],
              "Resource": "arn:aws:sns:*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:CreateBucket",
                "s3:DeleteBucket",
                "s3:GetBucketAcl",
                "s3:GetBucketLocation",
                "s3:GetBucketNotification",
                "s3:GetBucketPolicy",
                "s3:GetBucketRequestPayment",
                "s3:GetBucketVersioning",
                "s3:GetObject",
                "s3:ListAllMyBuckets",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:ListBucketVersions",
                "s3:PutBucketPolicy"
              ],
              "Resource": "arn:aws:s3:::*"
            },
            {
              "Effect": "Allow",
              "Action": "cloudtrail:*",
              "Resource": "*"
            }
          ]
        }
      },
      {
        "name": "ds_CloudTrailReadOnly",
        "description": "Provides read only access to AWS CloudTrail.",
        "docLink": "http://docs.aws.amazon.com/console/directoryservice/iam-federation",
        "requesters": [
          "directory_service"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "sts:AssumeRole"
              ],
              "Principal": {
                "Service": [
                  "{{serviceprincipal}}"
                ]
              },
              "Condition": {
                "StringEquals": {
                  "sts:externalid": "{{accountid}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetObject"
              ],
              "Resource": "arn:aws:s3:::*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "cloudtrail:DescribeTrails",
                "cloudtrail:GetTrailStatus",
                "s3:ListAllMyBuckets"
              ],
              "Resource": "*"
            }
          ]
        }
      },
      {
        "name": "ds_CloudWatchFullAccess",
        "description": "Provides full access to CloudWatch.",
        "docLink": "http://docs.aws.amazon.com/console/directoryservice/iam-federation",
        "requesters": [
          "directory_service"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "sts:AssumeRole"
              ],
              "Principal": {
                "Service": [
                  "{{serviceprincipal}}"
                ]
              },
              "Condition": {
                "StringEquals": {
                  "sts:externalid": "{{accountid}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "logs:*"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ]
        }
      },
      {
        "name": "ds_CloudWatchReadOnly",
        "description": "Provides read only access to CloudWatch.",
        "docLink": "http://docs.aws.amazon.com/console/directoryservice/iam-federation",
        "requesters": [
          "directory_service"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "sts:AssumeRole"
              ],
              "Principal": {
                "Service": [
                  "{{serviceprincipal}}"
                ]
              },
              "Condition": {
                "StringEquals": {
                  "sts:externalid": "{{accountid}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "autoscaling:Describe*",
                "cloudwatch:Describe*",
                "cloudwatch:Get*",
                "cloudwatch:List*",
                "logs:Get*",
                "logs:Describe*",
                "logs:TestMetricFilter",
                "sns:Get*",
                "sns:List*"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ]
        }
      },
      {
        "name": "ds_CloudWatchLogsFullAccess",
        "description": "Provides full access to CloudWatch Logs.",
        "docLink": "http://docs.aws.amazon.com/console/directoryservice/iam-federation",
        "requesters": [
          "directory_service"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "sts:AssumeRole"
              ],
              "Principal": {
                "Service": [
                  "{{serviceprincipal}}"
                ]
              },
              "Condition": {
                "StringEquals": {
                  "sts:externalid": "{{accountid}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "logs:*"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ]
        }
      },
      {
        "name": "ds_CloudWatchLogsReadOnly",
        "description": "Provides read only access to CloudWatch Logs.",
        "docLink": "http://docs.aws.amazon.com/console/directoryservice/iam-federation",
        "requesters": [
          "directory_service"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "sts:AssumeRole"
              ],
              "Principal": {
                "Service": [
                  "{{serviceprincipal}}"
                ]
              },
              "Condition": {
                "StringEquals": {
                  "sts:externalid": "{{accountid}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "logs:Describe*",
                "logs:Get*",
                "logs:TestMetricFilter"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ]
        }
      },
      {
        "name": "lambda-mobilebackend",
        "description": "Lambda execution role permissions",
        "docLink": "https://docs.aws.amazon.com/console/lambda/executionrole",
        "requesters": [
          "lambda"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "{{servicePrincipal}}"
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "Stmt1428341300017",
              "Action": [
                "dynamodb:DeleteItem",
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:UpdateItem"
              ],
              "Effect": "Allow",
              "Resource": "{{resource}}"
            },
            {
              "Sid": "",
              "Resource": "*",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "{{effect}}"
            }
          ]
        }
      },
      {
        "name": "lambda_logs",
        "description": "Lambda execution role permissions",
        "docLink": "https://docs.aws.amazon.com/console/lambda/executionrole",
        "requesters": [
          "lambda"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "{{servicePrincipal}}"
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "{{allowDenyLogs}}",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": "arn:aws:logs:*:*:*"
            }
          ]
        }
      },
      {
        "name": "lambda_logs_with_ec2",
        "description": "Lambda execution role permissions",
        "docLink": "https://docs.aws.amazon.com/console/lambda/executionrole",
        "requesters": [
          "lambda"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "{{servicePrincipal}}"
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": "arn:aws:logs:*:*:*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "ec2:CreateNetworkInterface",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DetachNetworkInterface",
                "ec2:DeleteNetworkInterface"
              ],
              "Resource": "*"
            }
          ]
        }
      },
      {
        "name": "lambda_auth",
        "description": "Lambda execution role permissions",
        "docLink": "https://docs.aws.amazon.com/console/lambda/executionrole",
        "requesters": [
          "lambda"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "{{servicePrincipal}}"
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "{{allowDenyLogs}}",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": "arn:aws:logs:*:*:*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetObject",
                "s3:PutObject"
              ],
              "Resource": [
                "arn:aws:s3:::{{bucketName}}"
              ]
            }
          ]
        }
      },
      {
        "name": "lambda_s3auth",
        "description": "Add Lambda access to S3 bucket.",
        "docLink": "https://docs.aws.amazon.com/console/lambda/executionrole",
        "requesters": [
          "lambda"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": "{{servicePrincipal}}"
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetObject",
                "s3:PutObject"
              ],
              "Resource": [
                "arn:aws:s3:::{{bucketName}}"
              ]
            }
          ]
        }
      },
      {
        "name": "lambda_s3invoke",
        "description": "Lambda invocation role permissions",
        "docLink": "https://docs.aws.amazon.com/console/lambda/invocationrole",
        "requesters": [
          "lambda"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "s3.amazonaws.com"
              },
              "Action": "sts:AssumeRole",
              "Condition": {
                "ArnLike": {
                  "sts:ExternalId": "arn:aws:s3:::{{bucketName}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Resource": [
                "{{lambdaFunctionARN}}"
              ],
              "Action": [
                "lambda:InvokeFunction"
              ]
            }
          ]
        }
      },
      {
        "name": "lambda_kinesisinvoke",
        "description": "Allow Kinesis to Invoke Lambda function.",
        "docLink": "https://docs.aws.amazon.com/console/lambda/invocationrole",
        "requesters": [
          "lambda"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "{{servicePrincipal}}"
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "lambda:InvokeFunction"
              ],
              "Resource": [
                "{{lambdaFunctionARN}}"
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "kinesis:Get*",
                "kinesis:GetShardIterator",
                "kinesis:DescribeStream",
                "kinesis:ListStreams"
              ],
              "Resource": [
                "{{kinesisStreamARN}}"
              ]
            }
          ]
        }
      },
      {
        "name": "starling_describeAndAllDelivery",
        "description": "AWS Config is requesting permissions to read your resources' configurations.",
        "docLink": "http://aws.amazon.com/documentation/config",
        "requesters": [
          "starling",
          "falcon"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "config.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "appstream:Get*",
                "autoscaling:Describe*",
                "cloudformation:DescribeStacks",
                "cloudformation:DescribeStackEvents",
                "cloudformation:DescribeStackResource",
                "cloudformation:DescribeStackResources",
                "cloudformation:GetTemplate",
                "cloudformation:List*",
                "cloudfront:Get*",
                "cloudfront:List*",
                "cloudtrail:DescribeTrails",
                "cloudtrail:GetTrailStatus",
                "cloudwatch:Describe*",
                "cloudwatch:Get*",
                "cloudwatch:List*",
                "config:Put*",
                "directconnect:Describe*",
                "dynamodb:GetItem",
                "dynamodb:BatchGetItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:DescribeTable",
                "dynamodb:ListTables",
                "ec2:Describe*",
                "elasticache:Describe*",
                "elasticbeanstalk:Check*",
                "elasticbeanstalk:Describe*",
                "elasticbeanstalk:List*",
                "elasticbeanstalk:RequestEnvironmentInfo",
                "elasticbeanstalk:RetrieveEnvironmentInfo",
                "elasticloadbalancing:Describe*",
                "elastictranscoder:Read*",
                "elastictranscoder:List*",
                "iam:List*",
                "iam:Get*",
                "kinesis:Describe*",
                "kinesis:Get*",
                "kinesis:List*",
                "opsworks:Describe*",
                "opsworks:Get*",
                "route53:Get*",
                "route53:List*",
                "redshift:Describe*",
                "redshift:ViewQueriesInConsole",
                "rds:Describe*",
                "rds:ListTagsForResource",
                "s3:Get*",
                "s3:List*",
                "sdb:GetAttributes",
                "sdb:List*",
                "sdb:Select*",
                "ses:Get*",
                "ses:List*",
                "sns:Get*",
                "sns:List*",
                "sqs:GetQueueAttributes",
                "sqs:ListQueues",
                "sqs:ReceiveMessage",
                "storagegateway:List*",
                "storagegateway:Describe*",
                "trustedadvisor:Describe*"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:PutObject*"
              ],
              "Resource": [
                "arn:aws:s3:::{{bucketNameWithPrefix}}/AWSLogs/{{accountid}}/*"
              ],
              "Condition": {
                "StringLike": {
                  "s3:x-amz-acl": "bucket-owner-full-control"
                }
              }
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetBucketAcl"
              ],
              "Resource": "arn:aws:s3:::{{bucketName}}"
            },
            {
              "Effect": "Allow",
              "Action": "sns:Publish",
              "Resource": "arn:aws:sns:{{region}}:{{accountid}}:{{topicName}}"
            }
          ]
        }
      },
      {
        "name": "isengard-role-0047679719",
        "description": "Provides Full IAM access to AWS Services and Resources ",
        "docLink": "",
        "requesters": [
          "isengard-0047679719"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "AWS": "727820809195"
              },
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "{{ExternalId}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "*",
              "Resource": "*"
            }
          ]
        }
      },
      null,
      {
        "name": "configservice_describeAndAllDelivery",
        "description": "AWS Config is requesting permissions to read your resources' configurations.",
        "docLink": "http://aws.amazon.com/documentation/config",
        "requesters": [
          "configservice",
          "configrules"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "config.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "appstream:Get*",
                "autoscaling:Describe*",
                "cloudformation:DescribeStacks",
                "cloudformation:DescribeStackEvents",
                "cloudformation:DescribeStackResource",
                "cloudformation:DescribeStackResources",
                "cloudformation:GetTemplate",
                "cloudformation:List*",
                "cloudfront:Get*",
                "cloudfront:List*",
                "cloudtrail:DescribeTrails",
                "cloudtrail:GetTrailStatus",
                "cloudwatch:Describe*",
                "cloudwatch:Get*",
                "cloudwatch:List*",
                "config:Put*",
                "directconnect:Describe*",
                "dynamodb:GetItem",
                "dynamodb:BatchGetItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:DescribeTable",
                "dynamodb:ListTables",
                "ec2:Describe*",
                "elasticache:Describe*",
                "elasticbeanstalk:Check*",
                "elasticbeanstalk:Describe*",
                "elasticbeanstalk:List*",
                "elasticbeanstalk:RequestEnvironmentInfo",
                "elasticbeanstalk:RetrieveEnvironmentInfo",
                "elasticloadbalancing:Describe*",
                "elastictranscoder:Read*",
                "elastictranscoder:List*",
                "iam:List*",
                "iam:Get*",
                "kinesis:Describe*",
                "kinesis:Get*",
                "kinesis:List*",
                "opsworks:Describe*",
                "opsworks:Get*",
                "route53:Get*",
                "route53:List*",
                "redshift:Describe*",
                "redshift:ViewQueriesInConsole",
                "rds:Describe*",
                "rds:ListTagsForResource",
                "s3:Get*",
                "s3:List*",
                "sdb:GetAttributes",
                "sdb:List*",
                "sdb:Select*",
                "ses:Get*",
                "ses:List*",
                "sns:Get*",
                "sns:List*",
                "sqs:GetQueueAttributes",
                "sqs:ListQueues",
                "sqs:ReceiveMessage",
                "storagegateway:List*",
                "storagegateway:Describe*",
                "trustedadvisor:Describe*"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:PutObject*"
              ],
              "Resource": [
                "arn:aws:s3:::{{bucketNameWithPrefix}}/AWSLogs/{{accountid}}/*"
              ],
              "Condition": {
                "StringLike": {
                  "s3:x-amz-acl": "bucket-owner-full-control"
                }
              }
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetBucketAcl"
              ],
              "Resource": "arn:aws:s3:::{{bucketName}}"
            },
            {
              "Effect": "Allow",
              "Action": "sns:Publish",
              "Resource": "arn:aws:sns:{{region}}:{{accountid}}:{{topicName}}"
            }
          ]
        }
      },
      {
        "name": "configservice_describeAndSNSDelivery",
        "description": "AWS Config is requesting permissions to read your resources' configurations.",
        "docLink": "http://aws.amazon.com/documentation/config",
        "requesters": [
          "configservice",
          "configrules"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "config.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "appstream:Get*",
                "autoscaling:Describe*",
                "cloudformation:DescribeStacks",
                "cloudformation:DescribeStackEvents",
                "cloudformation:DescribeStackResource",
                "cloudformation:DescribeStackResources",
                "cloudformation:GetTemplate",
                "cloudformation:List*",
                "cloudfront:Get*",
                "cloudfront:List*",
                "cloudtrail:DescribeTrails",
                "cloudtrail:GetTrailStatus",
                "cloudwatch:Describe*",
                "cloudwatch:Get*",
                "cloudwatch:List*",
                "config:Put*",
                "directconnect:Describe*",
                "dynamodb:GetItem",
                "dynamodb:BatchGetItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:DescribeTable",
                "dynamodb:ListTables",
                "ec2:Describe*",
                "elasticache:Describe*",
                "elasticbeanstalk:Check*",
                "elasticbeanstalk:Describe*",
                "elasticbeanstalk:List*",
                "elasticbeanstalk:RequestEnvironmentInfo",
                "elasticbeanstalk:RetrieveEnvironmentInfo",
                "elasticloadbalancing:Describe*",
                "elastictranscoder:Read*",
                "elastictranscoder:List*",
                "iam:List*",
                "iam:Get*",
                "kinesis:Describe*",
                "kinesis:Get*",
                "kinesis:List*",
                "opsworks:Describe*",
                "opsworks:Get*",
                "route53:Get*",
                "route53:List*",
                "redshift:Describe*",
                "redshift:ViewQueriesInConsole",
                "rds:Describe*",
                "rds:ListTagsForResource",
                "s3:Get*",
                "s3:List*",
                "sdb:GetAttributes",
                "sdb:List*",
                "sdb:Select*",
                "ses:Get*",
                "ses:List*",
                "sns:Get*",
                "sns:List*",
                "sqs:GetQueueAttributes",
                "sqs:ListQueues",
                "sqs:ReceiveMessage",
                "storagegateway:List*",
                "storagegateway:Describe*",
                "trustedadvisor:Describe*"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": "sns:Publish",
              "Resource": "arn:aws:sns:{{region}}:{{accountid}}:{{topicName}}"
            }
          ]
        }
      },
      {
        "name": "configservice_describeAndS3Delivery",
        "description": "AWS Config is requesting permissions to read your resources' configurations.",
        "docLink": "http://aws.amazon.com/documentation/config",
        "requesters": [
          "configservice",
          "configrules"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "config.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "appstream:Get*",
                "autoscaling:Describe*",
                "cloudformation:DescribeStacks",
                "cloudformation:DescribeStackEvents",
                "cloudformation:DescribeStackResource",
                "cloudformation:DescribeStackResources",
                "cloudformation:GetTemplate",
                "cloudformation:List*",
                "cloudfront:Get*",
                "cloudfront:List*",
                "cloudtrail:DescribeTrails",
                "cloudtrail:GetTrailStatus",
                "cloudwatch:Describe*",
                "cloudwatch:Get*",
                "cloudwatch:List*",
                "config:Put*",
                "directconnect:Describe*",
                "dynamodb:GetItem",
                "dynamodb:BatchGetItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:DescribeTable",
                "dynamodb:ListTables",
                "ec2:Describe*",
                "elasticache:Describe*",
                "elasticbeanstalk:Check*",
                "elasticbeanstalk:Describe*",
                "elasticbeanstalk:List*",
                "elasticbeanstalk:RequestEnvironmentInfo",
                "elasticbeanstalk:RetrieveEnvironmentInfo",
                "elasticloadbalancing:Describe*",
                "elastictranscoder:Read*",
                "elastictranscoder:List*",
                "iam:List*",
                "iam:Get*",
                "kinesis:Describe*",
                "kinesis:Get*",
                "kinesis:List*",
                "opsworks:Describe*",
                "opsworks:Get*",
                "route53:Get*",
                "route53:List*",
                "redshift:Describe*",
                "redshift:ViewQueriesInConsole",
                "rds:Describe*",
                "rds:ListTagsForResource",
                "s3:Get*",
                "s3:List*",
                "sdb:GetAttributes",
                "sdb:List*",
                "sdb:Select*",
                "ses:Get*",
                "ses:List*",
                "sns:Get*",
                "sns:List*",
                "sqs:GetQueueAttributes",
                "sqs:ListQueues",
                "sqs:ReceiveMessage",
                "storagegateway:List*",
                "storagegateway:Describe*",
                "trustedadvisor:Describe*"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:PutObject*"
              ],
              "Resource": [
                "arn:aws:s3:::{{bucketNameWithPrefix}}/AWSLogs/{{accountid}}/*"
              ],
              "Condition": {
                "StringLike": {
                  "s3:x-amz-acl": "bucket-owner-full-control"
                }
              }
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetBucketAcl"
              ],
              "Resource": "arn:aws:s3:::{{bucketName}}"
            }
          ]
        }
      },
      {
        "name": "configservice_describeOnly",
        "description": "AWS Config is requesting permissions to read your resources' configurations.",
        "docLink": "http://aws.amazon.com/documentation/config",
        "requesters": [
          "configservice",
          "configrules"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "config.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "appstream:Get*",
                "autoscaling:Describe*",
                "cloudformation:DescribeStacks",
                "cloudformation:DescribeStackEvents",
                "cloudformation:DescribeStackResource",
                "cloudformation:DescribeStackResources",
                "cloudformation:GetTemplate",
                "cloudformation:List*",
                "cloudfront:Get*",
                "cloudfront:List*",
                "cloudtrail:DescribeTrails",
                "cloudtrail:GetTrailStatus",
                "cloudwatch:Describe*",
                "cloudwatch:Get*",
                "cloudwatch:List*",
                "config:Put*",
                "directconnect:Describe*",
                "dynamodb:GetItem",
                "dynamodb:BatchGetItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:DescribeTable",
                "dynamodb:ListTables",
                "ec2:Describe*",
                "elasticache:Describe*",
                "elasticbeanstalk:Check*",
                "elasticbeanstalk:Describe*",
                "elasticbeanstalk:List*",
                "elasticbeanstalk:RequestEnvironmentInfo",
                "elasticbeanstalk:RetrieveEnvironmentInfo",
                "elasticloadbalancing:Describe*",
                "elastictranscoder:Read*",
                "elastictranscoder:List*",
                "iam:List*",
                "iam:Get*",
                "kinesis:Describe*",
                "kinesis:Get*",
                "kinesis:List*",
                "opsworks:Describe*",
                "opsworks:Get*",
                "route53:Get*",
                "route53:List*",
                "redshift:Describe*",
                "redshift:ViewQueriesInConsole",
                "rds:Describe*",
                "rds:ListTagsForResource",
                "s3:Get*",
                "s3:List*",
                "sdb:GetAttributes",
                "sdb:List*",
                "sdb:Select*",
                "ses:Get*",
                "ses:List*",
                "sns:Get*",
                "sns:List*",
                "sqs:GetQueueAttributes",
                "sqs:ListQueues",
                "sqs:ReceiveMessage",
                "storagegateway:List*",
                "storagegateway:Describe*",
                "trustedadvisor:Describe*"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ]
        }
      },
      {
        "name": "CloudTrail_CloudWatchLogs_Role",
        "description": "AWS CloudTrail will assume the role you create or specify to deliver CloudTrail events to your CloudWatch Logs log group",
        "docLink": "http://docs.aws.amazon.com/awscloudtrail/latest/userguide/attaching_a_role_policy.html",
        "requesters": [
          "cloudtrail"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "cloudtrail.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "AWSCloudTrailCreateLogStream20141101",
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogStream"
              ],
              "Resource": [
                "arn:aws:logs:{{region}}:{{accountid}}:log-group:{{logGroup}}:log-stream:{{logStreamPrefix}}*"
              ]
            },
            {
              "Sid": "AWSCloudTrailPutLogEvents20141101",
              "Effect": "Allow",
              "Action": [
                "logs:PutLogEvents"
              ],
              "Resource": [
                "arn:aws:logs:{{region}}:{{accountid}}:log-group:{{logGroup}}:log-stream:{{logStreamPrefix}}*"
              ]
            }
          ]
        }
      },
      {
        "name": "eb-service-role-0042752868",
        "description": "AWS Elastic Beanstalk needs permission to use resources in your account.",
        "docLink": "http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/AWSHowTo.iam.roles.apps.html",
        "requesters": [
          "eb-0042752868"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "elasticbeanstalk.amazonaws.com"
              },
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "elasticbeanstalk"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "elasticloadbalancing:DescribeInstanceHealth",
                "ec2:DescribeInstances",
                "ec2:DescribeInstanceStatus",
                "ec2:GetConsoleOutput",
                "ec2:AssociateAddress",
                "ec2:DescribeAddresses",
                "ec2:DescribeSecurityGroups",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeScalingActivities",
                "autoscaling:DescribeNotificationConfigurations"
              ],
              "Resource": [
                "*"
              ]
            }
          ]
        }
      },
      {
        "name": "mobileanalytics_magnetopublisher_s3role",
        "description": "This role and its policy provides the necessary permissions for Amazon Mobile Analytics to export your data to the following S3 bucket: {{bucketname}}.<br />If you encounter an issue using an existing role, please create a new role.",
        "docLink": "https://docs.aws.amazon.com/mobileanalytics/latest/ug/welcome.html",
        "requesters": [
          "mobileanalytics",
          "mobileanalytics-0045229998"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": "mobileanalytics.amazonaws.com"
              },
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "{{ExternalId}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Statement": [
            {
              "Resource": [
                "arn:aws:s3:::{{bucketname}}",
                "arn:aws:s3:::{{bucketname}}/*"
              ],
              "Action": [
                "s3:PutObject",
                "s3:PutObjectAcl",
                "s3:PutObjectVersionAcl"
              ],
              "Effect": "Allow"
            }
          ],
          "Version": "2012-10-17"
        }
      },
      {
        "name": "rdsenhanced monitoring-role-0057151370",
        "description": "Provides Write-Only access to AWS Services and Resources ",
        "docLink": "",
        "requesters": [
          "rdsenhanced monitoring-0057151370"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::{{accountid}}:user/ENHANCED_MONITORING_IAM_USER"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:PutRetentionPolicy"
              ],
              "Resource": [
                "arn:aws:logs:*:*:log-group:RDS*"
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogStreams",
                "logs:GetLogEvents"
              ],
              "Resource": [
                "arn:aws:logs:*:*:log-group:RDS*:log-stream:*"
              ]
            }
          ]
        }
      },
      {
        "name": "awsevents-role-0058815527",
        "description": "Provides access to your AWS resources for the built-in actions.",
        "docLink": "http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-service.html",
        "requesters": [
          "awsevents-0058815527"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": [
                  "automation.amazonaws.com"
                ]
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "ec2:Describe*",
                "ec2:RebootInstances",
                "ec2:StopInstances",
                "ec2:TerminateInstances",
                "ec2:CreateSnapshot"
              ],
              "Resource": "*"
            }
          ]
        }
      },
      {
        "name": "awsevents-role-0058798375",
        "description": "Provides access to AWS Events to invoke your target AWS resources.",
        "docLink": "http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-service.html",
        "requesters": [
          "awsevents-0058798375"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": [
                  "events.amazonaws.com"
                ]
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "kinesis:PutRecord",
                "kinesis:PutRecords"
              ],
              "Resource": [
                "*"
              ]
            }
          ]
        }
      },
      {
        "name": "aws-iot-role-logging",
        "description": "Provides write access to AWS Services and Resources",
        "docLink": "",
        "requesters": [
          "aws-iot"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": [
                  "iot.amazonaws.com"
                ]
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:PutMetricFilter",
                "logs:PutRetentionPolicy"
              ],
              "Resource": [
                "*"
              ]
            }
          ]
        }
      },
      {
        "name": "aws-iot-role-dynamoPut",
        "description": "Provides write access to AWS Services and Resources",
        "docLink": "",
        "requesters": [
          "aws-iot"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": [
                  "iot.amazonaws.com"
                ]
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": {
            "Effect": "Allow",
            "Action": "dynamodb:PutItem",
            "Resource": "arn:aws:dynamodb:{{region}}:{{account_id}}:table/{{table}}"
          }
        }
      },
      {
        "name": "aws-iot-role-kinesisPutRecord",
        "description": "Provides write access to AWS Services and Resources",
        "docLink": "",
        "requesters": [
          "aws-iot"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": [
                  "iot.amazonaws.com"
                ]
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": {
            "Effect": "Allow",
            "Action": "kinesis:PutRecord",
            "Resource": "arn:aws:kinesis:{{region}}:{{account_id}}:stream/{{stream}}"
          }
        }
      },
      {
        "name": "aws-iot-role-lambdaInvokeFunction",
        "description": "Provides write access to AWS Services and Resources",
        "docLink": "",
        "requesters": [
          "aws-iot"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": [
                  "iot.amazonaws.com"
                ]
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": {
            "Effect": "Allow",
            "Action": "lambda:InvokeFunction",
            "Resource": "arn:aws:lambda:{{region}}:{{account_id}}:function:{{function_name}}"
          }
        }
      },
      {
        "name": "aws-iot-role-iotPublish",
        "description": "Provides write access to AWS Services and Resources",
        "docLink": "",
        "requesters": [
          "aws-iot"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": [
                  "iot.amazonaws.com"
                ]
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": {
            "Effect": "Allow",
            "Action": "iot:Publish",
            "Resource": "arn:aws:iot:{{region}}:{{account_id}}:topic/{{topic}}"
          }
        }
      },
      {
        "name": "aws-iot-role-s3PutObject",
        "description": "Provides write access to AWS Services and Resources",
        "docLink": "",
        "requesters": [
          "aws-iot"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": [
                  "iot.amazonaws.com"
                ]
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": {
            "Effect": "Allow",
            "Action": "s3:PutObject",
            "Resource": "arn:aws:s3:::{{bucket}}/{{key}}"
          }
        }
      },
      {
        "name": "aws-iot-role-snsPublish",
        "description": "Provides write access to AWS Services and Resources",
        "docLink": "",
        "requesters": [
          "aws-iot"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": [
                  "iot.amazonaws.com"
                ]
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": {
            "Effect": "Allow",
            "Action": "sns:Publish",
            "Resource": "arn:aws:sns:{{region}}:{{account_id}}:{{topic}}"
          }
        }
      },
      {
        "name": "aws-iot-role-sqsSend",
        "description": "Provides write access to AWS Services and Resources",
        "docLink": "",
        "requesters": [
          "aws-iot"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": [
                  "iot.amazonaws.com"
                ]
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": {
            "Effect": "Allow",
            "Action": "sqs:SendMessage",
            "Resource": "arn:aws:sqs:{{region}}:{{account_id}}:{{queue}}"
          }
        }
      },
      {
        "name": "aws-iot-role-firehosePut",
        "description": "Provides write access to AWS Services and Resources",
        "docLink": "",
        "requesters": [
          "aws-iot"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": [
                  "iot.amazonaws.com"
                ]
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": {
            "Effect": "Allow",
            "Action": "firehose:PutRecord",
            "Resource": "arn:aws:firehose:{{region}}:{{account_id}}:deliverystream/{{stream}}"
          }
        }
      },
      {
        "name": "aws-iot-role-es",
        "description": "Provides write access to AWS Services and Resources",
        "docLink": "",
        "requesters": [
          "aws-iot"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": [
                  "iot.amazonaws.com"
                ]
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": {
            "Effect": "Allow",
            "Action": "es:ESHttpPut",
            "Resource": [
              "arn:aws:es:{{region}}:{{account_id}}:domain:{{domain}}/*"
            ]
          }
        }
      },
      {
        "name": "aws-iot-role-cloudwatch-alarm",
        "description": "Provides write access to AWS Services and Resources",
        "docLink": "",
        "requesters": [
          "aws-iot"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": [
                  "iot.amazonaws.com"
                ]
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": {
            "Effect": "Allow",
            "Action": "cloudwatch:SetAlarmState",
            "Resource": [
              "arn:aws:cloudwatch:{{region}}:{{account_id}}:alarm:{{alarm_name}}"
            ]
          }
        }
      },
      {
        "name": "aws-iot-role-cloudwatch-metrics",
        "description": "Provides write access to AWS Services and Resources",
        "docLink": "",
        "requesters": [
          "aws-iot"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": [
                  "iot.amazonaws.com"
                ]
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": {
            "Effect": "Allow",
            "Action": "cloudwatch:PutMetricData",
            "Resource": [
              "*"
            ]
          }
        }
      },
      {
        "name": "amazoninspector-role-0058132011",
        "description": "Provides access to describe Amazon EC2 instances.",
        "docLink": "",
        "requesters": [
          "amazoninspector-0058132011"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "{{ExternalId}}"
                }
              },
              "Principal": {
                "Service": [
                  "{{service_principal}}"
                ]
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "ec2:DescribeInstances"
              ],
              "Resource": [
                "*"
              ]
            }
          ]
        }
      },
      {
        "name": "ec2spotconsole-role-0058734074",
        "description": "Provides permissions to request and terminate Spot Instances on your behalf",
        "docLink": "",
        "requesters": [
          "ec2spotconsole-0058734074"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": [
                  "spotfleet.amazonaws.com"
                ]
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "ec2:DescribeImages",
                "ec2:DescribeSubnets",
                "ec2:RequestSpotInstances",
                "ec2:TerminateInstances"
              ],
              "Resource": [
                "*"
              ]
            }
          ]
        }
      },
      {
        "name": "cloudwatchlogs-role-0058524269",
        "description": "Lambda execution role permissions",
        "docLink": "",
        "requesters": [
          "cloudwatchlogs-0058524269"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": [
                "arn:aws:logs:*:*:*"
              ]
            },
            {
              "Effect": "Allow",
              "Action": "es:ESHttpPost",
              "Resource": "{{ResourceARN}}"
            }
          ]
        }
      },
      {
        "name": "lambda-configrules",
        "description": "Lambda execution role permissions",
        "docLink": "https://docs.aws.amazon.com/console/lambda/executionrole",
        "requesters": [
          "lambda"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "{{servicePrincipal}}"
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": "arn:aws:logs:*:*:*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetObject"
              ],
              "Resource": "arn:aws:s3:::*/AWSLogs/*/Config/*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "config:Describe*",
                "config:Get*",
                "config:List*",
                "config:Put*"
              ],
              "Resource": "*"
            }
          ]
        }
      },
      {
        "name": "marketplace-commerce-analytics-role-0062356512",
        "description": "Provides access to AWS Services and Resources",
        "docLink": "http://awsmp-loadforms.s3.amazonaws.com/AWS_Marketplace_-_Seller_Guide.pdf",
        "requesters": [
          "marketplace-commerce-analytics-0062356512"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::452565589796:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "{{externalID}}"
                }
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "s3:GetBucketLocation",
              "Resource": "arn:aws:s3:::{{s3BucketName}}"
            },
            {
              "Effect": "Allow",
              "Action": "s3:PutObject",
              "Resource": "arn:aws:s3:::{{s3BucketName}}/*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "sns:Publish",
                "sns:GetTopicAttributes"
              ],
              "Resource": "{{snsTopicARN}}"
            },
            {
              "Effect": "Allow",
              "Action": [
                "iam:GetRolePolicy",
                "iam:ListAttachedRolePolicies",
                "iam:ListRolePolicies"
              ],
              "Resource": "arn:aws:iam::{{awsAccountId}}:role/MarketplaceCommerceAnalyticsRole"
            },
            {
              "Effect": "Allow",
              "Action": [
                "iam:GetPolicy",
                "iam:GetPolicyVersion"
              ],
              "Resource": "arn:aws:iam::{{awsAccountId}}:policy/MarketplaceCommerceAnalyticsPolicy"
            }
          ]
        }
      },
      {
        "name": "importexport-role-0069496168",
        "description": "Provides read access to AWS Services and Resources",
        "docLink": "",
        "requesters": [
          "importexport-0069496168"
        ],
        "trustPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "AWSIE"
                }
              },
              "Principal": {
                "Service": [
                  "importexport.amazonaws.com"
                ]
              }
            }
          ]
        },
        "permissions": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket"
              ],
              "Resource": "arn:aws:s3:::*"
            }
          ]
        }
      }
    ]
  }
}