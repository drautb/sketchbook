global
  quiet
  daemon
  log-send-hostname
  log 127.0.0.1:10514 local2 debug info
  log 127.0.0.1:10514 local3 notice emerg
  user  drautb
  group staff
  maxconn 65000
  stats socket /run/haproxy/stats.sock mode 600 level operator
  stats timeout 2m

defaults
  mode  http
  option  redispatch
  option  allbackups
  option  dontlognull
  option  log-health-checks
  retries 3
  maxconn 65000
  timeout client  300000
  timeout server  300000
  timeout connect 5000
  # ELBs have a 1 to 3600 s idle timeout, making haproxy Tt #s useless
  # https://aws.amazon.com/blogs/aws/elb-idle-timeout-control/
  # http://cbonte.github.io/haproxy-dconv/configuration-1.5.html#8.4
  log-format  {\"date\":\"%t\",\"lbtype\":\"dtm\",\"lbname\":\"%H\",\"cip\":\"%ci\",\"pid\":\"%pid\",\"name_f\":\"%f\",\"name_b\":\"%b\",\"name_s\":\"%s\",\"Tw\":\"%Tw\",\"Tc\":\"%Tc\",\"Tr\":\"%Tr\",\"scode\":\"%ST\",\"bytes_c\":\"%U\",\"bytes_s\":\"%B\",\"termstat\":\"%ts\",\"con_act\":\"%ac\",\"con_frnt\":\"%fc\",\"con_back\":\"%bc\",\"con_srv\":\"%sc\",\"rtry\":\"%rc\",\"queue_s\":\"%sq\",\"queue_b\":\"%bq\",\"rqst\":\"%r\",\"hdrs\":\"%hr\",\"cookies\":\"%CC\",\"src_ip\":\"%[capture.req.hdr(1)]\",\"user_agent\":\"%[capture.req.hdr(5)]\",\"accept_lang\":\"%[capture.req.hdr(6)]\",\"protocol\":\"%[capture.req.hdr(2)]\"}

listen haproxy_stats
  bind  :50000
  no log
  stats uri /
  stats enable

listen health_url
  bind  :60000
  mode  health

#{{frontend beings}}

frontend localhost
  bind  :10001
  log 127.0.0.1:10514 local2 debug info
  mode  http

  # CORS Preflight Header Capture
  # This capture request header must be the first in the list. It is used to modify http-response headers.
  capture request header Origin             len 128
  capture request header X-Forwarded-For    len 15
  capture request header X-Forwarded-Proto  len 5
  capture request header X-Forwarded-Port   len 6
  capture request header Host               len 64
  capture request header User-Agent         len 64
  capture request header Accept-language    len 64
  capture request header Accept             len 64

  # Protocol ACL(s)
  acl is-http                hdr(X-Forwarded-Proto)     http

  http-request set-header X-Orig-Port  %[req.hdr(X-Forwarded-Port)]
  http-request set-header X-Orig-Proto %[req.hdr(X-Forwarded-Proto)]

  # ELBs munge Host => host
  # Heroku returns "Heroku | No such app" 404 if not "Host"
  # RFCs 2616 (and Obsolete:r 7230) : "case-insensitive field name"
  http-request set-header fOo %[req.hdr(host)]
  http-request del-header hoSt
  http-request add-header Host %[req.hdr(FOO)]
  http-request del-header foO

use_backend localhost:first if { path_reg ^/first($|/) }
use_backend localhost:second if { path_reg ^/second($|/) }
use_backend localhost:third if { path_reg ^/third($|/) }
use_backend localhost:fourth if { path_reg ^/fourth($|/) }
default_backend localhost:catchall

backend localhost:first
  log global
  balance roundrobin
  reqrep ^([^\ ]*)\ /first/(.*) \1\ /\2
  reqdel X-Orig-Base:\ .*
  reqadd X-Orig-Base:\ /first
  server first localhost:8110

backend localhost:second
   log global
   balance roundrobin
   reqrep ^([^\ ]*)\ /second/(.*) \1\ /\2
   reqdel X-Orig-Base:\ .*
   reqadd X-Orig-Base:\ /second
   server first localhost:8120

backend localhost:third
    log global
    balance roundrobin
    reqrep ^([^\ ]*)\ /third/(.*) \1\ /\2
    reqdel X-Orig-Base:\ .*
    reqadd X-Orig-Base:\ /third
    server first localhost:8130

backend localhost:fourth
    log global
    balance roundrobin
    reqrep ^([^\ ]*)\ /fourth/(.*) \1\ /\2
    reqdel X-Orig-Base:\ .*
    reqadd X-Orig-Base:\ /fourth
    server first localhost:8140

backend localhost:catchall
  balance leastconn
